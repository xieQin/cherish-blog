{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-keep/source/images/avatar.svg","path":"images/avatar.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/images/bg.svg","path":"images/bg.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/images/loading.svg","path":"images/loading.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/images/upyun.png","path":"images/upyun.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-brands-400.eot","path":"webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-brands-400.svg","path":"webfonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-brands-400.ttf","path":"webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-brands-400.woff","path":"webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-brands-400.woff2","path":"webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-regular-400.eot","path":"webfonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-regular-400.svg","path":"webfonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-regular-400.ttf","path":"webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-regular-400.woff","path":"webfonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-regular-400.woff2","path":"webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-solid-900.eot","path":"webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-solid-900.svg","path":"webfonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-solid-900.ttf","path":"webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-solid-900.woff","path":"webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-solid-900.woff2","path":"webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/js/back2top.js","path":"js/back2top.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/js/code-copy.js","path":"js/code-copy.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/js/dark-light-toggle.js","path":"js/dark-light-toggle.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/js/header-shrink.js","path":"js/header-shrink.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/js/lazyload.js","path":"js/lazyload.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/js/left-side-toggle.js","path":"js/left-side-toggle.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/css/common/animated.styl","path":"css/common/animated.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/css/common/basic.styl","path":"css/common/basic.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/css/common/keep-theme.styl","path":"css/common/keep-theme.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/css/common/markdown.styl","path":"css/common/markdown.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/css/common/variables.styl","path":"css/common/variables.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/css/layout/archive-content.styl","path":"css/layout/archive-content.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/css/layout/article-content.styl","path":"css/layout/article-content.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/css/layout/category-content.styl","path":"css/layout/category-content.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/css/layout/category-list.styl","path":"css/layout/category-list.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/css/layout/page.styl","path":"css/layout/page.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/css/layout/home-content.styl","path":"css/layout/home-content.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/css/layout/tag-content.styl","path":"css/layout/tag-content.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/js/libs/anime.min.js","path":"js/libs/anime.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/js/libs/pjax.min.js","path":"js/libs/pjax.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/css/common/codeblock/code-theme.styl","path":"css/common/codeblock/code-theme.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/css/common/codeblock/highlight.styl","path":"css/common/codeblock/highlight.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-keep/source/css/common/codeblock/copy-code.styl","path":"css/common/codeblock/copy-code.styl","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/CSS绘制三角形.md","hash":"2c0a6e68725337378250bbcd57d2fd4d51978da2","modified":1662648666959},{"_id":"source/_posts/CommonJs、AMD、UMD.md","hash":"875d0d4daf0c7292590a018bb7b3b4d3c7db200e","modified":1662648666960},{"_id":"source/_posts/ES2015-总结.md","hash":"b8aae798b4519a4a88574b4f420e92af49203932","modified":1662648666960},{"_id":"source/_posts/Eslint使用备查.md","hash":"6b98a222c584ac99feb7c5ce1d2ba78d3674503a","modified":1662648666961},{"_id":"source/_posts/Generator函数.md","hash":"971bf756ee4d3b98f602e5f06bda06d699d9032c","modified":1662648666961},{"_id":"source/_posts/Javascript-继承.md","hash":"eedf3b1c79a5a2c63aad9ec7508c64372652e239","modified":1662648666962},{"_id":"source/_posts/Javascript事件.md","hash":"408bb2321f590697e32626900c5413d6a560eb9a","modified":1662648666962},{"_id":"source/_posts/Javascript面向对象编程.md","hash":"9a4e44dca629c812c55bfec52051f86c744c0ef4","modified":1662648666963},{"_id":"source/_posts/Jquery源码阅读-二.md","hash":"81e540aa35052e0aae227e5ea3342a9b7a11e851","modified":1662648666963},{"_id":"source/_posts/Jquery源码阅读.md","hash":"908a4291ff133d4921ba3e149fe35dbf38f8a4f3","modified":1662648666964},{"_id":"source/_posts/Markdown语法总结.md","hash":"e90457e52ee76b078103501915c76f0fedab9b21","modified":1662648666964},{"_id":"source/_posts/React-Native学习总结.md","hash":"9c90a5553ec5c2bb2c58a13e9310492c382bdcd9","modified":1662648666965},{"_id":"source/_posts/React学习总结.md","hash":"ea457f943070f5737a6493c9a6e075a4440b3d72","modified":1662648666966},{"_id":"source/_posts/Redux学习总结.md","hash":"a29ebdb992202ead3af6b3e6e3c39715925112d9","modified":1662648666966},{"_id":"source/_posts/Touch手势.md","hash":"918c28a0dcd5b84e71c7f634660905107acf13ee","modified":1662648666967},{"_id":"source/_posts/Vue.md","hash":"ebc858aee9360d9c0cca95771ed385c484d9af2f","modified":1662648666967},{"_id":"source/_posts/Vue与Vuex.md","hash":"387675e30dca5c4fb0148d840202a5a2f7dfbdd9","modified":1662648666968},{"_id":"source/_posts/datatables-使用.md","hash":"01aeda74f9602db9bbaa3b16bd3bf090a443f052","modified":1662648666968},{"_id":"source/_posts/express与koa.md","hash":"fb3aa4148e083e4a550651c939a4db57cc72244f","modified":1662648666969},{"_id":"source/_posts/flexbox伸缩盒布局.md","hash":"e6c8f865bf51616f7014978b13ef749bbc7c80e6","modified":1662648666969},{"_id":"source/_posts/react-router使用指南.md","hash":"a6cb30a6a3206550fe656acce5a4de65a28b1f29","modified":1662648666969},{"_id":"source/_posts/使用Cypress进行前端e2e测试.md","hash":"a3f86e75d63ae861d67d78fcbcc706fd454e5387","modified":1662648666970},{"_id":"source/_posts/使用React Hooks进行状态管理.md","hash":"9b179a41be5f04cfedd71a1ebb8ed73c566c585d","modified":1662648666970},{"_id":"source/_posts/使用nodejs搭建web服务器.md","hash":"bc03e8d8f243c15aa2fb54afdb291aba537d84a8","modified":1662648666970},{"_id":"source/_posts/前端工程师技能checklist.md","hash":"3b5dbe5d810c79949fb98e4ec1b15bd115259c98","modified":1662648666971},{"_id":"source/_posts/前端项目接入代码测试覆盖率.md","hash":"08f7a1656f1f78727e1d82b82e496142fc298ca7","modified":1662648666971},{"_id":"source/_posts/客户端检测.md","hash":"9b5d481664885ae3b3d8ba14d4cb23343e8d864e","modified":1662648666972},{"_id":"source/_posts/用generator实现异步操作.md","hash":"73ea5cf9c59fd7d8d248697640085e3600c16abe","modified":1662648666973},{"_id":"source/_posts/点击事件绑定.md","hash":"176754b81d5409464cfc136947939d3d8f753248","modified":1662648666972},{"_id":"source/_posts/防止重复发送ajax的方法.md","hash":"3d1415da60877ee267e22c9eb5d7db3e3e4ba745","modified":1662648666974},{"_id":"source/about/index.md","hash":"5ca0a30566676d342e2b502f762372ecd4bf9978","modified":1662650558822},{"_id":"source/links/index.md","hash":"45a968f539d4abab87b088b95758cc939f4360c1","modified":1662648666975},{"_id":"source/resume/index.md","hash":"67e72bc593be06c79733bbb22bb302d1e2bb3b36","modified":1662648783530},{"_id":"source/_posts/由Babel了解编译原理.md","hash":"9910c28159ad24410a4ca5fd1c46d629e6f59343","modified":1662648666973},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"9a94875cbf4c27fbe2e63da0496242addc6d2876","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"d2772ece6d4422ccdaa0359c3e07588834044052","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"414914ebb159fac1922b056b905e570ac7521925","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"dfd555c00e85ffc4207c88968d12b219c1f086ec","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f215d92a882247a7cc5ea80b241bedfcec0ea6ca","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"c1acd247e14588cdf101a69460cb8319c18cd078","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"581b0cbefdaa5f894922133989dd2d3bf71ded79","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"9c451e5efd72c5bb8b56e8c2b94be731e99db05b","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"80759482d07063c091e940f964a1cf6693d3d406","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1662647406564},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1662647406564},{"_id":"themes/next/.eslintrc.json","hash":"9c0762486f24a8c5e60f8b6c875e4c4728942649","modified":1662646591104},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1662646591104},{"_id":"themes/next/.gitattributes","hash":"ec43734985e1cafd53d88ded3020103f7416123c","modified":1662646591105},{"_id":"themes/next/LICENSE.md","hash":"68fc9a03d50fd4b5ea97092b05967d1819dea2c4","modified":1662646591107},{"_id":"themes/next/README.md","hash":"56638e4978154a2f2a3f03ba84047b77b4a499cc","modified":1662646591108},{"_id":"themes/next/_vendors.yml","hash":"6a7bab46b4fc9d7722e29e2dac549def0d8dcaa3","modified":1662646591108},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1662646591108},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1662646591107},{"_id":"themes/next/package.json","hash":"bbe3995c35b05028273e1def2394c3333a270654","modified":1662646591120},{"_id":"themes/next/_config.yml","hash":"a4829c703f4ad1fc4ae16b28ffabded43af7aba1","modified":1662646591108},{"_id":"themes/next/renovate.json","hash":"cb29cc16e61b0b8a6dac34657d76822ae29ad5aa","modified":1662646591120},{"_id":"themes/next/layout/_layout.njk","hash":"20e4160cd0deb4fa272cc3aed0f43520b3cf4a9c","modified":1662646591112},{"_id":"themes/next/docs/LICENSE.txt","hash":"f5b14f791b7cfa1d16da981d929152e088a5d1b8","modified":1662646591109},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1662646591108},{"_id":"themes/next/docs/AUTHORS.md","hash":"a648823121563c34a177ae91f5a774b5e29f01a0","modified":1662646591109},{"_id":"themes/next/layout/category.njk","hash":"c68b7343d0f8145010f93351908cc36ef6212ec1","modified":1662646591120},{"_id":"themes/next/layout/archive.njk","hash":"d759f4d2cf5ddc6875ea250113a00662c1caf6d1","modified":1662646591120},{"_id":"themes/next/layout/post.njk","hash":"6abeb85fb3e4c382ed4bb6049b12a807e6226e67","modified":1662646591120},{"_id":"themes/next/layout/tag.njk","hash":"9e16ba20c28a7f2c6bc75aa427f48122301a30aa","modified":1662646591120},{"_id":"themes/next/layout/page.njk","hash":"6c40aa438c658eb7f0cd0f6a759f18b43e7e8f93","modified":1662646591120},{"_id":"themes/next/languages/README.md","hash":"b2567e32805dda79601157351a07e5ca9fe01315","modified":1662646591110},{"_id":"themes/next/languages/bn.yml","hash":"fccbf2855392186e11daa8590121073594037b7b","modified":1662646591110},{"_id":"themes/next/languages/en.yml","hash":"814d81c27fed736055ee300e0a6505b26ff4313c","modified":1662646591110},{"_id":"themes/next/languages/ar.yml","hash":"bca66db21c015dbd32970d8708b898518a773e1e","modified":1662646591110},{"_id":"themes/next/languages/de.yml","hash":"4be7b8b76c81bf1853eb36d2e874b17546a0e792","modified":1662646591110},{"_id":"themes/next/languages/default.yml","hash":"814d81c27fed736055ee300e0a6505b26ff4313c","modified":1662646591110},{"_id":"themes/next/languages/es.yml","hash":"b813da5aed9d73b809133db4dfb08f90ec56afd9","modified":1662646591110},{"_id":"themes/next/languages/fa.yml","hash":"6456d40dd42f44101d9d6e7054e9884e9163f948","modified":1662646591110},{"_id":"themes/next/languages/fr.yml","hash":"b15dc05afdc94de02e5d3fee4f8d3dc5594dd37e","modified":1662646591110},{"_id":"themes/next/languages/it.yml","hash":"c1eeab4992c76bfd436bb205ce58b1cfeef55ee6","modified":1662646591111},{"_id":"themes/next/languages/ja.yml","hash":"d48c4157e0e02e847aac7b513580d3364c81948c","modified":1662646591111},{"_id":"themes/next/languages/ko.yml","hash":"819c19eb9d142e5411f77cf3821d90f740ee114a","modified":1662646591111},{"_id":"themes/next/languages/nl.yml","hash":"ecb8e39c6225f3c068a5fdd569ee7dafd5c41a1f","modified":1662646591111},{"_id":"themes/next/languages/pt-BR.yml","hash":"a1f27b3a592fc58f17d247f5563ff4a90a3da5f2","modified":1662646591111},{"_id":"themes/next/languages/pt.yml","hash":"63a3e1e728ba5e6e22150de7331bb8a654f34960","modified":1662646591111},{"_id":"themes/next/languages/id.yml","hash":"14e794db4eca36b257994d81eb513e61d1edcbd6","modified":1662646591110},{"_id":"themes/next/languages/ru.yml","hash":"8c2b6361f2de17561c1a3eede2bf47b4e2ba6ce5","modified":1662646591111},{"_id":"themes/next/languages/si.yml","hash":"615d18d044f44df476d6bfbf73f7b0edc2632168","modified":1662646591111},{"_id":"themes/next/languages/tk.yml","hash":"519239e35c3bda7b62b00ff5d34644f45b16fe6a","modified":1662646591111},{"_id":"themes/next/languages/tr.yml","hash":"0bebba73d6f06c7dad61f80c0d7ad5f6f1791a01","modified":1662646591111},{"_id":"themes/next/languages/vi.yml","hash":"c669c34da544a563ceae3e196addc9df6a78e024","modified":1662646591112},{"_id":"themes/next/languages/zh-CN.yml","hash":"5a3ab21210304efef736e96bad254f789f42c567","modified":1662646591112},{"_id":"themes/next/languages/uk.yml","hash":"7dd24580c0865c5a7bc4d391855045366a598936","modified":1662646591111},{"_id":"themes/next/languages/zh-HK.yml","hash":"f195bb0502ffe66e850077a1af1033455ea65f93","modified":1662646591112},{"_id":"themes/next/docs/ru/README.md","hash":"6c82bfd2ec8248c248da701f091b548a7a133580","modified":1662646591109},{"_id":"themes/next/languages/zh-TW.yml","hash":"92256b90028de9a1e79c6bc0e5885b93e7fb4b17","modified":1662646591112},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7a06d443f374bd1e84294067a0ac796afd9fbe60","modified":1662646591109},{"_id":"themes/next/docs/zh-CN/README.md","hash":"ccf27b9249524b9fec1c15497b4353c8d1748c6c","modified":1662646591109},{"_id":"themes/next/layout/_macro/post-collapse.njk","hash":"1a30d751871dabfa80940042ddb1f77d07d830b9","modified":1662646591112},{"_id":"themes/next/layout/_macro/sidebar.njk","hash":"eb786e8b35e354287cda345c524cd35ec955f692","modified":1662646591113},{"_id":"themes/next/layout/_macro/post.njk","hash":"434b3e76a040a816169e1929657e4176e7b8164c","modified":1662646591112},{"_id":"themes/next/layout/_partials/comments.njk","hash":"d0c470b0f6690aa217e9ada848c5e2e73fb27c6f","modified":1662646591113},{"_id":"themes/next/layout/_partials/footer.njk","hash":"19713f472972caac33ae5fbcfe9105da61257de4","modified":1662646591113},{"_id":"themes/next/layout/_partials/languages.njk","hash":"e43f22198cccb5f6e306b1ce0d28d12a4fb891f8","modified":1662646591114},{"_id":"themes/next/layout/_partials/pagination.njk","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1662646591115},{"_id":"themes/next/layout/_partials/widgets.njk","hash":"852a750524decf1efa587cd52b09e387ed8315de","modified":1662646591116},{"_id":"themes/next/layout/_scripts/index.njk","hash":"6668878a0f9a1166c6a879755f54a08d942da870","modified":1662646591116},{"_id":"themes/next/layout/_scripts/vendors.njk","hash":"be80b9fe415a9a09d74c28e230995fd292dfc123","modified":1662646591116},{"_id":"themes/next/layout/_third-party/fancybox.njk","hash":"844559f46e2ff1c8be234d5763703106e2072a7b","modified":1662646591118},{"_id":"themes/next/layout/_third-party/index.njk","hash":"d41eeb262978e34de4679d8971a9e7ac5d90ecbc","modified":1662646591118},{"_id":"themes/next/layout/_third-party/quicklink.njk","hash":"0efed71ed530447718c4ea5bbd5fc8695b0b0d5f","modified":1662646591119},{"_id":"themes/next/layout/_third-party/pace.njk","hash":"d7ad5714079f7f65446f880baf14722435ca9061","modified":1662646591118},{"_id":"themes/next/scripts/events/index.js","hash":"3ce10d4cce94e3d4c482c2e18bb6f0f0ca380d3d","modified":1662646591120},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"872f01cb10e422a648ea505436532e776e92926b","modified":1662646591123},{"_id":"themes/next/scripts/filters/locals.js","hash":"9eb5310664759931287dd28ea39165dfb67f12ed","modified":1662646591123},{"_id":"themes/next/scripts/filters/minify.js","hash":"f160e39943e39d7276da86adb47c3f08e5f22c7a","modified":1662646591124},{"_id":"themes/next/layout/_third-party/rating.njk","hash":"1bcdbc7fde26d6d9ef4e7fa43ffcff5a9506b20e","modified":1662646591119},{"_id":"themes/next/scripts/filters/post.js","hash":"30e03a1d4828259f82d46e64cbfe2955b6cff9a9","modified":1662646591124},{"_id":"themes/next/scripts/helpers/engine.js","hash":"d292b78485e8e8055712b0ed6de7cf559c5fbdcd","modified":1662646591124},{"_id":"themes/next/scripts/helpers/font.js","hash":"3394185a7f0393c16ce52c8028f90da3e9239c55","modified":1662646591124},{"_id":"themes/next/scripts/helpers/navigation.js","hash":"78107021101553c3d23e89290f7530b60cf4aa86","modified":1662646591124},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"226fccbe9c93265e65a300e3cb4bf6f9065cfdd7","modified":1662646591124},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"a11b71ba0c5012e2cdcab31c15439156b215563e","modified":1662646591124},{"_id":"themes/next/scripts/tags/button.js","hash":"c6ad2ed544fbb25ecb5d820c36e76302504271b7","modified":1662646591124},{"_id":"themes/next/scripts/helpers/next-vendors.js","hash":"afdd6a188a74c188f0dd154fac70efd4080ca262","modified":1662646591124},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"935a311142a409c1896b3ae3f01fe7a9e2db1134","modified":1662646591124},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"92c19d796bdb3320df9caea59bf52df7a95d9da9","modified":1662646591124},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"9ed799c329abf830f623689d7e136991256a24ca","modified":1662646591125},{"_id":"themes/next/scripts/tags/index.js","hash":"17f9451ce1f10f78437f52218757d38d4e1591b0","modified":1662646591125},{"_id":"themes/next/scripts/tags/label.js","hash":"8a73348186113bae0a51ea2f891c1bb882fab05a","modified":1662646591125},{"_id":"themes/next/scripts/tags/link-grid.js","hash":"18a483c2d5afd701f6080ffdddf2d1321370336c","modified":1662646591125},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"4fb01ca650fa8b256b8d48f50dc1b18350bd3d6d","modified":1662646591125},{"_id":"themes/next/scripts/tags/note.js","hash":"7b94ddb46b7d4b0fe815f2fbe4bd375f07f55363","modified":1662646591125},{"_id":"themes/next/scripts/tags/pdf.js","hash":"344636b6fd7e27e8831c1e194039afc0d61931cd","modified":1662646591125},{"_id":"themes/next/scripts/tags/tabs.js","hash":"0eabe51da40b4b13e16419c8fe02452d9a4fef73","modified":1662646591125},{"_id":"themes/next/scripts/tags/video.js","hash":"2ee926448583be8f95af1f2884ae2c9c4830151d","modified":1662646591125},{"_id":"themes/next/source/css/_colors.styl","hash":"3c6798c10cc220d83481cb3f3782e78558cee789","modified":1662646591125},{"_id":"themes/next/source/css/_mixins.styl","hash":"32d31cb5a155681c19f5ad0bb56dcb08429f93ef","modified":1662646591132},{"_id":"themes/next/source/css/main.styl","hash":"78ce791cc4ac95386cf6839ca72f5f7b51f86ee9","modified":1662646591134},{"_id":"themes/next/source/css/noscript.styl","hash":"263eddabfae40e54c0591e7baa8403ade8cdd56d","modified":1662646591134},{"_id":"themes/next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1662646591134},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1662646591134},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1662646591134},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1662646591134},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1662646591134},{"_id":"themes/next/source/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1662646591134},{"_id":"themes/next/source/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1662646591134},{"_id":"themes/next/source/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1662646591134},{"_id":"themes/next/source/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1662646591134},{"_id":"themes/next/source/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1662646591135},{"_id":"themes/next/source/js/motion.js","hash":"f7c825cbff11885fa0dffa64824fd00e505d6a8d","modified":1662646591135},{"_id":"themes/next/source/js/pjax.js","hash":"919f5281c4a04d11cfd94573ecf57b3dbabd3cc8","modified":1662646591135},{"_id":"themes/next/source/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1662646591135},{"_id":"themes/next/test/index.js","hash":"6bf0289846538be3e9a63809af98f00e1fbdd90b","modified":1662646591138},{"_id":"themes/next/test/helpers/font.js","hash":"342ef3c6fd2dcca2a8802a516ed6d7f389fd2ca2","modified":1662646591138},{"_id":"themes/next/source/js/next-boot.js","hash":"da0f07f9eaaa83de70128b0feaea3fdadb90457a","modified":1662646591135},{"_id":"themes/next/test/tags/button.js","hash":"48f2aa4c513e9e24bd6a811410520b74cd7ea88b","modified":1662646591138},{"_id":"themes/next/source/js/utils.js","hash":"200088bfd042f5304b2a04befab0829148845e0e","modified":1662646591138},{"_id":"themes/next/test/helpers/next-url.js","hash":"a91d880cb75e0a8e65a7be4c7362b2c8ebfb7c4f","modified":1662646591138},{"_id":"themes/next/test/helpers/index.js","hash":"63ba28afed697f7b3574436b1133b8ecc9c0c357","modified":1662646591138},{"_id":"themes/next/test/tags/index.js","hash":"e8779e54f0979b221858f8bb74dd081bb503b910","modified":1662646591139},{"_id":"themes/next/test/tags/caniuse.js","hash":"aa5e728445caeaf7c2ccd0f3fcb2cad0c93ca6d1","modified":1662646591138},{"_id":"themes/next/test/tags/center-quote.js","hash":"7667342fd1a1417eaf6a254012b84ae40e8d13dd","modified":1662646591138},{"_id":"themes/next/test/tags/group-pictures.js","hash":"5c68ae0184f9da6e00ba199f2554d503d8e6da71","modified":1662646591139},{"_id":"themes/next/test/tags/label.js","hash":"4ebf3698c258ca978b997acbdd0dece44069c09d","modified":1662646591139},{"_id":"themes/next/test/tags/note.js","hash":"3dcfcd65bf9f326972ea7571fdb1444200f5d07e","modified":1662646591139},{"_id":"themes/next/test/tags/mermaid.js","hash":"ab77be5f3c6d9a57c7b9dda6decf1906a736fef9","modified":1662646591139},{"_id":"themes/next/test/tags/link-grid.js","hash":"43d298fafb7c45a874b766d443843bd26346e689","modified":1662646591139},{"_id":"themes/next/test/tags/pdf.js","hash":"fd6ea5123560a90f7e7c1eface23dbe1455db25f","modified":1662646591139},{"_id":"themes/next/test/tags/tabs.js","hash":"d63722919f9da2e44d6b952801e10a2915ea9c12","modified":1662646591139},{"_id":"themes/next/test/validate/index.js","hash":"5a95ccc8598667535bd022e988055c0e019f3670","modified":1662646591140},{"_id":"themes/next/test/tags/video.js","hash":"b796fc4dceb20a30e730c322bb5474c0162464cc","modified":1662646591139},{"_id":"themes/next/layout/_partials/head/head-unique.njk","hash":"8da52a144060db1a0a088ccb2e6cc8376d1fce70","modified":1662646591113},{"_id":"themes/next/layout/_partials/head/head.njk","hash":"0ba2bf0266f1fcb8edbd961869f8521b29685c56","modified":1662646591113},{"_id":"themes/next/layout/_partials/header/brand.njk","hash":"aff4613756456be26415febc668860fdab8d33c5","modified":1662646591114},{"_id":"themes/next/layout/_partials/header/index.njk","hash":"650de421a8ce4cf685428ffbe0087ff84cbd1356","modified":1662646591114},{"_id":"themes/next/layout/_partials/header/menu-item.njk","hash":"41a8b0cc16f60fa085cb719d07216d86b6bc4bf8","modified":1662646591114},{"_id":"themes/next/layout/_partials/header/menu.njk","hash":"ee6fc2f111572d3eeab0a2fecbb2d6b3e37ab26b","modified":1662646591114},{"_id":"themes/next/layout/_partials/header/sub-menu.njk","hash":"06480d8ec5f0b87eafd47f082f07968d7282dd5c","modified":1662646591114},{"_id":"themes/next/layout/_partials/page/breadcrumb.njk","hash":"89825e75cc45e9709fa6ba89883669eedaff6f46","modified":1662646591114},{"_id":"themes/next/layout/_partials/page/categories.njk","hash":"17156d99941f28a225951ffdcfa9a115e20dc2d2","modified":1662646591114},{"_id":"themes/next/layout/_partials/page/page-header.njk","hash":"7ed4f102a1825195cff8d7995bf9219f323a9034","modified":1662646591114},{"_id":"themes/next/layout/_partials/page/schedule.njk","hash":"0f4bc8e257da60f77c0c1738607b2bde55810684","modified":1662646591114},{"_id":"themes/next/layout/_partials/post/post-copyright.njk","hash":"133942922e34abae9e4de7ea5591d77c0caa4b37","modified":1662646591115},{"_id":"themes/next/layout/_partials/page/tags.njk","hash":"a18d1598e36cc72f2b0b24c3cc3c5990dfaa3254","modified":1662646591115},{"_id":"themes/next/layout/_partials/post/post-footer.njk","hash":"bde2c7356d9362972bde41cc206d5816f8ed714d","modified":1662646591115},{"_id":"themes/next/layout/_partials/post/post-followme.njk","hash":"154df0bb323c332d8c25343f258ee865e5553423","modified":1662646591115},{"_id":"themes/next/layout/_partials/post/post-related.njk","hash":"57eca76cfbbe9a65bc2a77f1deebf003ed335673","modified":1662646591115},{"_id":"themes/next/layout/_partials/post/post-reward.njk","hash":"002b51d0cae3f2e2e008bdc58be90c728282de5b","modified":1662646591115},{"_id":"themes/next/layout/_partials/search/algolia-search.njk","hash":"efb2b6f19df02ba5ae623a1f274fff52aed21e6f","modified":1662646591115},{"_id":"themes/next/layout/_partials/post/post-meta.njk","hash":"9fa47e4fb342811da590ee4adc91cf81118c0a39","modified":1662646591115},{"_id":"themes/next/layout/_partials/search/localsearch.njk","hash":"661f7acae43f0be694266323320f977d84119abe","modified":1662646591116},{"_id":"themes/next/layout/_partials/search/index.njk","hash":"8f6f256ab3b351ffc80f1f3f1d9834e9a7cfac31","modified":1662646591116},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.njk","hash":"6215309aee028dcb734452beec448c5afb6c63fc","modified":1662646591116},{"_id":"themes/next/layout/_third-party/analytics/cloudflare.njk","hash":"a5b8297c2c383124dd6a56e256ecc0c0dcf489be","modified":1662646591116},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.njk","hash":"d89066ff53879693f023e540d59c86137172c529","modified":1662646591116},{"_id":"themes/next/layout/_partials/sidebar/site-overview.njk","hash":"3d8591bb92df77ceb9d5b07bc76da1ca89e5bd76","modified":1662646591116},{"_id":"themes/next/layout/_third-party/analytics/index.njk","hash":"314805f0186e9f6208c845f0757fdb7891c540f6","modified":1662646591117},{"_id":"themes/next/layout/_third-party/analytics/growingio.njk","hash":"8afaa772c390bd9d53a5cff9645ac3168334eb98","modified":1662646591117},{"_id":"themes/next/layout/_third-party/analytics/matomo.njk","hash":"4e89648a8ec8194c5823064cbca39c938a799006","modified":1662646591117},{"_id":"themes/next/layout/_third-party/analytics/microsoft-clarity.njk","hash":"9dc00fcb0a05899f048eace9f9160b78956655d5","modified":1662646591117},{"_id":"themes/next/layout/_third-party/chat/tidio.njk","hash":"02aab857c27fc103216029be991688b12a73a525","modified":1662646591117},{"_id":"themes/next/layout/_third-party/chat/gitter.njk","hash":"f8cc14b7aa949999a1faaeb7855e2f20b59a386d","modified":1662646591117},{"_id":"themes/next/layout/_third-party/chat/chatra.njk","hash":"d7263fca16d0278ccf1f6aa1c6df6902a6344a09","modified":1662646591117},{"_id":"themes/next/layout/_third-party/math/index.njk","hash":"abf37fc55aa86702118e8fdf5bf2d389dd589aa0","modified":1662646591118},{"_id":"themes/next/layout/_third-party/math/katex.njk","hash":"1ebf658690468ea197bdd0416eb7cfa4bd0b083a","modified":1662646591118},{"_id":"themes/next/layout/_third-party/math/mathjax.njk","hash":"3677017fd4572b158311f5f5d870590ab25184e0","modified":1662646591118},{"_id":"themes/next/.gitignore","hash":"417520c4dbbeab9c7e3ab10d944da0886366a0ee","modified":1662646591107},{"_id":"themes/next/layout/index.njk","hash":"dd63e488ae8cc144335a5958acedf6a16edd7a92","modified":1662646591120},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"a089f7a8368ab0b7d7b9b7ec0ac3767a453435df","modified":1662646591109},{"_id":"themes/next/layout/_third-party/comments/changyan.njk","hash":"d1c950f8fbdf85e7a3eae5463767a89e858e8220","modified":1662646591117},{"_id":"themes/next/layout/_third-party/comments/disqus.njk","hash":"9375b19a89b7fa9474e558d085af5448d4c5c50c","modified":1662646591118},{"_id":"themes/next/layout/_third-party/comments/disqusjs.njk","hash":"0749cb6902baecdfd01f779a2a2513f6d2f6a823","modified":1662646591118},{"_id":"themes/next/layout/_third-party/comments/gitalk.njk","hash":"b63b7e2ede0d3e66e732fa1a06bda9b19e1e85d4","modified":1662646591118},{"_id":"themes/next/layout/_third-party/comments/livere.njk","hash":"3b13b09fba84ec6000886890a6710736a2b8fafe","modified":1662646591118},{"_id":"themes/next/layout/_third-party/comments/isso.njk","hash":"64cc3bdaf644fd32c0d0a247f29f5b6904da9af3","modified":1662646591118},{"_id":"themes/next/layout/_third-party/comments/utterances.njk","hash":"5a94032bc3512a10ad4328fc19ec07b819a1d687","modified":1662646591118},{"_id":"themes/next/layout/_third-party/search/algolia-search.njk","hash":"24ed76e0c72a25ac152820c750a05826a706b6f4","modified":1662646591119},{"_id":"themes/next/layout/_third-party/search/localsearch.njk","hash":"e45ea3542cdc9ed7ec8447b5e6f35df4c5e82758","modified":1662646591119},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"a4bc501da0f22f7e420f0ca47e83988ce90b1368","modified":1662646591119},{"_id":"themes/next/layout/_third-party/statistics/firestore.njk","hash":"d32ebe94560fa95824478ebbff531bffc47b194d","modified":1662646591119},{"_id":"themes/next/layout/_third-party/statistics/index.njk","hash":"568ddf7955d11d93fb5e842b403a7ac8b1b7fdb1","modified":1662646591119},{"_id":"themes/next/scripts/events/lib/config.js","hash":"c8b59b404f5d2a0b3b5cd1a6c9a10af5f30e43b5","modified":1662646591121},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.njk","hash":"2446e748cdc102c78492216319ac02148db7daf6","modified":1662646591119},{"_id":"themes/next/scripts/events/lib/highlight.js","hash":"6aec7b2c38c50989a23bfaa0d560e75c7f553e12","modified":1662646591121},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"d987709267a1bc6e5014411e9983d7c49c102c16","modified":1662646591121},{"_id":"themes/next/scripts/events/lib/navigation.js","hash":"dd3562686d95a50375e6fd32e717ccb0d99c1e3d","modified":1662646591121},{"_id":"themes/next/scripts/events/lib/vendors.js","hash":"64e4024376b51fe81be7ad80235abdf0a83853bd","modified":1662646591121},{"_id":"themes/next/scripts/events/lib/utils.js","hash":"ec996d0673f766167c86df0966e9da1ae036e103","modified":1662646591121},{"_id":"themes/next/layout/_third-party/tags/pdf.njk","hash":"2c81984cc4f5123103460442f6e046f5b6c97127","modified":1662646591120},{"_id":"themes/next/layout/_third-party/tags/mermaid.njk","hash":"099e031f52fb8e47b3af5b2684737efc9e643ee7","modified":1662646591119},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"7fa8701c86485b2fe7324e017101a32417902397","modified":1662646591121},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"93ee5f9109dad885dc38c49bcee630c10f9dce6e","modified":1662646591123},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"7f71d6b271ba65ff333d5682e7575711d368c0d2","modified":1662646591123},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"19a402a225c31edffc50f202a14e0d582d3db23e","modified":1662646591123},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"62faf6b0b0020066a0dec1f0123cf1fee3198e7e","modified":1662646591123},{"_id":"themes/next/scripts/filters/comment/isso.js","hash":"ff8b5b5145220a17d0ecd9508ba9bd2d3b2da47d","modified":1662646591123},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"7bb7dafdd7f6bca8464b54e17e552ce7f1714195","modified":1662646591123},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"5a07d8bb52bc1d51a624ca8db54be144566c306b","modified":1662646591123},{"_id":"themes/next/scripts/filters/comment/utterances.js","hash":"d3bded697bc32dace689d2a6dfb6eb7514169d15","modified":1662646591123},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e1fbf169b9b6a194b518240cbd06ec3c48b83d61","modified":1662646591133},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"96e0a7c2a65ce68215e17e369085b2ea2f1334f2","modified":1662646591133},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"e3be898f5ebcf435a26542653a9297ff2c71aeb0","modified":1662646591133},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c65536a128b9bc9dbe2fbb1b235a3cded2891002","modified":1662646591133},{"_id":"themes/next/source/js/schemes/muse.js","hash":"9794bd4fc6a458322949d6a0ade89cd1026bc69f","modified":1662646591135},{"_id":"themes/next/source/css/_variables/base.styl","hash":"163c7441d777bee87042d475e6ce0fde199add28","modified":1662646591134},{"_id":"themes/next/source/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":1662646591136},{"_id":"themes/next/source/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1662646591136},{"_id":"themes/next/source/js/third-party/rating.js","hash":"4e92c2d107ba47b47826829f9668030d5ea9bfb8","modified":1662646591136},{"_id":"themes/next/source/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1662646591136},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"bab653bcf226311381e8411a0492202f1bf1fce9","modified":1662646591126},{"_id":"themes/next/source/css/_common/components/index.styl","hash":"fe1868f47681e00a33a96199302be85377282f63","modified":1662646591126},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"90a86045a33c1bae49fc2f6fa1e1b53170c7f77b","modified":1662646591127},{"_id":"themes/next/source/css/_common/outline/index.styl","hash":"8e34df131830d4fa3725e4590a672ba1cf1903e5","modified":1662646591129},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"64775c729512b30b144ab5ae9dc4a4dfd4e13f35","modified":1662646591129},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a042571d85ff7265f799004239a45f36b716b8a6","modified":1662646591130},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"e4fecc889ba3317a64e9abba5842c79dff9b7827","modified":1662646591130},{"_id":"themes/next/source/css/_common/scaffolding/index.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1662646591131},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1662646591131},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"b5c7782368889fa9fd93807d28ff2daf270e3703","modified":1662646591131},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"d0a7c99095f490b0d2ed6b1be43d435960798cec","modified":1662646591130},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"572a41499391677d84b16d8dbd6a996a3d5ce041","modified":1662646591132},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"fd49b521d67eaccc629f77b4e095cb7310327565","modified":1662646591132},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"e840b23d33023e6d45e018f6e84b683dd56efd8d","modified":1662646591131},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"4817e77577896ab5c0da434549917ee703a3f4cf","modified":1662646591132},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"5604ac1e161099a4d3e5657d53507268866dc717","modified":1662646591132},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"fb550935d374e0bdf1097fce187337dc05cad3e1","modified":1662646591132},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"be6cf377ae8f4a01ee76f9b3014e74161d4d5d17","modified":1662646591132},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"ab16a3dcdc0393b9b582ef59dcc13db9320e917c","modified":1662646591132},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"82a29572dd90451f75358a2ee2522b87304a0bb8","modified":1662646591132},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"06080fd963c904d96c00eff098a284e337953013","modified":1662646591132},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"b7f48be3c43bfa393d62142544a5487a67871713","modified":1662646591133},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"944364893bd7160d954c10ba931af641c91515a4","modified":1662646591133},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1662646591133},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1662646591133},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"6eee86c8f0175d6c09e434053516cd8556f78d44","modified":1662646591133},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"b741ab96e73370711c63a6581159f2ea8b5bfa1b","modified":1662646591133},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"72dc825c50357402c342d62ab60fc0c478ab6bc1","modified":1662646591133},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d9141e6e14a56b5952488101e9a8388c2170e270","modified":1662646591133},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"778ed2ad5643b93970c95626b325defeb586733f","modified":1662646591133},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"8000075b227749a7495eaf417cac6ccfbe441580","modified":1662646591133},{"_id":"themes/next/source/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1662646591135},{"_id":"themes/next/source/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1662646591135},{"_id":"themes/next/source/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1662646591135},{"_id":"themes/next/source/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1662646591135},{"_id":"themes/next/source/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1662646591135},{"_id":"themes/next/source/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":1662646591135},{"_id":"themes/next/source/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1662646591136},{"_id":"themes/next/source/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1662646591136},{"_id":"themes/next/source/js/third-party/comments/disqus.js","hash":"e1cc671b0d524864fd445e3ab4ade9ee6d07e565","modified":1662646591136},{"_id":"themes/next/source/js/third-party/comments/disqusjs.js","hash":"33a82207a15aad9d1c8fb2251f9e3eba50452932","modified":1662646591136},{"_id":"themes/next/source/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1662646591136},{"_id":"themes/next/source/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1662646591136},{"_id":"themes/next/source/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1662646591136},{"_id":"themes/next/source/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1662646591136},{"_id":"themes/next/source/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1662646591136},{"_id":"themes/next/source/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1662646591136},{"_id":"themes/next/source/js/third-party/search/local-search.js","hash":"4536cb6d0a9bbaaa86fab3fa0101f6a3a3ec5a76","modified":1662646591137},{"_id":"themes/next/source/js/third-party/statistics/firestore.js","hash":"411a72df581f5b21317dc28633c7993207eb9e1c","modified":1662646591137},{"_id":"themes/next/source/js/third-party/search/algolia-search.js","hash":"fdb7b7cef1a147d897e7f7cd8903b58368ec2062","modified":1662646591137},{"_id":"themes/next/source/js/third-party/statistics/lean-analytics.js","hash":"835cbf54c49ef1327f47df70ff2636ad36b6f57d","modified":1662646591137},{"_id":"themes/next/source/js/third-party/tags/mermaid.js","hash":"f27d817b0c2138dd3215b1f46af0753f60a008f3","modified":1662646591137},{"_id":"themes/next/source/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1662646591137},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"8afdc311c6b8db121758371f95cf1c5e77354f42","modified":1662646591126},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"b6e2eb1550a7845cb2adf86081a4ab6c7bde1e68","modified":1662646591126},{"_id":"themes/next/source/css/_common/components/pages/index.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1662646591126},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"6b816c2511242ee503fb5f34cd3e4dcdafc06b85","modified":1662646591126},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"1a81d1a71fcf0699629ce6e72dfd0a15f3a2dd0a","modified":1662646591126},{"_id":"themes/next/source/css/_common/components/post/index.styl","hash":"d0805a763176b3c0003967401644f41dfe3bc9e8","modified":1662646591126},{"_id":"themes/next/source/css/_common/components/post/post-body.styl","hash":"d757768a58743601d0d84158ba955eb15d4c3c01","modified":1662646591126},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"ec37a36e94ba791663607a5022f763915778578f","modified":1662646591127},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"fc1a7bac6493f24aa50665574f37f3dd954f210c","modified":1662646591127},{"_id":"themes/next/source/css/_common/components/post/post-footer.styl","hash":"1d284f3ea03ba9b4feb76b375e539a8e0bccf1c3","modified":1662646591127},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"aa366d37389760c8595529b850f461569577a1c5","modified":1662646591127},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"010c901e4ef49a606f8a350efbf09044e76d2ff3","modified":1662646591127},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"9ac6f477177264c26a46e8333b8456720a0444dc","modified":1662646591127},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"b6677dc2a2368084ab82bb4f145ac79e5966c150","modified":1662646591127},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"07cff69f2d57e6321595f64c16d8b763dc88df6a","modified":1662646591127},{"_id":"themes/next/source/css/_common/components/third-party/disqusjs.styl","hash":"c2326ee3e8b724d99c24a818ddee32813ea5bf89","modified":1662646591127},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"070737d101e7cd58e997e8c7af09958268c43a21","modified":1662646591128},{"_id":"themes/next/source/css/_common/components/third-party/gitter.styl","hash":"35104dc6883a61c31e0e368dac8ac2f697be62fe","modified":1662646591128},{"_id":"themes/next/source/css/_common/components/third-party/index.styl","hash":"979486a41a81f2a9fd8b0b87c4f87d6416c68c7d","modified":1662646591128},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"9d995eb4871a6c273d9d51558676a1fdabf69e72","modified":1662646591128},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"41ed817e1eb64078074e245e771446ee041e5790","modified":1662646591128},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"e72799ce3f9b79753e365b2f8c8ef6c310668d4a","modified":1662646591128},{"_id":"themes/next/source/css/_common/components/third-party/utterances.styl","hash":"56d90ae0559caa55b75f3c300ff2711f9ed65fc4","modified":1662646591128},{"_id":"themes/next/source/css/_common/outline/footer/index.styl","hash":"8b9407e5cfd0571ef8de7df19022b268f962fa2f","modified":1662646591128},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e74f4bb47a101b014ee2a1783c87f3b87323f9a0","modified":1662646591128},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"38c64c2d04e46848382bfa246a0e9c508294767b","modified":1662646591128},{"_id":"themes/next/source/css/_common/outline/header/index.styl","hash":"ff642130354a0b3be0d708c43044ed4d710b5e83","modified":1662646591129},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"392fd53a8dd4e3f33a853ebb24290a622300e0ff","modified":1662646591129},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"759e582d34d08e3386c55d87a835a9523608619f","modified":1662646591129},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"bf3ad8b4268f763a1e26377681644887694bc009","modified":1662646591129},{"_id":"themes/next/source/css/_common/outline/sidebar/index.styl","hash":"cee43480eba028c37d51cb620c2d81486aa24e01","modified":1662646591129},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"52fc98b1435129eb3edb9293ced9e507741f1350","modified":1662646591129},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"5b38ac4a0f1ade0e681aff0e3366c481d9cf3dcd","modified":1662646591129},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"b926e368f702f8686aaa2eb98d3d2e533418958c","modified":1662646591129},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"9950c3188a28e1c63b5498b7bdcd14b12ace3e28","modified":1662646591129},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"fbdb63c6a8887d19b7137325ba7d6806f728139c","modified":1662646591129},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"ee94a1a27090ad24e3ed579093088d97ff96d77d","modified":1662646591129},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"021a37cf178440cc341940a299d3bca359996c6b","modified":1662646591130},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"3103b81fc76b59e1e2c161e2c484625c770ed66f","modified":1662646591130},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"26dd0adfcb1db6df29c6090c8d7e9b5a43583fb0","modified":1662646591130},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"d6418fd2bbfba7b73ddf11ec62db9637fdf5d8af","modified":1662646591131},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"670fc109b56a010b166b86b616823a1aae97a738","modified":1662646591130},{"_id":"themes/next/source/css/_common/scaffolding/tags/index.styl","hash":"3f76c73a891bbc10679753e702feba9e8a5ffdd2","modified":1662646591131},{"_id":"themes/next/source/css/_common/scaffolding/highlight/index.styl","hash":"f2328caa94645836e06fb39a6a9c9a84ed68a8b5","modified":1662646591130},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"393ff96234e4196b569d4b11496774eb78e147de","modified":1662646591131},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"debee14539272fbe3835a7d3853af2230baa3501","modified":1662646591131},{"_id":"themes/next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7f8a7345e6537a62cd9e9a94c8f7065b541d9b04","modified":1662646591131},{"_id":"themes/next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"48d35dba575a7c9e8845b16652e76b7d4a4646de","modified":1662646591131},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"d27fbf7799695295dd5860a161a13ac4d90c5ba4","modified":1662646591131},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b6654a1d7cf82577d8263faffee8af3ad4a5c0e8","modified":1662646591132},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"7a39bcce7274284e87388743db62afc847fe6897","modified":1662646591132},{"_id":"themes/hacker/.rubocop.yml","hash":"2d4a06cfc582c5c5849349cddb3d0f08cba30d33","modified":1662646409599},{"_id":"themes/hacker/_config.yml","hash":"b83987229c122e2f61f4db8e1ca9767533cbf4dc","modified":1662646409600},{"_id":"themes/hacker/LICENSE","hash":"34b2b37ec594d86bd391137b4fb644eccb17bdbb","modified":1662646409600},{"_id":"themes/hacker/README.md","hash":"4a204ab943aedb3e5e321eaaf557640fe8198953","modified":1662646409600},{"_id":"themes/hacker/Gemfile","hash":"e21563ca517a3071309b936e1e546a818fb796e1","modified":1662646409600},{"_id":"themes/hacker/another-page.md","hash":"7f7a9e0e29d5b79fd8a505f541173d886f330818","modified":1662646409601},{"_id":"themes/hacker/index.md","hash":"0a6af81f61fcbe301eb47422a39ad08eaae119f5","modified":1662646409602},{"_id":"themes/hacker/.travis.yml","hash":"c44e86b035a851c834c25eded771dc5661f11e83","modified":1662646409600},{"_id":"themes/hacker/jekyll-theme-hacker.gemspec","hash":"6f0d5242685388b52bd0d47616960c85abc0dc83","modified":1662646409602},{"_id":"themes/hacker/thumbnail.png","hash":"c1b01ff025c5df41ac8a3bcf6a138a63320ee2b1","modified":1662646409603},{"_id":"themes/hacker/.gitignore","hash":"0381e2d3f8c08136c72f2bf12aa4c686701079d8","modified":1662646409599},{"_id":"themes/hacker/_includes/head-custom.html","hash":"716b179c971e6510e16a204cc024bd9a94ef50a9","modified":1662646409600},{"_id":"themes/hacker/_includes/head-custom-theme-colors.html","hash":"9431d0856092b3126e7dae36a22dbe697767f446","modified":1662646409600},{"_id":"themes/hacker/_includes/head-custom-google-analytics.html","hash":"860c8223e87305cd53d3ae6bafaa0c2338f2af05","modified":1662646409600},{"_id":"themes/hacker/_layouts/post.html","hash":"fa98460186258e21d948199caab523548fe58434","modified":1662646409601},{"_id":"themes/hacker/_sass/hacker.scss","hash":"f5ff2df3fd267b968452eef1cdfa81ccd1d34e47","modified":1662646409601},{"_id":"themes/hacker/_layouts/default.html","hash":"fcf2cce6fd2c0d683055f243331069657edb91cb","modified":1662646409600},{"_id":"themes/hacker/_sass/_default_colors.scss","hash":"a6a156a26477d27ec31b70002549519aaa2f6fdc","modified":1662646409601},{"_id":"themes/hacker/_sass/rouge-base16-dark.scss","hash":"c8d558f4158f5b81632a5277f646d4d091221e9d","modified":1662646409601},{"_id":"themes/hacker/docs/CODE_OF_CONDUCT.md","hash":"dec28b1f17dc211dd5443e98a09a1289b4a819e5","modified":1662646409602},{"_id":"themes/hacker/_sass/jekyll-theme-hacker.scss","hash":"bfa7759354ce80c46265aa8f6bfdcad04c5861af","modified":1662646409601},{"_id":"themes/hacker/docs/CONTRIBUTING.md","hash":"27e17b1a340cbbd64f3a2a141d202efbc754f95a","modified":1662646409602},{"_id":"themes/hacker/script/cibuild","hash":"fab6db0795d30188e634d65d1d8fdf25c252854b","modified":1662646409602},{"_id":"themes/hacker/docs/SUPPORT.md","hash":"8d21456152b918eeb07639a641c5885dfad0494b","modified":1662646409602},{"_id":"themes/hacker/script/release","hash":"db8f5453c7c6d1870032a6e6543b080319c747d2","modified":1662646409602},{"_id":"themes/hacker/script/bootstrap","hash":"1f93c320f111d5977c729c92c8ac8a6f352a87dd","modified":1662646409602},{"_id":"themes/hacker/assets/css/style.scss","hash":"729c7c7539e41a43108f25e2a49d43ab1ab01786","modified":1662646409601},{"_id":"themes/hacker/assets/images/bkg.png","hash":"cb2b29141d76342bb988e18626362ac69ed21c19","modified":1662646409601},{"_id":"themes/hacker/script/validate-html","hash":"50a00acae46251cd7181b39c844fa5dc2b5a4502","modified":1662646409603},{"_id":"themes/hacker/assets/images/blacktocat.png","hash":"2ee6742d5f6f505106233bf8a2605cda9f49c272","modified":1662646409601},{"_id":"themes/hacker/assets/images/bullet.png","hash":"d7ae24fe62ab381f995a63b3da9a1fcba5811068","modified":1662646409602},{"_id":"themes/hacker/.github/no-response.yml","hash":"10dec00d95d5e55a40c088119936179b4fe4e509","modified":1662649827797},{"_id":"themes/hacker/.github/CODEOWNERS","hash":"274cd780e58b1405a5074ed434477b80d99b1ed6","modified":1662649827797},{"_id":"themes/hacker/.github/config.yml","hash":"7f2b690d50313e56eaae5a69ffefcee9d1ccf417","modified":1662649827797},{"_id":"themes/hacker/.github/settings.yml","hash":"c02b9698b371431a97dac878631fd212ddb83f5b","modified":1662649827797},{"_id":"themes/hacker/.github/stale.yml","hash":"c44789b1640c57b459a2365aec7a97269bc74ebe","modified":1662649827797},{"_id":"themes/hacker/.github/workflows/ci.yaml","hash":"b5c3bfa2ec1dc5ea634f95a5b90b6eeb48cacd22","modified":1662649827798},{"_id":"public/about/index.html","hash":"71504d4d80672225e157c6f3cbe84b39cbc30e32","modified":1662650171857},{"_id":"public/links/index.html","hash":"e448b4441f28c5c7c1c54c48c3e5a8261e1d9b4a","modified":1662650171857},{"_id":"public/resume/index.html","hash":"917b5ccf69d8dc6e71a9ec02cc244657296d574a","modified":1662650171857},{"_id":"public/2019/07/12/使用Cypress进行前端e2e测试/index.html","hash":"98f0e4c0f59d895eed583f358e9f59685a2c1f15","modified":1662650171857},{"_id":"public/2019/06/28/前端项目接入代码测试覆盖率/index.html","hash":"fd8b833d7d979ed871bd1f620a9b4cc88333ffe7","modified":1662650171857},{"_id":"public/2019/03/24/使用React Hooks进行状态管理/index.html","hash":"97a0364f786ec94d2df8c78a522d94afd5d8a385","modified":1662650171857},{"_id":"public/2017/12/30/由Babel了解编译原理/index.html","hash":"00eeb638c6ae4901a455d0ac84b715882a84c158","modified":1662650171857},{"_id":"public/2017/04/16/用generator实现异步操作/index.html","hash":"f8e92fa6ea86b5468b9f0d86df61cc18d1f2fb2c","modified":1662650171857},{"_id":"public/2018/10/23/前端工程师技能checklist/index.html","hash":"0cfd4ffbfd5ab550732a4edb66512f05022d695d","modified":1662650171857},{"_id":"public/2016/07/20/Generator函数/index.html","hash":"1e36889cf6026af33907d8301bf323d1bfc828ba","modified":1662650171857},{"_id":"public/2016/06/15/Redux学习总结/index.html","hash":"91ac8829ab99bdc22fcad6ddc7f3fde85ee9fef0","modified":1662650171857},{"_id":"public/2016/06/11/React-Native学习总结/index.html","hash":"ff08e3d36e1fbe6bfdff3111e3bac21bcbc85cc9","modified":1662650171857},{"_id":"public/2016/05/20/react-router使用指南/index.html","hash":"9cd11d6df8621f90ab174498f24b6792c661b691","modified":1662650171857},{"_id":"public/2016/03/27/Eslint使用备查/index.html","hash":"07e6262303aac9f5b6f6450bce79d99996bfe7af","modified":1662650171857},{"_id":"public/2016/03/25/Vue与Vuex/index.html","hash":"239a64240a4087ae3b1e9717ef25d89868de8913","modified":1662650171857},{"_id":"public/2016/02/26/express与koa/index.html","hash":"5387317a85bccdd14f538a5c98d55803002959bc","modified":1662650171857},{"_id":"public/2016/02/12/ES2015-总结/index.html","hash":"ae4a3a3d6fd3c48d4556436ee82b97852555bf55","modified":1662650171857},{"_id":"public/2015/11/30/CommonJs、AMD、UMD/index.html","hash":"2b9598048b389e94340de7bb52e782debf7eb271","modified":1662650171857},{"_id":"public/2015/11/15/React学习总结/index.html","hash":"01b39ac081c813b3584f73a1530ca6ec7e49e3ed","modified":1662650171857},{"_id":"public/2015/10/23/Markdown语法总结/index.html","hash":"7729f9b34086366687a0288c892727836bd3e353","modified":1662650171857},{"_id":"public/2015/09/09/Vue/index.html","hash":"fc918097dbff6be31b82355968ce7c6577f2971e","modified":1662650171857},{"_id":"public/2015/08/30/Jquery源码阅读-二/index.html","hash":"a314736a0d3d81c6eefca35e48c43497cfcf440f","modified":1662650171857},{"_id":"public/2015/08/21/Jquery源码阅读/index.html","hash":"944ad4a16e4189abd1aeb454f7e546b586e5843a","modified":1662650171857},{"_id":"public/2015/06/04/客户端检测/index.html","hash":"f850aa5d9de6aec483007c5333b735b0c6090c00","modified":1662650171857},{"_id":"public/2015/05/23/Javascript面向对象编程/index.html","hash":"bf784efafcfad7717a97f9715f57e6c4e4111db8","modified":1662650171857},{"_id":"public/2015/07/25/使用nodejs搭建web服务器/index.html","hash":"afb1e2f43ce46c17ea208ee8b121f52bb4397b5f","modified":1662650171857},{"_id":"public/2015/04/10/Javascript-继承/index.html","hash":"77aa043cb2acbe89c7bf22ac75a0ed93a80401b5","modified":1662650171857},{"_id":"public/2015/04/04/Touch手势/index.html","hash":"feb3f5bf564c11fadc3e696f5722042e8115ddd2","modified":1662650171857},{"_id":"public/2015/03/25/点击事件绑定/index.html","hash":"807f38944a0f94c9d3b8566f4199159d00e7b49c","modified":1662650171857},{"_id":"public/2015/02/07/Javascript事件/index.html","hash":"89f9f80eef1917fd4ead194d69bf2da3d30b5f71","modified":1662650171857},{"_id":"public/2014/12/21/CSS绘制三角形/index.html","hash":"b2be47cd718f5fdf8576492891edd2c483fc5934","modified":1662650171857},{"_id":"public/2014/11/21/flexbox伸缩盒布局/index.html","hash":"889027801d875b7a78e111e2818ebe7b47bdecaf","modified":1662650171857},{"_id":"public/2014/09/27/防止重复发送ajax的方法/index.html","hash":"71c32f1a7869e7a1613cea3a08b978d89a674be4","modified":1662650171857},{"_id":"public/2014/08/12/datatables-使用/index.html","hash":"446a329e5019be296a255c7d4f0fb85498e37791","modified":1662650171857},{"_id":"public/archives/index.html","hash":"f25efc8a0d1c61142007dcad21c694a5798a8b11","modified":1662650171857},{"_id":"public/archives/page/2/index.html","hash":"f25efc8a0d1c61142007dcad21c694a5798a8b11","modified":1662650171857},{"_id":"public/archives/page/3/index.html","hash":"f25efc8a0d1c61142007dcad21c694a5798a8b11","modified":1662650171857},{"_id":"public/archives/page/4/index.html","hash":"f25efc8a0d1c61142007dcad21c694a5798a8b11","modified":1662650171857},{"_id":"public/archives/2014/index.html","hash":"16486f38c9cd4dc87137ee2e3abbde99e25ef721","modified":1662650171857},{"_id":"public/archives/2014/08/index.html","hash":"a189f66c455e8e592a79bde1c629a37c8aa30017","modified":1662650171857},{"_id":"public/archives/2014/09/index.html","hash":"65a3ba6b76a9488df21aa3719d36b1c58f971c0c","modified":1662650171857},{"_id":"public/archives/2014/11/index.html","hash":"05bf11dac0b8af53d654b587339af0378b189588","modified":1662650171857},{"_id":"public/archives/2014/12/index.html","hash":"2543045996939c66723f31df5723a96f9c245fb8","modified":1662650171857},{"_id":"public/archives/2015/index.html","hash":"35d4fc98cae60b40e805474364aef3300bc9373a","modified":1662650171857},{"_id":"public/archives/2015/page/2/index.html","hash":"35d4fc98cae60b40e805474364aef3300bc9373a","modified":1662650171857},{"_id":"public/archives/2015/02/index.html","hash":"05a9d4c70d6e839280381a08ac118bae1790596b","modified":1662650171857},{"_id":"public/archives/2015/03/index.html","hash":"5ceedde3e58bef2114c368a8ca27ed09ad30c91a","modified":1662650171857},{"_id":"public/archives/2015/04/index.html","hash":"845133e66557a76ea00beec10bc3039bb642d0e8","modified":1662650171857},{"_id":"public/archives/2015/05/index.html","hash":"9fd65560a9b6aa32072b3c105fac9bcc945a2b61","modified":1662650171857},{"_id":"public/archives/2015/06/index.html","hash":"32bb7943110a232a69084784ee9cfa4d69afc57b","modified":1662650171857},{"_id":"public/archives/2015/07/index.html","hash":"3d8b47cc07e4957fb4f7267d10591bd135f0ae5a","modified":1662650171857},{"_id":"public/archives/2015/08/index.html","hash":"f8316491f87788fe8886956d802e088b2be7489f","modified":1662650171857},{"_id":"public/archives/2015/10/index.html","hash":"0d7a190b6f2670710159c780700fc1b6bc18e025","modified":1662650171857},{"_id":"public/archives/2015/11/index.html","hash":"55870b21fde91ab3fd8f79fd938086cbbd97ce4c","modified":1662650171857},{"_id":"public/archives/2016/index.html","hash":"9d13fde524dadf09f292586485b4a8f37593d92f","modified":1662650171857},{"_id":"public/archives/2016/02/index.html","hash":"09f2a346544f9bbb2b760bd873cd25d0f69e2cba","modified":1662650171857},{"_id":"public/archives/2016/03/index.html","hash":"9b017b51ebb9b1a2585bf9482fc076932ef03def","modified":1662650171857},{"_id":"public/archives/2015/09/index.html","hash":"991f0abac96b5abe321e859b030991bdeedebd98","modified":1662650171857},{"_id":"public/archives/2016/05/index.html","hash":"41d34c6969d621f97fa1b484897207d6eeddfcb9","modified":1662650171857},{"_id":"public/archives/2016/06/index.html","hash":"6f0ebf17e27b137ad0bcba735918f537e855c360","modified":1662650171857},{"_id":"public/archives/2016/07/index.html","hash":"0891e3159d908d921d0eba045143a8b06a6b4bd6","modified":1662650171857},{"_id":"public/archives/2017/index.html","hash":"f7a3225e79bc0479016fdefce287cb293c48a106","modified":1662650171857},{"_id":"public/archives/2018/index.html","hash":"4630d27738aee8a490152496afd06702b2810d23","modified":1662650171857},{"_id":"public/archives/2017/04/index.html","hash":"6a7163e4e3cc16d0cc857be7f08c8d6d1642edcd","modified":1662650171857},{"_id":"public/archives/2017/12/index.html","hash":"27b46980cac84daded0066963f9c44a75a07cd57","modified":1662650171857},{"_id":"public/archives/2019/index.html","hash":"11eef2e42b83b353983ac9bb89f3c2d35b6639a4","modified":1662650171857},{"_id":"public/archives/2018/10/index.html","hash":"ce6e9fc90e7e0efa0c25dd7070ae19c79ac90674","modified":1662650171857},{"_id":"public/archives/2019/03/index.html","hash":"0eec257fe2836d43254fac554496164030c847df","modified":1662650171857},{"_id":"public/archives/2019/06/index.html","hash":"3b4c997a0100b6ae0e7110a8b94a64acaf9d3876","modified":1662650171857},{"_id":"public/archives/2019/07/index.html","hash":"d08cfa6682fea99245765048f16251f5c040272e","modified":1662650171857},{"_id":"public/categories/前端/index.html","hash":"b93925a13473c6af75b7a02c031ee072ef823d44","modified":1662650171857},{"_id":"public/categories/编程/index.html","hash":"68d9f18e5ae2c1fcae58a166ea8277e0af6bf655","modified":1662650171857},{"_id":"public/categories/Markdown/index.html","hash":"fb59ed55b3e6d7c3863f234a269a1e1574866862","modified":1662650171857},{"_id":"public/categories/React/index.html","hash":"791fffa394a7ae2de36f939908a9aea2d47c5197","modified":1662650171857},{"_id":"public/categories/Javascript/index.html","hash":"f2a6dc32857a352db71b75789f58d0e302104581","modified":1662650171857},{"_id":"public/categories/插件/index.html","hash":"f9c1758a3e91bd128742af70008fa9a3f401acbd","modified":1662650171857},{"_id":"public/categories/Nodejs/index.html","hash":"1bcde6451fa3431554c47c38b3e377ec8e9e77e5","modified":1662650171857},{"_id":"public/categories/Test/index.html","hash":"8f51bffa220ca55b0cc038ac54047300023e7719","modified":1662650171857},{"_id":"public/categories/编译原理/index.html","hash":"dbb4e42cc6b56740b50c73abb17e00f1dc3900f3","modified":1662650171857},{"_id":"public/index.html","hash":"7e16aa4387ce996c4d0943fcfeab2b559abbfb10","modified":1662650171857},{"_id":"public/page/2/index.html","hash":"7e700b03bebf30f12e4d38834aea692e159333fc","modified":1662650171857},{"_id":"public/page/3/index.html","hash":"ceec060fce05a635c3bf6200070355fc1d0fc2d4","modified":1662650171857},{"_id":"public/page/4/index.html","hash":"68b7bf0caa9d43877746fc2254b833201102ddf5","modified":1662650171857},{"_id":"public/tags/Javascript/index.html","hash":"3ce60f6674f4b9331bf7da25e4a47c51ed8b8b4c","modified":1662650171857},{"_id":"public/tags/CSS/index.html","hash":"7c52a99ae59e274283be17f718bc1de6b992b183","modified":1662650171857},{"_id":"public/tags/Eslint/index.html","hash":"fd9f998f741ec166228366150458cdb7bb77dbce","modified":1662650171857},{"_id":"public/tags/Jquery/index.html","hash":"0d49a9e9e3eb221ed4363000c7de76682d134e35","modified":1662650171857},{"_id":"public/tags/Markdown/index.html","hash":"a5018a645bf4e44e5ef58ee5e71db4a0642454a0","modified":1662650171857},{"_id":"public/tags/React-Native/index.html","hash":"2573148589a1f00c58fbaf50044207a9f8a2aafc","modified":1662650171857},{"_id":"public/tags/Redux/index.html","hash":"37538488997ed3c54227497a85750919131d3a6d","modified":1662650171857},{"_id":"public/tags/Vue/index.html","hash":"49cbd5844cb85c1f8a7fcdfdb9e612e912b538e6","modified":1662650171857},{"_id":"public/tags/Nodejs/index.html","hash":"ef11e8b15472f5183d55ff665c4b739094111a54","modified":1662650171857},{"_id":"public/tags/React/index.html","hash":"db251941d617377d1f718db1e8c4201177d0a13b","modified":1662650171857},{"_id":"public/tags/Cypress/index.html","hash":"774efcb3d88c89a3e59519df0481728242fc6b19","modified":1662650171857},{"_id":"public/tags/前端技能/index.html","hash":"4bf11167f89cc962d3c29018f26f55715a69285d","modified":1662650171857},{"_id":"public/tags/Babel/index.html","hash":"6b0e0a2766830c0be1040ef8761ae2f2ab89ee63","modified":1662650171857},{"_id":"public/categories/JavaScript/index.html","hash":"b3d9b1d4c611490672d0acd6328a33e7d6c2b956","modified":1662650171857},{"_id":"public/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1662649933798},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1662649933798},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1662649933798},{"_id":"public/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1662649933798},{"_id":"public/css/style.css","hash":"af476d4f3174f491c5d119f98f5dd7ab4817bb84","modified":1662650171857},{"_id":"public/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1662649933798},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1662649933798},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1662649933798},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1662649933798},{"_id":"public/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1662649933798},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1662649933798},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1662649933798},{"_id":"node_modules/hexo-theme-keep/.editorconfig","hash":"26a27140a04ad1873639b19f8240fb2bae367878","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/README.md","hash":"06ef53a5daecd42cfe7d653f9331e5ea66f1f590","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/LICENSE","hash":"1eba7caf09a39110ad2f542e3ed8700d1a69c6d3","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/README_zh-CN.md","hash":"d3bfa4f8720b73455d9e77f3e918de60daca01d7","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/languages/en.yml","hash":"11902f5813fc994a0620580d3caecad0bd4f4bec","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/package.json","hash":"a3be00d629d52f6cadde16fea48a0f68c288da07","modified":1662650481577},{"_id":"node_modules/hexo-theme-keep/languages/zh-CN.yml","hash":"f8b9da63093739b5b7a555e8d1aa0f30d38171dc","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/languages/zh-TW.yml","hash":"428b304a3ad542072bb578ed312bb06794a654e1","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/README_zh-TW.md","hash":"9913cf385c568a516055b27a9c944cc95263b3bc","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/archive.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/archive-content.ejs","hash":"89e256133a128858702f3bd0a6cf8330f5a8f2f7","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/_config.yml","hash":"db32c0fd60295e373a31112f6a2e335c6d8c28b2","modified":1662650901524},{"_id":"node_modules/hexo-theme-keep/layout/category-content.ejs","hash":"9293aba389c0664335b3308cbb343e603ff1f24f","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/category-list.ejs","hash":"17ea257cb28fb63c1e1650c157541d90a4f7fba5","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/category.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/article-content.ejs","hash":"9597d26784b62b0060950e8af2f71322013d3828","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/index.ejs","hash":"d04b5608fc801f00e247e7355c89a8643dc76914","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/home-content.ejs","hash":"c6897b9a1f88f157bf9cb935fba43a13911871eb","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/tag-content.ejs","hash":"379fad48764e11d7962f7cec730b0a6e932ef4a3","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/page.ejs","hash":"ad0d0452ee61277805ac30c8d97b9bdd3d09cf89","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/layout.ejs","hash":"a2d3f1ee6a79810de41d80b80c087f675f86ef84","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/tags.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/scripts/use-source-data.js","hash":"0dcab564f400e1775af8e839d9f1a219d0c003bb","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/tag.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/article-copyright-info.ejs","hash":"2fec371f5b6f97cc6fc242aced9baacce93a6f86","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/archive-list.ejs","hash":"c51a44fd234c7bc5e265f6c0afe3b4c9ca665b0c","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/footer.ejs","hash":"7ef185f52364e891791472e365d2e4441f738aa3","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/friends-link.ejs","hash":"e659c6a12c80ebf0cbe9f38a58425248702f8d2f","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/article-meta-info.ejs","hash":"fb04ac78cfee23b5f73b8721925e9c7fc168e2aa","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/first-screen.ejs","hash":"e28d781dd6868b08e9007393495fae75c6e502aa","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/head.ejs","hash":"697eb90b6448d1dcecc0fc19f1033086697bb2f8","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/header.ejs","hash":"bb57e24ef7005175824f19ff4cb8537ce4771590","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/image-viewer.ejs","hash":"c30d3f046035b6c63ee90fc961f67cbc2d6073af","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/home-article-meta-info.ejs","hash":"f26d28c92ca79287d45cf20da6fdb0f68815c655","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/page-template.ejs","hash":"adec4312027a76b5969e78a2dd245563e4e6333f","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/paginator.ejs","hash":"4183e4991a30132010d6428c9b2c51d198d268d8","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/post-tools.ejs","hash":"44a271ffbfb3af5c715ab25777cc58ddf9f62f82","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/progress-bar.ejs","hash":"791c78e36e4191f5a738964d4fba545be2649cea","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/scripts.ejs","hash":"ea08752ab79d3c61e31fae9dd49afc0feff6f36a","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/tagcloud.ejs","hash":"3c1f80ec34a4db4d242b8b1c024ffa8de0ddac78","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/local-search.ejs","hash":"747cd0ac75f31c9837abcbf5e06eac5501089d96","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/scripts/filters/lazyload-handle.js","hash":"c62dc757815b23c04bfd9112136d39a7deb5709a","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/scripts/filters/link-handle.js","hash":"4c8fd067eaf4cce4776413abe90a9ea3f1f04bc7","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/scripts/helpers/helper.js","hash":"9b149793aac46a1d7550ca2db49e215feffe1178","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/scripts/helpers/export-config.js","hash":"9099191029226a04aa7e633920dc3458fef940e7","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/toc.ejs","hash":"27844ed7c138d907c25d0e198f5425fe0c0299b2","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/images/avatar.svg","hash":"ff6709064f40ce3d683eb2673cc918009fb5684c","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/images/bg.svg","hash":"fe49c289a1110973a1c089fe4a9565eb06ecc036","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/images/logo.svg","hash":"509c25b6e51d435b3acd6b0a85b823daf9a48363","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/images/loading.svg","hash":"7689011e66c78998d91784ae5abe680f76772589","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/images/upyun.png","hash":"f014175dd78c3ed5249e69c91603e20a3efcd330","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/font-awesome.min.css","hash":"2c2236d61417d354b5cbbc907dfc9c0eb1325a7f","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/side-tools.ejs","hash":"3439e47a03651a3540541ba85d9ab0c9b456fc04","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/style.styl","hash":"e193b9f313c20f91504e4115a07e94e93ac383f8","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-regular-400.ttf","hash":"d64e58981a419de52bac110c979887d34e366135","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-regular-400.woff","hash":"26afc29d39ab9fac6d0b607be7e76db093ff7c3a","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-regular-400.eot","hash":"2baa9a8aa68f1d2d4712b3c7205f9105aaf21879","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-regular-400.woff2","hash":"fb9648469530a05fa9aac80e47d4d6960472a242","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/js/back2top.js","hash":"4be3dfc5ea5d134de22dddce950204c3fc05a659","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/js/code-copy.js","hash":"0fa4f5c6b1b4fa2dd059a3fabd975cb5236aa68e","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/js/dark-light-toggle.js","hash":"3941485684abdc9170f68b536c7cab57f03d68db","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/js/header-shrink.js","hash":"5a95ba1079638342689aa31ae331b0ad29423cfb","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/js/lazyload.js","hash":"9b1d7be063feff3a4268190575959a81604cef95","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/js/local-search.js","hash":"a76838dbc9b3dc683b7653d0e60c2a824316d598","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/js/main.js","hash":"52f9e2ccb2b93399bf2480aac989c702484b8aec","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/js/left-side-toggle.js","hash":"2396af1662b0cc8bf525c7cfed2f212a752a3b20","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/js/utils.js","hash":"356c23107a336b682a7101dfc856fa6e0e6cdb76","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/js/toc.js","hash":"089573f669c7eaae7b3b88a1f4b94c630983f520","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/comment/twikoo.ejs","hash":"5d75b54edfcfb6112ac2c50fa7f4040e3716261d","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/comment/gitalk.ejs","hash":"cff08caa0a70bf276500ccdbf2965865399d985b","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/comment/comment.ejs","hash":"3567cb1acb984e13cf7b6ac047467298cd6e98e3","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/pjax/pjax.ejs","hash":"db76ce10f71e0aed717c4734ef2efbdc4b860c16","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/layout/_partial/comment/valine.ejs","hash":"1c58eb3e1f0bf06758787ff91c56924210de6665","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/common/keep-theme.styl","hash":"48acc1b0b18b5c34d758118bad135b7cea18b5a1","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/common/variables.styl","hash":"db80d2ad6d99267bbc13abe7b11660cae04cc023","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/common/basic.styl","hash":"2ecd4b0d469038a0753ad2de3eb2ba8c20f809db","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/archive-content.styl","hash":"254ca2715de67d5783adfae40723a7917b6d9f8a","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/common/markdown.styl","hash":"73a96b2e7bdbaa1e98fd2a9928a05c56763d9064","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/article-content.styl","hash":"8f62a171debaa09d653328d0c76e170f82351a40","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/common/animated.styl","hash":"064493c99c4d1d19803fc544251f4fbc491e7a1d","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/category-content.styl","hash":"9af1e7fbc52aad0b4a47593813961a32a1d2b5c5","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/page.styl","hash":"c189508f4c6d807ef822af7bb9177f12e7532b94","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/home-content.styl","hash":"029336439c79ece32d25f8fee9dc018206fbcd1b","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/category-list.styl","hash":"28ea212b14e664d08de4ce93db1e0153e48a11ed","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/tag-content.styl","hash":"73af0b51aee119b2135dc8cd53cd3a3ad215fff6","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/js/libs/anime.min.js","hash":"960be51132134acd65c2017cc8a5d69cb419a0cd","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/common/codeblock/code-theme.styl","hash":"8b6131af54382b7959c255d58c52474564c91bf8","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/js/libs/pjax.min.js","hash":"57ec40cb4898d7ba74a03603d608af378e5431f8","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/common/codeblock/highlight.styl","hash":"081f08ed399c4fc6227ab15109595a211693462b","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/_partial/archive-list.styl","hash":"e85adfdd6fd83d2529988da644df51ddffbc87f5","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/common/codeblock/copy-code.styl","hash":"eac367ec543527a7533490fa19b451a452684614","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/_partial/article-copyright-info.styl","hash":"ae286cb8c7e788a7d393774c9e9c394352e48e72","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/_partial/footer.styl","hash":"0610a37f2eba1b6ee2ed138e3367d80be55c9d7d","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/_partial/header.styl","hash":"2bfe1bddb6224958f29e77bcb730cb7af547a5ae","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/_partial/first-screen.styl","hash":"9422e7d052f9e8a81d5a9acf12af9670fe2c41bb","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/_partial/article-meta-info.styl","hash":"8ca83a4fe1afbb15669becebcde3ed0e12ac07bb","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/_partial/image-viewer.styl","hash":"fb82ac6589304cf1e3ed7ff2904108641882ddbc","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/_partial/local-search.styl","hash":"a381afa2de855d968810c4f6680436fd31c63d55","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/_partial/page-template.styl","hash":"97768d3f95e8cf36fd3f783a5deb7e8fcaa5c67d","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/_partial/paginator.styl","hash":"2fbe611351cdeee678626c22aa268132693936b2","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/_partial/side-tools.styl","hash":"f1cec5eb066c13f17d0acc997790404d059fbd3f","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/_partial/post-tools.styl","hash":"7c642dfdd54ed60aadb2f162e25c4fc5720716b7","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/_partial/tagcloud.styl","hash":"39d03031033aa3bb9d3a76fdb5056966334e9221","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/_partial/comment/gitalk.styl","hash":"09d223d23c8f032da4f156efebab46102b15942d","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/_partial/toc.styl","hash":"c19d5833234c510ac1b8358cfcb7e33af29c3f6d","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/_partial/progress-bar.styl","hash":"c2b9474d130df3605578b77d76c604234a2b0f6f","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/_partial/comment/comment.styl","hash":"9874482d9a8bf623abc28f8fa9c2bbfeb55067a6","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/_partial/comment/valine.styl","hash":"dbff6bc6ecb6a20068047e6f7532e1d2df627929","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/css/layout/_partial/comment/twikoo.styl","hash":"8225224a5c6d688e4ecd2e5557e8b2c5c43e2cf4","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-brands-400.woff","hash":"a42ac4a94f4e0e9333cdb1b2fb6c13c0ae690ff2","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-brands-400.woff2","hash":"f726c4275bb494a045fde059175f072de06c01df","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-solid-900.woff2","hash":"9b592048b9062b00f0b2dd782d70a95b7dc69b83","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-solid-900.woff","hash":"3b86a0ce15d8d534b65e98560e321a933d310688","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-brands-400.eot","hash":"c719f4375679ee58e156434f9ba9727be669cf07","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-brands-400.ttf","hash":"9b49c6c5b0cbdef158ae31b2a4e4814555408389","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-regular-400.svg","hash":"6ad2be875a79cb6efb8d7ecf6e632784906656a7","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-solid-900.eot","hash":"c39b89f7fa7b66931ab02a54002db5ffcbff206c","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-solid-900.ttf","hash":"d537bf4cc7273ddb3fd754d53f2b241aeafaefe7","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-brands-400.svg","hash":"deddeac293c90f492dc8546a468871a07b83e6b3","modified":499162500000},{"_id":"node_modules/hexo-theme-keep/source/webfonts/fa-solid-900.svg","hash":"b635afc5e400633904e0a7cde3ec75cd57e403cf","modified":499162500000},{"_id":"public/images/logo.svg","hash":"509c25b6e51d435b3acd6b0a85b823daf9a48363","modified":1662650171857},{"_id":"public/images/loading.svg","hash":"7689011e66c78998d91784ae5abe680f76772589","modified":1662650171857},{"_id":"public/images/avatar.svg","hash":"ff6709064f40ce3d683eb2673cc918009fb5684c","modified":1662650171857},{"_id":"public/images/bg.svg","hash":"fe49c289a1110973a1c089fe4a9565eb06ecc036","modified":1662650171857},{"_id":"public/images/upyun.png","hash":"f014175dd78c3ed5249e69c91603e20a3efcd330","modified":1662650171857},{"_id":"public/webfonts/fa-regular-400.woff","hash":"26afc29d39ab9fac6d0b607be7e76db093ff7c3a","modified":1662650171857},{"_id":"public/webfonts/fa-regular-400.eot","hash":"2baa9a8aa68f1d2d4712b3c7205f9105aaf21879","modified":1662650171857},{"_id":"public/webfonts/fa-regular-400.woff2","hash":"fb9648469530a05fa9aac80e47d4d6960472a242","modified":1662650171857},{"_id":"public/webfonts/fa-regular-400.ttf","hash":"d64e58981a419de52bac110c979887d34e366135","modified":1662650171857},{"_id":"public/webfonts/fa-brands-400.woff2","hash":"f726c4275bb494a045fde059175f072de06c01df","modified":1662650171857},{"_id":"public/webfonts/fa-brands-400.woff","hash":"a42ac4a94f4e0e9333cdb1b2fb6c13c0ae690ff2","modified":1662650171857},{"_id":"public/webfonts/fa-solid-900.woff","hash":"3b86a0ce15d8d534b65e98560e321a933d310688","modified":1662650171857},{"_id":"public/webfonts/fa-solid-900.woff2","hash":"9b592048b9062b00f0b2dd782d70a95b7dc69b83","modified":1662650171857},{"_id":"public/js/back2top.js","hash":"fc8e85f6704e39ae3a613bbec5dd51d449be8010","modified":1662650171857},{"_id":"public/js/dark-light-toggle.js","hash":"223e6f1d4e6e70956e4661b58c430e1c68def125","modified":1662650171857},{"_id":"public/js/header-shrink.js","hash":"167b9b6a9ed63c6cf4081cb3c201dd16bbbfb9ad","modified":1662650171857},{"_id":"public/js/left-side-toggle.js","hash":"618f7cfc45db4d82b2f1d00d8e9ee936bcf9043b","modified":1662650171857},{"_id":"public/js/local-search.js","hash":"9509ec6d2d7d4466fe37ad624cf606f6639fb3fe","modified":1662650171857},{"_id":"public/js/code-copy.js","hash":"3fdabac26f6406a4592336f1f444ec966201b5d9","modified":1662650171857},{"_id":"public/js/main.js","hash":"ca8ed228cc0bc234be74428d029cfd047eec0ed6","modified":1662650171857},{"_id":"public/js/utils.js","hash":"a2413711ebf7ffc96eafec2ef45a5d243d3ccdb6","modified":1662650171857},{"_id":"public/css/common/animated.css","hash":"654c7588d80dc8b481a203e3071b3cedd41c7fde","modified":1662650171857},{"_id":"public/js/toc.js","hash":"ae69bf65d2b30d299b6ca9e2361d3b6e0db3a077","modified":1662650171857},{"_id":"public/css/common/keep-theme.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1662650171857},{"_id":"public/css/common/basic.css","hash":"55f95a3b9398ffbf11b8b39f264509e821df9e2e","modified":1662650171857},{"_id":"public/css/common/variables.css","hash":"157311f7b38a76721f2b6a2a9bd5229fac60df41","modified":1662650171857},{"_id":"public/js/lazyload.js","hash":"95aad532f17d7a8119979fc61ade9e626308a2af","modified":1662650171857},{"_id":"public/css/layout/article-content.css","hash":"032fd87dc40e0252a5ab59a12adc420371bd13bf","modified":1662650171857},{"_id":"public/css/layout/archive-content.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1662650171857},{"_id":"public/css/common/markdown.css","hash":"8c9fb9f7fb403e76a4446a7e533ebe36dd702483","modified":1662650171857},{"_id":"public/css/layout/category-list.css","hash":"672859a61a4e93c0514772112fb557395306e940","modified":1662650171857},{"_id":"public/css/layout/category-content.css","hash":"9687f9cbe029092b633fb804c28ecdcb54860511","modified":1662650171857},{"_id":"public/css/layout/tag-content.css","hash":"90b0cff1ef0228035cdca9ade2adef71c6c8fb5e","modified":1662650171857},{"_id":"public/css/layout/page.css","hash":"c9d5a1244b1a393ebf63412cf9ffef43ca48d64e","modified":1662650171857},{"_id":"public/css/common/codeblock/code-theme.css","hash":"0edc6d498dc0abbaadb152b48e9e7bebb6fd15f4","modified":1662650171857},{"_id":"public/css/common/codeblock/highlight.css","hash":"a6584196f859d00cdd962f43c809e44ed89319e4","modified":1662650171857},{"_id":"public/css/common/codeblock/copy-code.css","hash":"fa5f022395fe92b6daea063418a32f8c19be6168","modified":1662650171857},{"_id":"public/css/layout/home-content.css","hash":"be1438b849ebf82cea573986fbbd1deed5334a72","modified":1662650171857},{"_id":"public/css/font-awesome.min.css","hash":"c508528feb9fd540454f838653cd4863b290df2e","modified":1662650171857},{"_id":"public/js/libs/pjax.min.js","hash":"57ec40cb4898d7ba74a03603d608af378e5431f8","modified":1662650171857},{"_id":"public/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1662650171857},{"_id":"public/webfonts/fa-brands-400.eot","hash":"c719f4375679ee58e156434f9ba9727be669cf07","modified":1662650171857},{"_id":"public/webfonts/fa-brands-400.ttf","hash":"9b49c6c5b0cbdef158ae31b2a4e4814555408389","modified":1662650171857},{"_id":"public/webfonts/fa-regular-400.svg","hash":"6ad2be875a79cb6efb8d7ecf6e632784906656a7","modified":1662650171857},{"_id":"public/webfonts/fa-solid-900.eot","hash":"c39b89f7fa7b66931ab02a54002db5ffcbff206c","modified":1662650171857},{"_id":"public/webfonts/fa-solid-900.ttf","hash":"d537bf4cc7273ddb3fd754d53f2b241aeafaefe7","modified":1662650171857},{"_id":"public/webfonts/fa-brands-400.svg","hash":"deddeac293c90f492dc8546a468871a07b83e6b3","modified":1662650171857},{"_id":"public/webfonts/fa-solid-900.svg","hash":"b635afc5e400633904e0a7cde3ec75cd57e403cf","modified":1662650171857}],"Category":[{"name":"前端","_id":"cl7t6krpu0004kp00fuou61kq"},{"name":"编程","_id":"cl7t6krpz000akp0002gxa7ns"},{"name":"JavaScript","_id":"cl7t6krq6000xkp00d0ha5lwk"},{"name":"Markdown","_id":"cl7t6krqb0016kp00a6zsc60m"},{"name":"React","_id":"cl7t6krqe001dkp002x1v9ers"},{"name":"Javascript","_id":"cl7t6krqj001ykp00e91d9uta"},{"name":"插件","_id":"cl7t6krqo002ekp006ecidfq8"},{"name":"Nodejs","_id":"cl7t6krqp002okp00dinx5t7y"},{"name":"Test","_id":"cl7t6krqr002wkp0039ej13l6"},{"name":"编译原理","_id":"cl7t6krqu003ckp003ftm88gu"}],"Data":[],"Page":[{"title":"关于我","date":"2020-12-02T07:40:05.000Z","_content":"\n## 关于我\n- 前端工程师\n- 使用Vue.js, React, TypeScript\n- Golang 开发\n- NodeJs 开发\n- Python, Php 开发\n- 关注 Web 3.0, Flutter\n- 联系我 <xieqin1991@gmail.com>\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2020-12-02 15:40:05\n---\n\n## 关于我\n- 前端工程师\n- 使用Vue.js, React, TypeScript\n- Golang 开发\n- NodeJs 开发\n- Python, Php 开发\n- 关注 Web 3.0, Flutter\n- 联系我 <xieqin1991@gmail.com>\n","updated":"2022-09-08T15:22:38.822Z","path":"about/index.html","_id":"cl7t6krpk0000kp00cqu68jsu","comments":1,"layout":"page","content":"<h2 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h2><ul>\n<li>前端工程师</li>\n<li>使用Vue.js, React, TypeScript</li>\n<li>Golang 开发</li>\n<li>NodeJs 开发</li>\n<li>Python, Php 开发</li>\n<li>关注 Web 3.0, Flutter</li>\n<li>联系我 <a class=\"link\"   href=\"mailto:&#x78;&#x69;&#x65;&#113;&#x69;&#x6e;&#x31;&#57;&#x39;&#49;&#x40;&#x67;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;\" >&#x78;&#x69;&#x65;&#113;&#x69;&#x6e;&#x31;&#57;&#x39;&#49;&#x40;&#x67;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h2><ul>\n<li>前端工程师</li>\n<li>使用Vue.js, React, TypeScript</li>\n<li>Golang 开发</li>\n<li>NodeJs 开发</li>\n<li>Python, Php 开发</li>\n<li>关注 Web 3.0, Flutter</li>\n<li>联系我 <a class=\"link\"   href=\"mailto:&#x78;&#x69;&#x65;&#113;&#x69;&#x6e;&#x31;&#57;&#x39;&#49;&#x40;&#x67;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;\" >&#x78;&#x69;&#x65;&#113;&#x69;&#x6e;&#x31;&#57;&#x39;&#49;&#x40;&#x67;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n"},{"title":"链接","date":"2018-12-23T08:39:50.000Z","_content":"\n## 链接\n- 我的[github](https://github.com/xieQin)","source":"links/index.md","raw":"---\ntitle: 链接\ndate: 2018-12-23 16:39:50\n---\n\n## 链接\n- 我的[github](https://github.com/xieQin)","updated":"2022-09-08T14:51:06.975Z","path":"links/index.html","comments":1,"layout":"page","_id":"cl7t6krpq0002kp00631i9q5c","content":"<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><ul>\n<li>我的<a href=\"https://github.com/xieQin\">github</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><ul>\n<li>我的<a href=\"https://github.com/xieQin\">github</a></li>\n</ul>\n"},{"title":"cheirh的简历","date":"2021-10-20T06:00:02.000Z","_content":"\n### 联系方式\n- 手机：15221861705\n- 邮箱：<xieqin1991@gmail.com>\n- 微信：cherishHsieh\n\n### 教育经历\n- 2009 ~ 2013: 复旦大学 计算机科学与技术 本科\n\n### 工作经历\n- 2019.9 ～ 至今：上海七牛信息技术有限公司\n  高级前端开发工程师\n\n- 2016.7 ～ 2019.9：众安在线财产保险股份有限公司\n  资深前端开发工程师\n  负责金融事业群前端项目开发\n\n- 2014.6 ～ 2016.7：上海掌金信息技术有限公司\n  前端开发工程师\n  php开发工程师\n\n### 项目经历\n- 2019.9 ~ 至今\n  负责云主机、云短信、融合云前后端业务功能开发与迭代\n  职责：与产品经理合作提升前端用户体验，与供应商沟通实现产品前后端全线接入，帮助运营销售及技术支持团队及时解决客户问题，推动前端技术规范制定、工作文档沉淀和组内分享活动\n  技术栈：React, TypeScript, Mobx, Golang, NodeJs\n\n- 2018.12 ~ 2019.9\n  负责零售金融前端项目管理，支持零售金融业务前端需求\n  职责：与项目经理评估项目需求，分配前端资源，新技术调研及落地，前端开发、测试、发布流程完善\n  技术栈：Vue.js, Egg.js, React, TypeScript, Docker, Jenkins, Cypress, Jest\n\n- 2017.9 ～ 2018.12\n  负责点点项目前端开发\n  职责：支持点点项目业务需求，实现点点业务渠道接入、app、微信公众号、小程序全场景覆盖\n  技术栈：Vue.js, vue-cli3, mpvue, koa2, Docker, Nginx\n\n- 2016.7 ～2017.9\n  负责自发卡、马上还、马上金项目前端开发\n  职责：与产品经理、前置接口开发、测试合作，完成前端业务需求\n  技术栈：Vue.js, vue-router, vuex, Nginx\n\n### 关于我\n- 前端工程师\n- 使用Vue.js, React, TypeScript\n- Golang 开发\n- NodeJs 开发\n- Python, Php 开发\n- 关注 Web 3.0, Flutter\n","source":"resume/index.md","raw":"---\ntitle: cheirh的简历\ndate: 2021-10-20 14:00:02\n---\n\n### 联系方式\n- 手机：15221861705\n- 邮箱：<xieqin1991@gmail.com>\n- 微信：cherishHsieh\n\n### 教育经历\n- 2009 ~ 2013: 复旦大学 计算机科学与技术 本科\n\n### 工作经历\n- 2019.9 ～ 至今：上海七牛信息技术有限公司\n  高级前端开发工程师\n\n- 2016.7 ～ 2019.9：众安在线财产保险股份有限公司\n  资深前端开发工程师\n  负责金融事业群前端项目开发\n\n- 2014.6 ～ 2016.7：上海掌金信息技术有限公司\n  前端开发工程师\n  php开发工程师\n\n### 项目经历\n- 2019.9 ~ 至今\n  负责云主机、云短信、融合云前后端业务功能开发与迭代\n  职责：与产品经理合作提升前端用户体验，与供应商沟通实现产品前后端全线接入，帮助运营销售及技术支持团队及时解决客户问题，推动前端技术规范制定、工作文档沉淀和组内分享活动\n  技术栈：React, TypeScript, Mobx, Golang, NodeJs\n\n- 2018.12 ~ 2019.9\n  负责零售金融前端项目管理，支持零售金融业务前端需求\n  职责：与项目经理评估项目需求，分配前端资源，新技术调研及落地，前端开发、测试、发布流程完善\n  技术栈：Vue.js, Egg.js, React, TypeScript, Docker, Jenkins, Cypress, Jest\n\n- 2017.9 ～ 2018.12\n  负责点点项目前端开发\n  职责：支持点点项目业务需求，实现点点业务渠道接入、app、微信公众号、小程序全场景覆盖\n  技术栈：Vue.js, vue-cli3, mpvue, koa2, Docker, Nginx\n\n- 2016.7 ～2017.9\n  负责自发卡、马上还、马上金项目前端开发\n  职责：与产品经理、前置接口开发、测试合作，完成前端业务需求\n  技术栈：Vue.js, vue-router, vuex, Nginx\n\n### 关于我\n- 前端工程师\n- 使用Vue.js, React, TypeScript\n- Golang 开发\n- NodeJs 开发\n- Python, Php 开发\n- 关注 Web 3.0, Flutter\n","updated":"2022-09-08T14:53:03.530Z","path":"resume/index.html","comments":1,"layout":"page","_id":"cl7t6krpw0006kp004u8g0u3c","content":"<h3 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h3><ul>\n<li>手机：15221861705</li>\n<li>邮箱：<a href=\"mailto:&#120;&#x69;&#x65;&#113;&#105;&#110;&#x31;&#57;&#57;&#x31;&#64;&#x67;&#x6d;&#x61;&#105;&#108;&#x2e;&#x63;&#111;&#109;\">&#120;&#x69;&#x65;&#113;&#105;&#110;&#x31;&#57;&#57;&#x31;&#64;&#x67;&#x6d;&#x61;&#105;&#108;&#x2e;&#x63;&#111;&#109;</a></li>\n<li>微信：cherishHsieh</li>\n</ul>\n<h3 id=\"教育经历\"><a href=\"#教育经历\" class=\"headerlink\" title=\"教育经历\"></a>教育经历</h3><ul>\n<li>2009 ~ 2013: 复旦大学 计算机科学与技术 本科</li>\n</ul>\n<h3 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h3><ul>\n<li><p>2019.9 ～ 至今：上海七牛信息技术有限公司<br>高级前端开发工程师</p>\n</li>\n<li><p>2016.7 ～ 2019.9：众安在线财产保险股份有限公司<br>资深前端开发工程师<br>负责金融事业群前端项目开发</p>\n</li>\n<li><p>2014.6 ～ 2016.7：上海掌金信息技术有限公司<br>前端开发工程师<br>php开发工程师</p>\n</li>\n</ul>\n<h3 id=\"项目经历\"><a href=\"#项目经历\" class=\"headerlink\" title=\"项目经历\"></a>项目经历</h3><ul>\n<li><p>2019.9 ~ 至今<br>负责云主机、云短信、融合云前后端业务功能开发与迭代<br>职责：与产品经理合作提升前端用户体验，与供应商沟通实现产品前后端全线接入，帮助运营销售及技术支持团队及时解决客户问题，推动前端技术规范制定、工作文档沉淀和组内分享活动<br>技术栈：React, TypeScript, Mobx, Golang, NodeJs</p>\n</li>\n<li><p>2018.12 ~ 2019.9<br>负责零售金融前端项目管理，支持零售金融业务前端需求<br>职责：与项目经理评估项目需求，分配前端资源，新技术调研及落地，前端开发、测试、发布流程完善<br>技术栈：Vue.js, Egg.js, React, TypeScript, Docker, Jenkins, Cypress, Jest</p>\n</li>\n<li><p>2017.9 ～ 2018.12<br>负责点点项目前端开发<br>职责：支持点点项目业务需求，实现点点业务渠道接入、app、微信公众号、小程序全场景覆盖<br>技术栈：Vue.js, vue-cli3, mpvue, koa2, Docker, Nginx</p>\n</li>\n<li><p>2016.7 ～2017.9<br>负责自发卡、马上还、马上金项目前端开发<br>职责：与产品经理、前置接口开发、测试合作，完成前端业务需求<br>技术栈：Vue.js, vue-router, vuex, Nginx</p>\n</li>\n</ul>\n<h3 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h3><ul>\n<li>前端工程师</li>\n<li>使用Vue.js, React, TypeScript</li>\n<li>Golang 开发</li>\n<li>NodeJs 开发</li>\n<li>Python, Php 开发</li>\n<li>关注 Web 3.0, Flutter</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h3><ul>\n<li>手机：15221861705</li>\n<li>邮箱：<a href=\"mailto:&#120;&#x69;&#x65;&#113;&#105;&#110;&#x31;&#57;&#57;&#x31;&#64;&#x67;&#x6d;&#x61;&#105;&#108;&#x2e;&#x63;&#111;&#109;\">&#120;&#x69;&#x65;&#113;&#105;&#110;&#x31;&#57;&#57;&#x31;&#64;&#x67;&#x6d;&#x61;&#105;&#108;&#x2e;&#x63;&#111;&#109;</a></li>\n<li>微信：cherishHsieh</li>\n</ul>\n<h3 id=\"教育经历\"><a href=\"#教育经历\" class=\"headerlink\" title=\"教育经历\"></a>教育经历</h3><ul>\n<li>2009 ~ 2013: 复旦大学 计算机科学与技术 本科</li>\n</ul>\n<h3 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h3><ul>\n<li><p>2019.9 ～ 至今：上海七牛信息技术有限公司<br>高级前端开发工程师</p>\n</li>\n<li><p>2016.7 ～ 2019.9：众安在线财产保险股份有限公司<br>资深前端开发工程师<br>负责金融事业群前端项目开发</p>\n</li>\n<li><p>2014.6 ～ 2016.7：上海掌金信息技术有限公司<br>前端开发工程师<br>php开发工程师</p>\n</li>\n</ul>\n<h3 id=\"项目经历\"><a href=\"#项目经历\" class=\"headerlink\" title=\"项目经历\"></a>项目经历</h3><ul>\n<li><p>2019.9 ~ 至今<br>负责云主机、云短信、融合云前后端业务功能开发与迭代<br>职责：与产品经理合作提升前端用户体验，与供应商沟通实现产品前后端全线接入，帮助运营销售及技术支持团队及时解决客户问题，推动前端技术规范制定、工作文档沉淀和组内分享活动<br>技术栈：React, TypeScript, Mobx, Golang, NodeJs</p>\n</li>\n<li><p>2018.12 ~ 2019.9<br>负责零售金融前端项目管理，支持零售金融业务前端需求<br>职责：与项目经理评估项目需求，分配前端资源，新技术调研及落地，前端开发、测试、发布流程完善<br>技术栈：Vue.js, Egg.js, React, TypeScript, Docker, Jenkins, Cypress, Jest</p>\n</li>\n<li><p>2017.9 ～ 2018.12<br>负责点点项目前端开发<br>职责：支持点点项目业务需求，实现点点业务渠道接入、app、微信公众号、小程序全场景覆盖<br>技术栈：Vue.js, vue-cli3, mpvue, koa2, Docker, Nginx</p>\n</li>\n<li><p>2016.7 ～2017.9<br>负责自发卡、马上还、马上金项目前端开发<br>职责：与产品经理、前置接口开发、测试合作，完成前端业务需求<br>技术栈：Vue.js, vue-router, vuex, Nginx</p>\n</li>\n</ul>\n<h3 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h3><ul>\n<li>前端工程师</li>\n<li>使用Vue.js, React, TypeScript</li>\n<li>Golang 开发</li>\n<li>NodeJs 开发</li>\n<li>Python, Php 开发</li>\n<li>关注 Web 3.0, Flutter</li>\n</ul>\n"}],"Post":[{"title":"CSS绘制三角形","date":"2014-12-21T03:18:12.000Z","_content":"\nCSS绘制三角形是对border属性的应用\n\n```html\n<div class=\"test\"></div>\n```\n\n```css\n.test{\n  width: 0;\n  height: 0;\n  border-top: 50px solid black;\n  border-right: 50px solid red;\n  border-bottom: 50px solid blue;\n  border-left: 50px solid orange;\n}\n```\n\n![效果](https://segmentfault.com/img/bVlP6n)\n\n绘制各种三角形：\n必须设置三个边框的，且位于两侧的边框的 border-color 属性应设置为 transparent\n\n```css\n.test1{\n  width: 0;\n  height: 0;\n  border-right: 50px solid transparent;\n  border-bottom: 50px solid blue;\n  border-left: 50px solid transparent;\n}\n.test2{\n  width: 0;\n  height: 0;\n  border-top: 50px solid transparent;\n  border-bottom: 50px solid transparent;\n  border-left: 50px solid orange;\n}\n.test3{\n  width: 0;\n  height: 0;\n  border-top: 50px solid black;\n  border-right: 50px solid transparent;\n  border-left: 50px solid transparent;\n}\n.test4{\n  width: 0;\n  height: 0;\n  border-top: 50px solid transparent;\n  border-right: 50px solid red;\n  border-bottom: 50px solid transparent;\n}\n```","source":"_posts/CSS绘制三角形.md","raw":"---\ntitle: CSS绘制三角形\ndate: 2014-12-21 11:18:12\ntags: CSS\ncategories: 前端\n---\n\nCSS绘制三角形是对border属性的应用\n\n```html\n<div class=\"test\"></div>\n```\n\n```css\n.test{\n  width: 0;\n  height: 0;\n  border-top: 50px solid black;\n  border-right: 50px solid red;\n  border-bottom: 50px solid blue;\n  border-left: 50px solid orange;\n}\n```\n\n![效果](https://segmentfault.com/img/bVlP6n)\n\n绘制各种三角形：\n必须设置三个边框的，且位于两侧的边框的 border-color 属性应设置为 transparent\n\n```css\n.test1{\n  width: 0;\n  height: 0;\n  border-right: 50px solid transparent;\n  border-bottom: 50px solid blue;\n  border-left: 50px solid transparent;\n}\n.test2{\n  width: 0;\n  height: 0;\n  border-top: 50px solid transparent;\n  border-bottom: 50px solid transparent;\n  border-left: 50px solid orange;\n}\n.test3{\n  width: 0;\n  height: 0;\n  border-top: 50px solid black;\n  border-right: 50px solid transparent;\n  border-left: 50px solid transparent;\n}\n.test4{\n  width: 0;\n  height: 0;\n  border-top: 50px solid transparent;\n  border-right: 50px solid red;\n  border-bottom: 50px solid transparent;\n}\n```","slug":"CSS绘制三角形","published":1,"updated":"2022-09-08T14:51:06.959Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krpn0001kp00cddf61ul","content":"<p>CSS绘制三角形是对border属性的应用</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;test&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.test</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-top</span>: <span class=\"number\">50px</span> solid black;</span><br><span class=\"line\">  <span class=\"attribute\">border-right</span>: <span class=\"number\">50px</span> solid red;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">50px</span> solid blue;</span><br><span class=\"line\">  <span class=\"attribute\">border-left</span>: <span class=\"number\">50px</span> solid orange;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://segmentfault.com/img/bVlP6n\" alt=\"效果\"></p>\n<p>绘制各种三角形：<br>必须设置三个边框的，且位于两侧的边框的 border-color 属性应设置为 transparent</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.test1</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-right</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">50px</span> solid blue;</span><br><span class=\"line\">  <span class=\"attribute\">border-left</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test2</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-top</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\">  <span class=\"attribute\">border-left</span>: <span class=\"number\">50px</span> solid orange;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test3</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-top</span>: <span class=\"number\">50px</span> solid black;</span><br><span class=\"line\">  <span class=\"attribute\">border-right</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\">  <span class=\"attribute\">border-left</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test4</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-top</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\">  <span class=\"attribute\">border-right</span>: <span class=\"number\">50px</span> solid red;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>CSS绘制三角形是对border属性的应用</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;test&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.test</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-top</span>: <span class=\"number\">50px</span> solid black;</span><br><span class=\"line\">  <span class=\"attribute\">border-right</span>: <span class=\"number\">50px</span> solid red;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">50px</span> solid blue;</span><br><span class=\"line\">  <span class=\"attribute\">border-left</span>: <span class=\"number\">50px</span> solid orange;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://segmentfault.com/img/bVlP6n\" alt=\"效果\"></p>\n<p>绘制各种三角形：<br>必须设置三个边框的，且位于两侧的边框的 border-color 属性应设置为 transparent</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.test1</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-right</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">50px</span> solid blue;</span><br><span class=\"line\">  <span class=\"attribute\">border-left</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test2</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-top</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\">  <span class=\"attribute\">border-left</span>: <span class=\"number\">50px</span> solid orange;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test3</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-top</span>: <span class=\"number\">50px</span> solid black;</span><br><span class=\"line\">  <span class=\"attribute\">border-right</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\">  <span class=\"attribute\">border-left</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test4</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-top</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\">  <span class=\"attribute\">border-right</span>: <span class=\"number\">50px</span> solid red;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"ES2015 总结","date":"2016-02-12T10:34:05.000Z","_content":"关于ES2015，我最大的感受便是，当你一开始使用它，就再也不想离开了:)\n\n学习资源：\n- [ECMAScript6入门](http://es6.ruanyifeng.com/)\n\n#### 1. 常用的es2015特性\nlet\nconst\nclass\narrow function\ntemplate string\ndestructuring\ndefault\nreset arguments\nimport export\n\n#### 2. 语法和特性\n\n###### 2.1 let const 块级作用域\n\n###### 2.2 箭头函数\n\n```js\nfoo => foo + ' world'\n\n(foo, bar) => foo + bar\n\nfoo => {\n  return foo + ' world'\n}\n\n(foo, bar) => {\n  return foo + bar\n}\n```\n箭头函数对上下文的绑定是强制性的，无法通过apply或call方法改变其上下文\n\n###### 2.3 模板字符串\n- 支持变量注入\n```js\nlet greet = `Hi, I'm ${name}, I am the ${title} at ${company}`\n```\n\n- 支持换行\n\n###### 2.4 对象字面量扩展语法\n\n```js\nlet obj = {\n  // before\n  foo: function() {\n    return 'foo'\n  },\n\n  // after\n  bar() {\n    return 'bar'\n  }\n}\n```\n\n###### 2.5 表达式解构\n\n```js\nfunction search(query) {\n  // ...\n  // let users = [ ... ]\n  // let posts = [ ... ]\n  // ...\n\n  return {\n    users: users,\n    posts: posts\n  }\n}\n```\n\n###### 2.6 函数参数表达、传参\n\n```js\nfunction fetchSomethings(...args) {\n  // ...\n}\nfunction doSomeOthers(name, ...args) {\n  // ...\n}\n```\n\n###### 2.7 新的数据结构\n\n- Set WeakSet\n- Map WeakMap\n\n###### 2.8 类\n\n```js\nclass Person {\n  constructor(name, gender, age) {\n    this.name = name\n    this.gender = gender\n    this.age = age\n  }\n\n  isAdult() {\n    return this.age >= 18\n  }\n}\n\nlet me = new Person('iwillwen', 'man', 19)\nconsole.log(me.isAdult()) //=> true\n```\n\n###### 2.9 生成器\n\n```js\nfunction* fibo() {\n  let a = 1\n  let b = 1\n\n  yield a\n  yield b\n\n  while (true) {\n    let next = a + b\n    a = b\n    b = next\n    yield next\n  }\n}\n\nlet generator = fibo()\n\nfor (var i = 0; i < 10; i++)\n  console.log(generator.next().value) //=> 1 1 2 3 5 8 13 21 34 55\n```\n生成器(Generator) 的运行原理\n![](http://static.open-open.com/lib/uploadImg/20151111/20151111142042_17.jpg)\n\n###### 2.10 模块化\n\n```js\nimport name from 'module-name'\nimport * as name from 'module-name'\n```\n\n```js\n// module.js\nexport function method() { /* ... */ }\n\n// main.js\nimport M from './module'\nM.method()\n```\n\n```js\n// module.js\nexport default {\n  method1,\n  method2\n}\n\n// main.js\nimport M from './module'\nM.method1()\n```\n\n###### 2.11 Promise\n\n```js\nfunction fetchData() {\n  return new Promise((resolve, reject) => {\n    // ...\n  })\n}\n```\n\n###### 2.12 Symbol\nSymbol 对象具有唯一性\n\n```js\nlet privateDataStore = {\n  set(val) {\n    let key = Symbol(Math.random().toString(32).substr(2))\n    this[key] = val\n\n    return key\n  },\n\n  get(key) {\n    return this[key]\n  }\n}\n\nlet key = privateDateStore('hello world')\nprivateDataStore[key] //=> undefined\nprivateDataStore.get(key) //=> hello world\n```\n\n###### 2.13 Proxy\n\n```js\nlet apiProxy = new Proxy(api, {\n  get(receiver, name) {\n    return (function(...args) {\n      min.sadd(`log:${name}`, args)\n      return receiver[name].apply(receiver, args)\n    }).bind(receiver)\n  }\n})\n\napi.getComments(artical.id)\n  .then(comments => {\n    // ...\n  })\n```","source":"_posts/ES2015-总结.md","raw":"---\ntitle: ES2015 总结\ndate: 2016-02-12 18:34:05\ntags: Javascript\ncategories: 编程\n---\n关于ES2015，我最大的感受便是，当你一开始使用它，就再也不想离开了:)\n\n学习资源：\n- [ECMAScript6入门](http://es6.ruanyifeng.com/)\n\n#### 1. 常用的es2015特性\nlet\nconst\nclass\narrow function\ntemplate string\ndestructuring\ndefault\nreset arguments\nimport export\n\n#### 2. 语法和特性\n\n###### 2.1 let const 块级作用域\n\n###### 2.2 箭头函数\n\n```js\nfoo => foo + ' world'\n\n(foo, bar) => foo + bar\n\nfoo => {\n  return foo + ' world'\n}\n\n(foo, bar) => {\n  return foo + bar\n}\n```\n箭头函数对上下文的绑定是强制性的，无法通过apply或call方法改变其上下文\n\n###### 2.3 模板字符串\n- 支持变量注入\n```js\nlet greet = `Hi, I'm ${name}, I am the ${title} at ${company}`\n```\n\n- 支持换行\n\n###### 2.4 对象字面量扩展语法\n\n```js\nlet obj = {\n  // before\n  foo: function() {\n    return 'foo'\n  },\n\n  // after\n  bar() {\n    return 'bar'\n  }\n}\n```\n\n###### 2.5 表达式解构\n\n```js\nfunction search(query) {\n  // ...\n  // let users = [ ... ]\n  // let posts = [ ... ]\n  // ...\n\n  return {\n    users: users,\n    posts: posts\n  }\n}\n```\n\n###### 2.6 函数参数表达、传参\n\n```js\nfunction fetchSomethings(...args) {\n  // ...\n}\nfunction doSomeOthers(name, ...args) {\n  // ...\n}\n```\n\n###### 2.7 新的数据结构\n\n- Set WeakSet\n- Map WeakMap\n\n###### 2.8 类\n\n```js\nclass Person {\n  constructor(name, gender, age) {\n    this.name = name\n    this.gender = gender\n    this.age = age\n  }\n\n  isAdult() {\n    return this.age >= 18\n  }\n}\n\nlet me = new Person('iwillwen', 'man', 19)\nconsole.log(me.isAdult()) //=> true\n```\n\n###### 2.9 生成器\n\n```js\nfunction* fibo() {\n  let a = 1\n  let b = 1\n\n  yield a\n  yield b\n\n  while (true) {\n    let next = a + b\n    a = b\n    b = next\n    yield next\n  }\n}\n\nlet generator = fibo()\n\nfor (var i = 0; i < 10; i++)\n  console.log(generator.next().value) //=> 1 1 2 3 5 8 13 21 34 55\n```\n生成器(Generator) 的运行原理\n![](http://static.open-open.com/lib/uploadImg/20151111/20151111142042_17.jpg)\n\n###### 2.10 模块化\n\n```js\nimport name from 'module-name'\nimport * as name from 'module-name'\n```\n\n```js\n// module.js\nexport function method() { /* ... */ }\n\n// main.js\nimport M from './module'\nM.method()\n```\n\n```js\n// module.js\nexport default {\n  method1,\n  method2\n}\n\n// main.js\nimport M from './module'\nM.method1()\n```\n\n###### 2.11 Promise\n\n```js\nfunction fetchData() {\n  return new Promise((resolve, reject) => {\n    // ...\n  })\n}\n```\n\n###### 2.12 Symbol\nSymbol 对象具有唯一性\n\n```js\nlet privateDataStore = {\n  set(val) {\n    let key = Symbol(Math.random().toString(32).substr(2))\n    this[key] = val\n\n    return key\n  },\n\n  get(key) {\n    return this[key]\n  }\n}\n\nlet key = privateDateStore('hello world')\nprivateDataStore[key] //=> undefined\nprivateDataStore.get(key) //=> hello world\n```\n\n###### 2.13 Proxy\n\n```js\nlet apiProxy = new Proxy(api, {\n  get(receiver, name) {\n    return (function(...args) {\n      min.sadd(`log:${name}`, args)\n      return receiver[name].apply(receiver, args)\n    }).bind(receiver)\n  }\n})\n\napi.getComments(artical.id)\n  .then(comments => {\n    // ...\n  })\n```","slug":"ES2015-总结","published":1,"updated":"2022-09-08T14:51:06.960Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krps0003kp0093xqg5kk","content":"<p>关于ES2015，我最大的感受便是，当你一开始使用它，就再也不想离开了:)</p>\n<p>学习资源：</p>\n<ul>\n<li><a href=\"http://es6.ruanyifeng.com/\">ECMAScript6入门</a></li>\n</ul>\n<h4 id=\"1-常用的es2015特性\"><a href=\"#1-常用的es2015特性\" class=\"headerlink\" title=\"1. 常用的es2015特性\"></a>1. 常用的es2015特性</h4><p>let<br>const<br>class<br>arrow function<br>template string<br>destructuring<br>default<br>reset arguments<br>import export</p>\n<h4 id=\"2-语法和特性\"><a href=\"#2-语法和特性\" class=\"headerlink\" title=\"2. 语法和特性\"></a>2. 语法和特性</h4><h6 id=\"2-1-let-const-块级作用域\"><a href=\"#2-1-let-const-块级作用域\" class=\"headerlink\" title=\"2.1 let const 块级作用域\"></a>2.1 let const 块级作用域</h6><h6 id=\"2-2-箭头函数\"><a href=\"#2-2-箭头函数\" class=\"headerlink\" title=\"2.2 箭头函数\"></a>2.2 箭头函数</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">foo =&gt; foo + <span class=\"string\">&#x27; world&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">(foo, bar) =&gt; foo + bar</span><br><span class=\"line\"></span><br><span class=\"line\">foo =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> foo + <span class=\"string\">&#x27; world&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">(foo, bar) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> foo + bar</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>箭头函数对上下文的绑定是强制性的，无法通过apply或call方法改变其上下文</p>\n<h6 id=\"2-3-模板字符串\"><a href=\"#2-3-模板字符串\" class=\"headerlink\" title=\"2.3 模板字符串\"></a>2.3 模板字符串</h6><ul>\n<li><p>支持变量注入</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> greet = <span class=\"string\">`Hi, I&#x27;m <span class=\"subst\">$&#123;name&#125;</span>, I am the <span class=\"subst\">$&#123;title&#125;</span> at <span class=\"subst\">$&#123;company&#125;</span>`</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>支持换行</p>\n</li>\n</ul>\n<h6 id=\"2-4-对象字面量扩展语法\"><a href=\"#2-4-对象字面量扩展语法\" class=\"headerlink\" title=\"2.4 对象字面量扩展语法\"></a>2.4 对象字面量扩展语法</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// before</span></span><br><span class=\"line\">  <span class=\"attr\">foo</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;foo&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// after</span></span><br><span class=\"line\">  <span class=\"title function_\">bar</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;bar&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"2-5-表达式解构\"><a href=\"#2-5-表达式解构\" class=\"headerlink\" title=\"2.5 表达式解构\"></a>2.5 表达式解构</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">search</span>(<span class=\"params\">query</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  <span class=\"comment\">// let users = [ ... ]</span></span><br><span class=\"line\">  <span class=\"comment\">// let posts = [ ... ]</span></span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">users</span>: users,</span><br><span class=\"line\">    <span class=\"attr\">posts</span>: posts</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"2-6-函数参数表达、传参\"><a href=\"#2-6-函数参数表达、传参\" class=\"headerlink\" title=\"2.6 函数参数表达、传参\"></a>2.6 函数参数表达、传参</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fetchSomethings</span>(<span class=\"params\">...args</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">doSomeOthers</span>(<span class=\"params\">name, ...args</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"2-7-新的数据结构\"><a href=\"#2-7-新的数据结构\" class=\"headerlink\" title=\"2.7 新的数据结构\"></a>2.7 新的数据结构</h6><ul>\n<li>Set WeakSet</li>\n<li>Map WeakMap</li>\n</ul>\n<h6 id=\"2-8-类\"><a href=\"#2-8-类\" class=\"headerlink\" title=\"2.8 类\"></a>2.8 类</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">name, gender, age</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">gender</span> = gender</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = age</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">isAdult</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> &gt;= <span class=\"number\">18</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> me = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&#x27;iwillwen&#x27;</span>, <span class=\"string\">&#x27;man&#x27;</span>, <span class=\"number\">19</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(me.<span class=\"title function_\">isAdult</span>()) <span class=\"comment\">//=&gt; true</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"2-9-生成器\"><a href=\"#2-9-生成器\" class=\"headerlink\" title=\"2.9 生成器\"></a>2.9 生成器</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span>* <span class=\"title function_\">fibo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> a = <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> b = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">yield</span> a</span><br><span class=\"line\">  <span class=\"keyword\">yield</span> b</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> next = a + b</span><br><span class=\"line\">    a = b</span><br><span class=\"line\">    b = next</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> next</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> generator = <span class=\"title function_\">fibo</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(generator.<span class=\"title function_\">next</span>().<span class=\"property\">value</span>) <span class=\"comment\">//=&gt; 1 1 2 3 5 8 13 21 34 55</span></span><br></pre></td></tr></table></figure>\n<p>生成器(Generator) 的运行原理<br><img src=\"http://static.open-open.com/lib/uploadImg/20151111/20151111142042_17.jpg\"></p>\n<h6 id=\"2-10-模块化\"><a href=\"#2-10-模块化\" class=\"headerlink\" title=\"2.10 模块化\"></a>2.10 模块化</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> name <span class=\"keyword\">from</span> <span class=\"string\">&#x27;module-name&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> name <span class=\"keyword\">from</span> <span class=\"string\">&#x27;module-name&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// module.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">method</span>(<span class=\"params\"></span>) &#123; <span class=\"comment\">/* ... */</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> M <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./module&#x27;</span></span><br><span class=\"line\">M.<span class=\"title function_\">method</span>()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// module.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  method1,</span><br><span class=\"line\">  method2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> M <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./module&#x27;</span></span><br><span class=\"line\">M.<span class=\"title function_\">method1</span>()</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"2-11-Promise\"><a href=\"#2-11-Promise\" class=\"headerlink\" title=\"2.11 Promise\"></a>2.11 Promise</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fetchData</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"2-12-Symbol\"><a href=\"#2-12-Symbol\" class=\"headerlink\" title=\"2.12 Symbol\"></a>2.12 Symbol</h6><p>Symbol 对象具有唯一性</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> privateDataStore = &#123;</span><br><span class=\"line\">  <span class=\"title function_\">set</span>(<span class=\"params\">val</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> key = <span class=\"title class_\">Symbol</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>().<span class=\"title function_\">toString</span>(<span class=\"number\">32</span>).<span class=\"title function_\">substr</span>(<span class=\"number\">2</span>))</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>[key] = val</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> key</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">get</span>(<span class=\"params\">key</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>[key]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> key = <span class=\"title function_\">privateDateStore</span>(<span class=\"string\">&#x27;hello world&#x27;</span>)</span><br><span class=\"line\">privateDataStore[key] <span class=\"comment\">//=&gt; undefined</span></span><br><span class=\"line\">privateDataStore.<span class=\"title function_\">get</span>(key) <span class=\"comment\">//=&gt; hello world</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"2-13-Proxy\"><a href=\"#2-13-Proxy\" class=\"headerlink\" title=\"2.13 Proxy\"></a>2.13 Proxy</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> apiProxy = <span class=\"keyword\">new</span> <span class=\"title class_\">Proxy</span>(api, &#123;</span><br><span class=\"line\">  <span class=\"title function_\">get</span>(<span class=\"params\">receiver, name</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (<span class=\"keyword\">function</span>(<span class=\"params\">...args</span>) &#123;</span><br><span class=\"line\">      min.<span class=\"title function_\">sadd</span>(<span class=\"string\">`log:<span class=\"subst\">$&#123;name&#125;</span>`</span>, args)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> receiver[name].<span class=\"title function_\">apply</span>(receiver, args)</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">bind</span>(receiver)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">api.<span class=\"title function_\">getComments</span>(artical.<span class=\"property\">id</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">comments</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>关于ES2015，我最大的感受便是，当你一开始使用它，就再也不想离开了:)</p>\n<p>学习资源：</p>\n<ul>\n<li><a href=\"http://es6.ruanyifeng.com/\">ECMAScript6入门</a></li>\n</ul>\n<h4 id=\"1-常用的es2015特性\"><a href=\"#1-常用的es2015特性\" class=\"headerlink\" title=\"1. 常用的es2015特性\"></a>1. 常用的es2015特性</h4><p>let<br>const<br>class<br>arrow function<br>template string<br>destructuring<br>default<br>reset arguments<br>import export</p>\n<h4 id=\"2-语法和特性\"><a href=\"#2-语法和特性\" class=\"headerlink\" title=\"2. 语法和特性\"></a>2. 语法和特性</h4><h6 id=\"2-1-let-const-块级作用域\"><a href=\"#2-1-let-const-块级作用域\" class=\"headerlink\" title=\"2.1 let const 块级作用域\"></a>2.1 let const 块级作用域</h6><h6 id=\"2-2-箭头函数\"><a href=\"#2-2-箭头函数\" class=\"headerlink\" title=\"2.2 箭头函数\"></a>2.2 箭头函数</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">foo =&gt; foo + <span class=\"string\">&#x27; world&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">(foo, bar) =&gt; foo + bar</span><br><span class=\"line\"></span><br><span class=\"line\">foo =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> foo + <span class=\"string\">&#x27; world&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">(foo, bar) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> foo + bar</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>箭头函数对上下文的绑定是强制性的，无法通过apply或call方法改变其上下文</p>\n<h6 id=\"2-3-模板字符串\"><a href=\"#2-3-模板字符串\" class=\"headerlink\" title=\"2.3 模板字符串\"></a>2.3 模板字符串</h6><ul>\n<li><p>支持变量注入</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> greet = <span class=\"string\">`Hi, I&#x27;m <span class=\"subst\">$&#123;name&#125;</span>, I am the <span class=\"subst\">$&#123;title&#125;</span> at <span class=\"subst\">$&#123;company&#125;</span>`</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>支持换行</p>\n</li>\n</ul>\n<h6 id=\"2-4-对象字面量扩展语法\"><a href=\"#2-4-对象字面量扩展语法\" class=\"headerlink\" title=\"2.4 对象字面量扩展语法\"></a>2.4 对象字面量扩展语法</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// before</span></span><br><span class=\"line\">  <span class=\"attr\">foo</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;foo&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// after</span></span><br><span class=\"line\">  <span class=\"title function_\">bar</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;bar&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"2-5-表达式解构\"><a href=\"#2-5-表达式解构\" class=\"headerlink\" title=\"2.5 表达式解构\"></a>2.5 表达式解构</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">search</span>(<span class=\"params\">query</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  <span class=\"comment\">// let users = [ ... ]</span></span><br><span class=\"line\">  <span class=\"comment\">// let posts = [ ... ]</span></span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">users</span>: users,</span><br><span class=\"line\">    <span class=\"attr\">posts</span>: posts</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"2-6-函数参数表达、传参\"><a href=\"#2-6-函数参数表达、传参\" class=\"headerlink\" title=\"2.6 函数参数表达、传参\"></a>2.6 函数参数表达、传参</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fetchSomethings</span>(<span class=\"params\">...args</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">doSomeOthers</span>(<span class=\"params\">name, ...args</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"2-7-新的数据结构\"><a href=\"#2-7-新的数据结构\" class=\"headerlink\" title=\"2.7 新的数据结构\"></a>2.7 新的数据结构</h6><ul>\n<li>Set WeakSet</li>\n<li>Map WeakMap</li>\n</ul>\n<h6 id=\"2-8-类\"><a href=\"#2-8-类\" class=\"headerlink\" title=\"2.8 类\"></a>2.8 类</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">name, gender, age</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">gender</span> = gender</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = age</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">isAdult</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> &gt;= <span class=\"number\">18</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> me = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&#x27;iwillwen&#x27;</span>, <span class=\"string\">&#x27;man&#x27;</span>, <span class=\"number\">19</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(me.<span class=\"title function_\">isAdult</span>()) <span class=\"comment\">//=&gt; true</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"2-9-生成器\"><a href=\"#2-9-生成器\" class=\"headerlink\" title=\"2.9 生成器\"></a>2.9 生成器</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span>* <span class=\"title function_\">fibo</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> a = <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> b = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">yield</span> a</span><br><span class=\"line\">  <span class=\"keyword\">yield</span> b</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> next = a + b</span><br><span class=\"line\">    a = b</span><br><span class=\"line\">    b = next</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> next</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> generator = <span class=\"title function_\">fibo</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(generator.<span class=\"title function_\">next</span>().<span class=\"property\">value</span>) <span class=\"comment\">//=&gt; 1 1 2 3 5 8 13 21 34 55</span></span><br></pre></td></tr></table></figure>\n<p>生成器(Generator) 的运行原理<br><img src=\"http://static.open-open.com/lib/uploadImg/20151111/20151111142042_17.jpg\"></p>\n<h6 id=\"2-10-模块化\"><a href=\"#2-10-模块化\" class=\"headerlink\" title=\"2.10 模块化\"></a>2.10 模块化</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> name <span class=\"keyword\">from</span> <span class=\"string\">&#x27;module-name&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> name <span class=\"keyword\">from</span> <span class=\"string\">&#x27;module-name&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// module.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">method</span>(<span class=\"params\"></span>) &#123; <span class=\"comment\">/* ... */</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> M <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./module&#x27;</span></span><br><span class=\"line\">M.<span class=\"title function_\">method</span>()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// module.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  method1,</span><br><span class=\"line\">  method2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// main.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> M <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./module&#x27;</span></span><br><span class=\"line\">M.<span class=\"title function_\">method1</span>()</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"2-11-Promise\"><a href=\"#2-11-Promise\" class=\"headerlink\" title=\"2.11 Promise\"></a>2.11 Promise</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fetchData</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"2-12-Symbol\"><a href=\"#2-12-Symbol\" class=\"headerlink\" title=\"2.12 Symbol\"></a>2.12 Symbol</h6><p>Symbol 对象具有唯一性</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> privateDataStore = &#123;</span><br><span class=\"line\">  <span class=\"title function_\">set</span>(<span class=\"params\">val</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> key = <span class=\"title class_\">Symbol</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>().<span class=\"title function_\">toString</span>(<span class=\"number\">32</span>).<span class=\"title function_\">substr</span>(<span class=\"number\">2</span>))</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>[key] = val</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> key</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">get</span>(<span class=\"params\">key</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>[key]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> key = <span class=\"title function_\">privateDateStore</span>(<span class=\"string\">&#x27;hello world&#x27;</span>)</span><br><span class=\"line\">privateDataStore[key] <span class=\"comment\">//=&gt; undefined</span></span><br><span class=\"line\">privateDataStore.<span class=\"title function_\">get</span>(key) <span class=\"comment\">//=&gt; hello world</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"2-13-Proxy\"><a href=\"#2-13-Proxy\" class=\"headerlink\" title=\"2.13 Proxy\"></a>2.13 Proxy</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> apiProxy = <span class=\"keyword\">new</span> <span class=\"title class_\">Proxy</span>(api, &#123;</span><br><span class=\"line\">  <span class=\"title function_\">get</span>(<span class=\"params\">receiver, name</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (<span class=\"keyword\">function</span>(<span class=\"params\">...args</span>) &#123;</span><br><span class=\"line\">      min.<span class=\"title function_\">sadd</span>(<span class=\"string\">`log:<span class=\"subst\">$&#123;name&#125;</span>`</span>, args)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> receiver[name].<span class=\"title function_\">apply</span>(receiver, args)</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">bind</span>(receiver)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">api.<span class=\"title function_\">getComments</span>(artical.<span class=\"property\">id</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">comments</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;)</span><br></pre></td></tr></table></figure>"},{"title":"CommonJs、AMD、UMD","date":"2015-11-30T09:56:11.000Z","_content":"js的模块化方案真是层出不穷，专门记录一下各个方案之间的差别\n\n[参考文章](http://davidbcalhoun.com/2014/what-is-amd-commonjs-and-umd/)\n\n### 一、AMD\n异步模块定义，专门为浏览器中js环境设计的规范\nrequirejs的模块化方案，在用requirejs做项目的时候接触到的\n\n基本api:\n\n```js\ndefine(id?, dependencies?, factory);\n```\n\n定义无依赖的模块：\n\n```js\ndefine(function() {\n  return {\n    mix: function(source, target) {\n    }\n  };\n});\n````\n\n定义有依赖的模块：\n\n```js\ndefine(['base'], function(base) {\n    return {\n        show: function() {\n            // todo with module base\n        }\n    }\n});\n\ndefine(['data', 'ui'], function(data, ui) {\n    // init here\n});\n```\n\n定义数据对象模块:\n\n```js\ndefine({\n    users: [],\n    members: []\n});\n```\n\n### 二、Commonjs\n一个单独的文件就是一个模块\n每一个模块都是一个单独的作用域，在一个文件定义的变量（还包括函数和类），都是私有的\n\nCommonJS定义的模块分为:\n  - 模块引用(require)\n  - 模块定义(exports)\n  - 模块标识(module)\n\n```js\n// foo.js\nvar request = require('request').default({ \n    timeout: 4000\n});\n\nmodule.exports = function(){ \n    this.re = '';\n    this.req = function(url){ \n        request(url,function(error,status,res){ \n            this.re = res;\n        });\n    }\n};\n```\n\n```js\n// main.js\n\nvar Foo = require('./foo');\nvar foo = new Foo();\nfoo.req('http://www.baidu.com');\nconsole.log(foo.re);\n```\n\nCommonJS 加载模块是同步的，所以只有加载完成才能执行后面的操作\n\n### 三、UMD\n\nUMD是AMD和CommonJS的糅合\n\nUMD先判断是否支持Node.js的模块（exports）是否存在，存在则使用Node.js模块模式。\n再判断是否支持AMD（define是否存在），存在则使用AMD方式加载模块\n","source":"_posts/CommonJs、AMD、UMD.md","raw":"---\ntitle: CommonJs、AMD、UMD\ndate: 2015-11-30 17:56:11\ntags: Javascript\ncategories: 前端\n---\njs的模块化方案真是层出不穷，专门记录一下各个方案之间的差别\n\n[参考文章](http://davidbcalhoun.com/2014/what-is-amd-commonjs-and-umd/)\n\n### 一、AMD\n异步模块定义，专门为浏览器中js环境设计的规范\nrequirejs的模块化方案，在用requirejs做项目的时候接触到的\n\n基本api:\n\n```js\ndefine(id?, dependencies?, factory);\n```\n\n定义无依赖的模块：\n\n```js\ndefine(function() {\n  return {\n    mix: function(source, target) {\n    }\n  };\n});\n````\n\n定义有依赖的模块：\n\n```js\ndefine(['base'], function(base) {\n    return {\n        show: function() {\n            // todo with module base\n        }\n    }\n});\n\ndefine(['data', 'ui'], function(data, ui) {\n    // init here\n});\n```\n\n定义数据对象模块:\n\n```js\ndefine({\n    users: [],\n    members: []\n});\n```\n\n### 二、Commonjs\n一个单独的文件就是一个模块\n每一个模块都是一个单独的作用域，在一个文件定义的变量（还包括函数和类），都是私有的\n\nCommonJS定义的模块分为:\n  - 模块引用(require)\n  - 模块定义(exports)\n  - 模块标识(module)\n\n```js\n// foo.js\nvar request = require('request').default({ \n    timeout: 4000\n});\n\nmodule.exports = function(){ \n    this.re = '';\n    this.req = function(url){ \n        request(url,function(error,status,res){ \n            this.re = res;\n        });\n    }\n};\n```\n\n```js\n// main.js\n\nvar Foo = require('./foo');\nvar foo = new Foo();\nfoo.req('http://www.baidu.com');\nconsole.log(foo.re);\n```\n\nCommonJS 加载模块是同步的，所以只有加载完成才能执行后面的操作\n\n### 三、UMD\n\nUMD是AMD和CommonJS的糅合\n\nUMD先判断是否支持Node.js的模块（exports）是否存在，存在则使用Node.js模块模式。\n再判断是否支持AMD（define是否存在），存在则使用AMD方式加载模块\n","slug":"CommonJs、AMD、UMD","published":1,"updated":"2022-09-08T14:51:06.960Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krpw0007kp00cpgufiul","content":"<p>js的模块化方案真是层出不穷，专门记录一下各个方案之间的差别</p>\n<p><a href=\"http://davidbcalhoun.com/2014/what-is-amd-commonjs-and-umd/\">参考文章</a></p>\n<h3 id=\"一、AMD\"><a href=\"#一、AMD\" class=\"headerlink\" title=\"一、AMD\"></a>一、AMD</h3><p>异步模块定义，专门为浏览器中js环境设计的规范<br>requirejs的模块化方案，在用requirejs做项目的时候接触到的</p>\n<p>基本api:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">define</span>(id?, dependencies?, factory);</span><br></pre></td></tr></table></figure>\n\n<p>定义无依赖的模块：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">define</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">mix</span>: <span class=\"keyword\">function</span>(<span class=\"params\">source, target</span>) &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"string\">``</span><span class=\"string\">``</span></span><br><span class=\"line\"></span><br><span class=\"line\">定义有依赖的模块：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">``</span><span class=\"string\">`js</span></span><br><span class=\"line\"><span class=\"string\">define([&#x27;base&#x27;], function(base) &#123;</span></span><br><span class=\"line\"><span class=\"string\">    return &#123;</span></span><br><span class=\"line\"><span class=\"string\">        show: function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">            // todo with module base</span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">define([&#x27;data&#x27;, &#x27;ui&#x27;], function(data, ui) &#123;</span></span><br><span class=\"line\"><span class=\"string\">    // init here</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br></pre></td></tr></table></figure>\n\n<p>定义数据对象模块:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">define</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">users</span>: [],</span><br><span class=\"line\">    <span class=\"attr\">members</span>: []</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二、Commonjs\"><a href=\"#二、Commonjs\" class=\"headerlink\" title=\"二、Commonjs\"></a>二、Commonjs</h3><p>一个单独的文件就是一个模块<br>每一个模块都是一个单独的作用域，在一个文件定义的变量（还包括函数和类），都是私有的</p>\n<p>CommonJS定义的模块分为:</p>\n<ul>\n<li>模块引用(require)</li>\n<li>模块定义(exports)</li>\n<li>模块标识(module)</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// foo.js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> request = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;request&#x27;</span>).<span class=\"title function_\">default</span>(&#123; </span><br><span class=\"line\">    <span class=\"attr\">timeout</span>: <span class=\"number\">4000</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; </span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">re</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">req</span> = <span class=\"keyword\">function</span>(<span class=\"params\">url</span>)&#123; </span><br><span class=\"line\">        <span class=\"title function_\">request</span>(url,<span class=\"keyword\">function</span>(<span class=\"params\">error,status,res</span>)&#123; </span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">re</span> = res;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// main.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Foo</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./foo&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"keyword\">new</span> <span class=\"title class_\">Foo</span>();</span><br><span class=\"line\">foo.<span class=\"title function_\">req</span>(<span class=\"string\">&#x27;http://www.baidu.com&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(foo.<span class=\"property\">re</span>);</span><br></pre></td></tr></table></figure>\n\n<p>CommonJS 加载模块是同步的，所以只有加载完成才能执行后面的操作</p>\n<h3 id=\"三、UMD\"><a href=\"#三、UMD\" class=\"headerlink\" title=\"三、UMD\"></a>三、UMD</h3><p>UMD是AMD和CommonJS的糅合</p>\n<p>UMD先判断是否支持Node.js的模块（exports）是否存在，存在则使用Node.js模块模式。<br>再判断是否支持AMD（define是否存在），存在则使用AMD方式加载模块</p>\n","site":{"data":{}},"excerpt":"","more":"<p>js的模块化方案真是层出不穷，专门记录一下各个方案之间的差别</p>\n<p><a href=\"http://davidbcalhoun.com/2014/what-is-amd-commonjs-and-umd/\">参考文章</a></p>\n<h3 id=\"一、AMD\"><a href=\"#一、AMD\" class=\"headerlink\" title=\"一、AMD\"></a>一、AMD</h3><p>异步模块定义，专门为浏览器中js环境设计的规范<br>requirejs的模块化方案，在用requirejs做项目的时候接触到的</p>\n<p>基本api:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">define</span>(id?, dependencies?, factory);</span><br></pre></td></tr></table></figure>\n\n<p>定义无依赖的模块：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">define</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">mix</span>: <span class=\"keyword\">function</span>(<span class=\"params\">source, target</span>) &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"string\">``</span><span class=\"string\">``</span></span><br><span class=\"line\"></span><br><span class=\"line\">定义有依赖的模块：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">``</span><span class=\"string\">`js</span></span><br><span class=\"line\"><span class=\"string\">define([&#x27;base&#x27;], function(base) &#123;</span></span><br><span class=\"line\"><span class=\"string\">    return &#123;</span></span><br><span class=\"line\"><span class=\"string\">        show: function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">            // todo with module base</span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">define([&#x27;data&#x27;, &#x27;ui&#x27;], function(data, ui) &#123;</span></span><br><span class=\"line\"><span class=\"string\">    // init here</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br></pre></td></tr></table></figure>\n\n<p>定义数据对象模块:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">define</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">users</span>: [],</span><br><span class=\"line\">    <span class=\"attr\">members</span>: []</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二、Commonjs\"><a href=\"#二、Commonjs\" class=\"headerlink\" title=\"二、Commonjs\"></a>二、Commonjs</h3><p>一个单独的文件就是一个模块<br>每一个模块都是一个单独的作用域，在一个文件定义的变量（还包括函数和类），都是私有的</p>\n<p>CommonJS定义的模块分为:</p>\n<ul>\n<li>模块引用(require)</li>\n<li>模块定义(exports)</li>\n<li>模块标识(module)</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// foo.js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> request = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;request&#x27;</span>).<span class=\"title function_\">default</span>(&#123; </span><br><span class=\"line\">    <span class=\"attr\">timeout</span>: <span class=\"number\">4000</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; </span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">re</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">req</span> = <span class=\"keyword\">function</span>(<span class=\"params\">url</span>)&#123; </span><br><span class=\"line\">        <span class=\"title function_\">request</span>(url,<span class=\"keyword\">function</span>(<span class=\"params\">error,status,res</span>)&#123; </span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">re</span> = res;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// main.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Foo</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./foo&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"keyword\">new</span> <span class=\"title class_\">Foo</span>();</span><br><span class=\"line\">foo.<span class=\"title function_\">req</span>(<span class=\"string\">&#x27;http://www.baidu.com&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(foo.<span class=\"property\">re</span>);</span><br></pre></td></tr></table></figure>\n\n<p>CommonJS 加载模块是同步的，所以只有加载完成才能执行后面的操作</p>\n<h3 id=\"三、UMD\"><a href=\"#三、UMD\" class=\"headerlink\" title=\"三、UMD\"></a>三、UMD</h3><p>UMD是AMD和CommonJS的糅合</p>\n<p>UMD先判断是否支持Node.js的模块（exports）是否存在，存在则使用Node.js模块模式。<br>再判断是否支持AMD（define是否存在），存在则使用AMD方式加载模块</p>\n"},{"title":"ESLint使用备查","date":"2016-03-27T03:48:43.000Z","_content":"\nESLint是以可扩展、每条规则独立、不内置编码风格为理念的lint工具\n\n### 1. 安装\n\n```bash\nnpm install -g eslint\n```\n\n### 2. 使用\n\n在项目目录下输入\n\n```bash\neslint --init\n```\n\n之后便可以对项目下的任何js文件使用ESLnt，如\n```bash\neslint test.js test2.js\n```\n\n### 3. 使用要点\n\n#### 3.1 配置\n\n可使用三种方式配置ESLint：\n- 使用 `.eslintrc` 文件（可通过`eslint --init`生成）\n- 在 `package.json` 文件内添加 `eslintConfig` 配置块\n- 在代码文件中定义\n\n###### 3.1.1 `.eslintrc` 示例\n项目根目录的 `.eslintrc` 文件会应用到整个项目，子目录中如果也包含 `.eslintrc` 文件则会忽略根目录中的配置\n\n```json\n{\n  \"env\": {\n    \"browser\": true,\n  },\n  \"globals\": {\n    \"angular\": true,\n  },\n  \"rules\": {\n    \"camelcase\": 2,\n    \"curly\": 2,\n    \"brace-style\": [2, \"1tbs\"],\n    \"quotes\": [2, \"single\"],\n    \"semi\": [2, \"always\"],\n    \"space-in-brackets\": [2, \"never\"],\n    \"space-infix-ops\": 2,\n  }\n}\n```\n\n###### 3.1.2 `package.json` 示例\n\n```json\n{\n  \"name\": \"mypackage\",\n  \"version\": \"0.0.1\",\n  \"eslintConfig\": {\n    \"env\": {\n      \"browser\": true,\n      \"node\": true\n    }\n  }\n}\n```\n\n###### 3.1.3 文件内配置\n代码文件内的配置会覆盖配置文件中的规则\n\n- 禁用ESLint:\n```js\n/* eslint-disable */\nvar obj = { key: 'value', };\n/* eslint-enable */\n```\n\n- 禁用一条规则\n```js\n/*eslint-disable no-alert */\nalert('doing awful things');\n/* eslint-enable no-alert */\n```\n\n#### 3.2 工作流集成\n\n- 在Gulp中使用\n```js\nvar gulp = require('gulp');\nvar eslint = require('gulp-eslint');\n\ngulp.task('lint', function() {\n  return gulp.src('client/app/**/*.js')\n    .pipe(eslint())\n    .pipe(eslint.format());\n});\n```\n\n- 在Webpack中使用\n```js\nvar path = require('path')\nvar webpack = require('webpack')\n\nmodule.exports = {\n  devtool: 'cheap-module-eval-source-map',\n  entry: [\n    'webpack-hot-middleware/client?noInfo=true&reload=true',\n    './index'\n  ],\n  output: {\n    path: path.join(__dirname, 'dist'),\n    filename: 'bundle.js',\n    publicPath: '/static/'\n  },\n  plugins: [\n    new webpack.optimize.OccurenceOrderPlugin(),\n    new webpack.HotModuleReplacementPlugin()\n  ],\n  module: {\n    loaders: [\n      {\n        test: /\\.js$/,\n        loaders: ['babel', 'eslint'],\n        exclude: /node_modules/,\n        include: __dirname\n      }\n    ]\n  }\n}\n```\n\n### 4. 配置规则\n\n[Configuring ESLint](http://eslint.org/docs/user-guide/configuring)","source":"_posts/Eslint使用备查.md","raw":"---\ntitle: ESLint使用备查\ndate: 2016-03-27 11:48:43\ntags: Eslint\ncategories: 前端\n---\n\nESLint是以可扩展、每条规则独立、不内置编码风格为理念的lint工具\n\n### 1. 安装\n\n```bash\nnpm install -g eslint\n```\n\n### 2. 使用\n\n在项目目录下输入\n\n```bash\neslint --init\n```\n\n之后便可以对项目下的任何js文件使用ESLnt，如\n```bash\neslint test.js test2.js\n```\n\n### 3. 使用要点\n\n#### 3.1 配置\n\n可使用三种方式配置ESLint：\n- 使用 `.eslintrc` 文件（可通过`eslint --init`生成）\n- 在 `package.json` 文件内添加 `eslintConfig` 配置块\n- 在代码文件中定义\n\n###### 3.1.1 `.eslintrc` 示例\n项目根目录的 `.eslintrc` 文件会应用到整个项目，子目录中如果也包含 `.eslintrc` 文件则会忽略根目录中的配置\n\n```json\n{\n  \"env\": {\n    \"browser\": true,\n  },\n  \"globals\": {\n    \"angular\": true,\n  },\n  \"rules\": {\n    \"camelcase\": 2,\n    \"curly\": 2,\n    \"brace-style\": [2, \"1tbs\"],\n    \"quotes\": [2, \"single\"],\n    \"semi\": [2, \"always\"],\n    \"space-in-brackets\": [2, \"never\"],\n    \"space-infix-ops\": 2,\n  }\n}\n```\n\n###### 3.1.2 `package.json` 示例\n\n```json\n{\n  \"name\": \"mypackage\",\n  \"version\": \"0.0.1\",\n  \"eslintConfig\": {\n    \"env\": {\n      \"browser\": true,\n      \"node\": true\n    }\n  }\n}\n```\n\n###### 3.1.3 文件内配置\n代码文件内的配置会覆盖配置文件中的规则\n\n- 禁用ESLint:\n```js\n/* eslint-disable */\nvar obj = { key: 'value', };\n/* eslint-enable */\n```\n\n- 禁用一条规则\n```js\n/*eslint-disable no-alert */\nalert('doing awful things');\n/* eslint-enable no-alert */\n```\n\n#### 3.2 工作流集成\n\n- 在Gulp中使用\n```js\nvar gulp = require('gulp');\nvar eslint = require('gulp-eslint');\n\ngulp.task('lint', function() {\n  return gulp.src('client/app/**/*.js')\n    .pipe(eslint())\n    .pipe(eslint.format());\n});\n```\n\n- 在Webpack中使用\n```js\nvar path = require('path')\nvar webpack = require('webpack')\n\nmodule.exports = {\n  devtool: 'cheap-module-eval-source-map',\n  entry: [\n    'webpack-hot-middleware/client?noInfo=true&reload=true',\n    './index'\n  ],\n  output: {\n    path: path.join(__dirname, 'dist'),\n    filename: 'bundle.js',\n    publicPath: '/static/'\n  },\n  plugins: [\n    new webpack.optimize.OccurenceOrderPlugin(),\n    new webpack.HotModuleReplacementPlugin()\n  ],\n  module: {\n    loaders: [\n      {\n        test: /\\.js$/,\n        loaders: ['babel', 'eslint'],\n        exclude: /node_modules/,\n        include: __dirname\n      }\n    ]\n  }\n}\n```\n\n### 4. 配置规则\n\n[Configuring ESLint](http://eslint.org/docs/user-guide/configuring)","slug":"Eslint使用备查","published":1,"updated":"2022-09-08T14:51:06.961Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krpy0008kp00gxv0hxkv","content":"<p>ESLint是以可扩展、每条规则独立、不内置编码风格为理念的lint工具</p>\n<h3 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1. 安装\"></a>1. 安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g eslint</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-使用\"><a href=\"#2-使用\" class=\"headerlink\" title=\"2. 使用\"></a>2. 使用</h3><p>在项目目录下输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eslint --init</span><br></pre></td></tr></table></figure>\n\n<p>之后便可以对项目下的任何js文件使用ESLnt，如</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eslint test.js test2.js</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-使用要点\"><a href=\"#3-使用要点\" class=\"headerlink\" title=\"3. 使用要点\"></a>3. 使用要点</h3><h4 id=\"3-1-配置\"><a href=\"#3-1-配置\" class=\"headerlink\" title=\"3.1 配置\"></a>3.1 配置</h4><p>可使用三种方式配置ESLint：</p>\n<ul>\n<li>使用 <code>.eslintrc</code> 文件（可通过<code>eslint --init</code>生成）</li>\n<li>在 <code>package.json</code> 文件内添加 <code>eslintConfig</code> 配置块</li>\n<li>在代码文件中定义</li>\n</ul>\n<h6 id=\"3-1-1-eslintrc-示例\"><a href=\"#3-1-1-eslintrc-示例\" class=\"headerlink\" title=\"3.1.1 .eslintrc 示例\"></a>3.1.1 <code>.eslintrc</code> 示例</h6><p>项目根目录的 <code>.eslintrc</code> 文件会应用到整个项目，子目录中如果也包含 <code>.eslintrc</code> 文件则会忽略根目录中的配置</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;env&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;browser&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;globals&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;angular&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;rules&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;camelcase&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;curly&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;brace-style&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;1tbs&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;quotes&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;single&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;semi&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;always&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;space-in-brackets&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;never&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;space-infix-ops&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"3-1-2-package-json-示例\"><a href=\"#3-1-2-package-json-示例\" class=\"headerlink\" title=\"3.1.2 package.json 示例\"></a>3.1.2 <code>package.json</code> 示例</h6><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;mypackage&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;version&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;0.0.1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;eslintConfig&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;env&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;browser&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;node&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"3-1-3-文件内配置\"><a href=\"#3-1-3-文件内配置\" class=\"headerlink\" title=\"3.1.3 文件内配置\"></a>3.1.3 文件内配置</h6><p>代码文件内的配置会覆盖配置文件中的规则</p>\n<ul>\n<li><p>禁用ESLint:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* eslint-disable */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"attr\">key</span>: <span class=\"string\">&#x27;value&#x27;</span>, &#125;;</span><br><span class=\"line\"><span class=\"comment\">/* eslint-enable */</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>禁用一条规则</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*eslint-disable no-alert */</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;doing awful things&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">/* eslint-enable no-alert */</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"3-2-工作流集成\"><a href=\"#3-2-工作流集成\" class=\"headerlink\" title=\"3.2 工作流集成\"></a>3.2 工作流集成</h4><ul>\n<li><p>在Gulp中使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> eslint = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-eslint&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;lint&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> gulp.<span class=\"title function_\">src</span>(<span class=\"string\">&#x27;client/app/**/*.js&#x27;</span>)</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">eslint</span>())</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(eslint.<span class=\"title function_\">format</span>());</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在Webpack中使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">devtool</span>: <span class=\"string\">&#x27;cheap-module-eval-source-map&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: [</span><br><span class=\"line\">    <span class=\"string\">&#x27;webpack-hot-middleware/client?noInfo=true&amp;reload=true&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;./index&#x27;</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&#x27;dist&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;bundle.js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">publicPath</span>: <span class=\"string\">&#x27;/static/&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.<span class=\"property\">optimize</span>.<span class=\"title class_\">OccurenceOrderPlugin</span>(),</span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.<span class=\"title class_\">HotModuleReplacementPlugin</span>()</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">loaders</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        <span class=\"attr\">loaders</span>: [<span class=\"string\">&#x27;babel&#x27;</span>, <span class=\"string\">&#x27;eslint&#x27;</span>],</span><br><span class=\"line\">        <span class=\"attr\">exclude</span>: <span class=\"regexp\">/node_modules/</span>,</span><br><span class=\"line\">        <span class=\"attr\">include</span>: __dirname</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"4-配置规则\"><a href=\"#4-配置规则\" class=\"headerlink\" title=\"4. 配置规则\"></a>4. 配置规则</h3><p><a href=\"http://eslint.org/docs/user-guide/configuring\">Configuring ESLint</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>ESLint是以可扩展、每条规则独立、不内置编码风格为理念的lint工具</p>\n<h3 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1. 安装\"></a>1. 安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g eslint</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-使用\"><a href=\"#2-使用\" class=\"headerlink\" title=\"2. 使用\"></a>2. 使用</h3><p>在项目目录下输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eslint --init</span><br></pre></td></tr></table></figure>\n\n<p>之后便可以对项目下的任何js文件使用ESLnt，如</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eslint test.js test2.js</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-使用要点\"><a href=\"#3-使用要点\" class=\"headerlink\" title=\"3. 使用要点\"></a>3. 使用要点</h3><h4 id=\"3-1-配置\"><a href=\"#3-1-配置\" class=\"headerlink\" title=\"3.1 配置\"></a>3.1 配置</h4><p>可使用三种方式配置ESLint：</p>\n<ul>\n<li>使用 <code>.eslintrc</code> 文件（可通过<code>eslint --init</code>生成）</li>\n<li>在 <code>package.json</code> 文件内添加 <code>eslintConfig</code> 配置块</li>\n<li>在代码文件中定义</li>\n</ul>\n<h6 id=\"3-1-1-eslintrc-示例\"><a href=\"#3-1-1-eslintrc-示例\" class=\"headerlink\" title=\"3.1.1 .eslintrc 示例\"></a>3.1.1 <code>.eslintrc</code> 示例</h6><p>项目根目录的 <code>.eslintrc</code> 文件会应用到整个项目，子目录中如果也包含 <code>.eslintrc</code> 文件则会忽略根目录中的配置</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;env&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;browser&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;globals&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;angular&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;rules&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;camelcase&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;curly&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;brace-style&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;1tbs&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;quotes&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;single&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;semi&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;always&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;space-in-brackets&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;never&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;space-infix-ops&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"3-1-2-package-json-示例\"><a href=\"#3-1-2-package-json-示例\" class=\"headerlink\" title=\"3.1.2 package.json 示例\"></a>3.1.2 <code>package.json</code> 示例</h6><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;mypackage&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;version&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;0.0.1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;eslintConfig&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;env&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;browser&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;node&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"3-1-3-文件内配置\"><a href=\"#3-1-3-文件内配置\" class=\"headerlink\" title=\"3.1.3 文件内配置\"></a>3.1.3 文件内配置</h6><p>代码文件内的配置会覆盖配置文件中的规则</p>\n<ul>\n<li><p>禁用ESLint:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* eslint-disable */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"attr\">key</span>: <span class=\"string\">&#x27;value&#x27;</span>, &#125;;</span><br><span class=\"line\"><span class=\"comment\">/* eslint-enable */</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>禁用一条规则</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*eslint-disable no-alert */</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;doing awful things&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">/* eslint-enable no-alert */</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"3-2-工作流集成\"><a href=\"#3-2-工作流集成\" class=\"headerlink\" title=\"3.2 工作流集成\"></a>3.2 工作流集成</h4><ul>\n<li><p>在Gulp中使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> eslint = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-eslint&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;lint&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> gulp.<span class=\"title function_\">src</span>(<span class=\"string\">&#x27;client/app/**/*.js&#x27;</span>)</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">eslint</span>())</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(eslint.<span class=\"title function_\">format</span>());</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在Webpack中使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">devtool</span>: <span class=\"string\">&#x27;cheap-module-eval-source-map&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: [</span><br><span class=\"line\">    <span class=\"string\">&#x27;webpack-hot-middleware/client?noInfo=true&amp;reload=true&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;./index&#x27;</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&#x27;dist&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;bundle.js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">publicPath</span>: <span class=\"string\">&#x27;/static/&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.<span class=\"property\">optimize</span>.<span class=\"title class_\">OccurenceOrderPlugin</span>(),</span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.<span class=\"title class_\">HotModuleReplacementPlugin</span>()</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">loaders</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        <span class=\"attr\">loaders</span>: [<span class=\"string\">&#x27;babel&#x27;</span>, <span class=\"string\">&#x27;eslint&#x27;</span>],</span><br><span class=\"line\">        <span class=\"attr\">exclude</span>: <span class=\"regexp\">/node_modules/</span>,</span><br><span class=\"line\">        <span class=\"attr\">include</span>: __dirname</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"4-配置规则\"><a href=\"#4-配置规则\" class=\"headerlink\" title=\"4. 配置规则\"></a>4. 配置规则</h3><p><a href=\"http://eslint.org/docs/user-guide/configuring\">Configuring ESLint</a></p>\n"},{"layout":"es6","title":"Generator函数","date":"2016-07-20T10:13:26.000Z","_content":"\n## 基本语法\n生成器函数返回一个生成器对象\n\n```js\nfunction* gen() {\n    yield 1;\n    yield 2;\n    yield 3;\n}\nvar g = gen();\n\nconsole.log(g.next().value); //1\nconsole.log(g.next().value); //2\nconsole.log(g.next().value); //3\n```\n","source":"_posts/Generator函数.md","raw":"layout: es6\ntitle: Generator函数\ndate: 2016-07-20 18:13:26\ntags: Javascript\ncategories: 编程\n---\n\n## 基本语法\n生成器函数返回一个生成器对象\n\n```js\nfunction* gen() {\n    yield 1;\n    yield 2;\n    yield 3;\n}\nvar g = gen();\n\nconsole.log(g.next().value); //1\nconsole.log(g.next().value); //2\nconsole.log(g.next().value); //3\n```\n","slug":"Generator函数","published":1,"updated":"2022-09-08T14:51:06.961Z","comments":1,"photos":[],"link":"","_id":"cl7t6krpy0009kp008x947shv","content":"<h2 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h2><p>生成器函数返回一个生成器对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span>* <span class=\"title function_\">gen</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> g = <span class=\"title function_\">gen</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(g.<span class=\"title function_\">next</span>().<span class=\"property\">value</span>); <span class=\"comment\">//1</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(g.<span class=\"title function_\">next</span>().<span class=\"property\">value</span>); <span class=\"comment\">//2</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(g.<span class=\"title function_\">next</span>().<span class=\"property\">value</span>); <span class=\"comment\">//3</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h2><p>生成器函数返回一个生成器对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span>* <span class=\"title function_\">gen</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> g = <span class=\"title function_\">gen</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(g.<span class=\"title function_\">next</span>().<span class=\"property\">value</span>); <span class=\"comment\">//1</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(g.<span class=\"title function_\">next</span>().<span class=\"property\">value</span>); <span class=\"comment\">//2</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(g.<span class=\"title function_\">next</span>().<span class=\"property\">value</span>); <span class=\"comment\">//3</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Javascript 继承","date":"2015-04-10T08:50:46.000Z","_content":"\n# 原型指针\n\n```js\nvar a = new Array();\na.__proto__ === Array.prototype // true\n\na.__proto__.__proto__ === Object.prototype  // true\n\na.__proto__.__proto__.__proto__ === null  // true\n```\n\n# 原型对象\n\n```js\nvar Foo = function() {}\nFoo.__proto__ === Function.prototype // true\n\nvar a = new Foo();\na.__proto__ === Foo.prototype; // true\n\nFoo.prototype.__proto__ === Object.prototype; // true\n\nFoo.prototype.constructor === Foo; // true\na.constructor === Foo; // true\na.constructor === Foo.prototype.constructor; // true\n```\n\n# 原型链\n\n利用原型让一个引用类型继承另一个引用类型的属性和方法\n\n每个构造函数都有一个原型对象(prototype)，原型对象都包含一个指向构造函数的指针(constructor)，而实例都包含一个指向原型对象的内部指针(__proto__)\n\n只需要让原型对象等于另一个类型的实例，此时的原型对象将包含一个指向另一个原型的指针，相应地，另一个原型中也包含着一个指向另一个构造函数的指针\n\n当读取对象的某个属性时，JavaScript引擎先寻找对象本身的属性，如果找不到，就到它的原型去找，如果还是找不到，就到原型的原型去找。以此类推，如果直到最顶层的Object.prototype还是找不到，则返回undefine\n\n![原型链](http://huang-jerryc.com/image/blog/philosophy-though-of-javascript-proto/289FC3BDCB0425AA1C9F0DC5EBA1079F.jpg)","source":"_posts/Javascript-继承.md","raw":"---\ntitle: Javascript 继承\ndate: 2015-04-10 16:50:46\ntags: Javascript\ncategories: 编程\n---\n\n# 原型指针\n\n```js\nvar a = new Array();\na.__proto__ === Array.prototype // true\n\na.__proto__.__proto__ === Object.prototype  // true\n\na.__proto__.__proto__.__proto__ === null  // true\n```\n\n# 原型对象\n\n```js\nvar Foo = function() {}\nFoo.__proto__ === Function.prototype // true\n\nvar a = new Foo();\na.__proto__ === Foo.prototype; // true\n\nFoo.prototype.__proto__ === Object.prototype; // true\n\nFoo.prototype.constructor === Foo; // true\na.constructor === Foo; // true\na.constructor === Foo.prototype.constructor; // true\n```\n\n# 原型链\n\n利用原型让一个引用类型继承另一个引用类型的属性和方法\n\n每个构造函数都有一个原型对象(prototype)，原型对象都包含一个指向构造函数的指针(constructor)，而实例都包含一个指向原型对象的内部指针(__proto__)\n\n只需要让原型对象等于另一个类型的实例，此时的原型对象将包含一个指向另一个原型的指针，相应地，另一个原型中也包含着一个指向另一个构造函数的指针\n\n当读取对象的某个属性时，JavaScript引擎先寻找对象本身的属性，如果找不到，就到它的原型去找，如果还是找不到，就到原型的原型去找。以此类推，如果直到最顶层的Object.prototype还是找不到，则返回undefine\n\n![原型链](http://huang-jerryc.com/image/blog/philosophy-though-of-javascript-proto/289FC3BDCB0425AA1C9F0DC5EBA1079F.jpg)","slug":"Javascript-继承","published":1,"updated":"2022-09-08T14:51:06.962Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krq0000dkp00dyhb2279","content":"<h1 id=\"原型指针\"><a href=\"#原型指针\" class=\"headerlink\" title=\"原型指针\"></a>原型指针</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>();</span><br><span class=\"line\">a.<span class=\"property\">__proto__</span> === <span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">a.<span class=\"property\">__proto__</span>.<span class=\"property\">__proto__</span> === <span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>  <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">a.<span class=\"property\">__proto__</span>.<span class=\"property\">__proto__</span>.<span class=\"property\">__proto__</span> === <span class=\"literal\">null</span>  <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"原型对象\"><a href=\"#原型对象\" class=\"headerlink\" title=\"原型对象\"></a>原型对象</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Foo</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\"><span class=\"title class_\">Foo</span>.<span class=\"property\">__proto__</span> === <span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> <span class=\"title class_\">Foo</span>();</span><br><span class=\"line\">a.<span class=\"property\">__proto__</span> === <span class=\"title class_\">Foo</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>; <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Foo</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">__proto__</span> === <span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>; <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Foo</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span> === <span class=\"title class_\">Foo</span>; <span class=\"comment\">// true</span></span><br><span class=\"line\">a.<span class=\"property\">constructor</span> === <span class=\"title class_\">Foo</span>; <span class=\"comment\">// true</span></span><br><span class=\"line\">a.<span class=\"property\">constructor</span> === <span class=\"title class_\">Foo</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span>; <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"原型链\"><a href=\"#原型链\" class=\"headerlink\" title=\"原型链\"></a>原型链</h1><p>利用原型让一个引用类型继承另一个引用类型的属性和方法</p>\n<p>每个构造函数都有一个原型对象(prototype)，原型对象都包含一个指向构造函数的指针(constructor)，而实例都包含一个指向原型对象的内部指针(<strong>proto</strong>)</p>\n<p>只需要让原型对象等于另一个类型的实例，此时的原型对象将包含一个指向另一个原型的指针，相应地，另一个原型中也包含着一个指向另一个构造函数的指针</p>\n<p>当读取对象的某个属性时，JavaScript引擎先寻找对象本身的属性，如果找不到，就到它的原型去找，如果还是找不到，就到原型的原型去找。以此类推，如果直到最顶层的Object.prototype还是找不到，则返回undefine</p>\n<p><img src=\"http://huang-jerryc.com/image/blog/philosophy-though-of-javascript-proto/289FC3BDCB0425AA1C9F0DC5EBA1079F.jpg\" alt=\"原型链\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"原型指针\"><a href=\"#原型指针\" class=\"headerlink\" title=\"原型指针\"></a>原型指针</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>();</span><br><span class=\"line\">a.<span class=\"property\">__proto__</span> === <span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">a.<span class=\"property\">__proto__</span>.<span class=\"property\">__proto__</span> === <span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>  <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">a.<span class=\"property\">__proto__</span>.<span class=\"property\">__proto__</span>.<span class=\"property\">__proto__</span> === <span class=\"literal\">null</span>  <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"原型对象\"><a href=\"#原型对象\" class=\"headerlink\" title=\"原型对象\"></a>原型对象</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Foo</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\"><span class=\"title class_\">Foo</span>.<span class=\"property\">__proto__</span> === <span class=\"title class_\">Function</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> <span class=\"title class_\">Foo</span>();</span><br><span class=\"line\">a.<span class=\"property\">__proto__</span> === <span class=\"title class_\">Foo</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>; <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Foo</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">__proto__</span> === <span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>; <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Foo</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span> === <span class=\"title class_\">Foo</span>; <span class=\"comment\">// true</span></span><br><span class=\"line\">a.<span class=\"property\">constructor</span> === <span class=\"title class_\">Foo</span>; <span class=\"comment\">// true</span></span><br><span class=\"line\">a.<span class=\"property\">constructor</span> === <span class=\"title class_\">Foo</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span>; <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"原型链\"><a href=\"#原型链\" class=\"headerlink\" title=\"原型链\"></a>原型链</h1><p>利用原型让一个引用类型继承另一个引用类型的属性和方法</p>\n<p>每个构造函数都有一个原型对象(prototype)，原型对象都包含一个指向构造函数的指针(constructor)，而实例都包含一个指向原型对象的内部指针(<strong>proto</strong>)</p>\n<p>只需要让原型对象等于另一个类型的实例，此时的原型对象将包含一个指向另一个原型的指针，相应地，另一个原型中也包含着一个指向另一个构造函数的指针</p>\n<p>当读取对象的某个属性时，JavaScript引擎先寻找对象本身的属性，如果找不到，就到它的原型去找，如果还是找不到，就到原型的原型去找。以此类推，如果直到最顶层的Object.prototype还是找不到，则返回undefine</p>\n<p><img src=\"http://huang-jerryc.com/image/blog/philosophy-though-of-javascript-proto/289FC3BDCB0425AA1C9F0DC5EBA1079F.jpg\" alt=\"原型链\"></p>\n"},{"title":"Javascript事件","date":"2015-02-07T02:16:30.000Z","_content":"\n## 1. 事件流\n事件流描述的是从页面中接收事件的顺序\n\n#### 1.1 事件冒泡\nIE的事件流：事件冒泡（event bubbling），即事件开始时由最具体的元素（文档中嵌套层次最深的那个节点）接收，然后逐级向上传播到较为不具体的节点（文档）\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Event Bubbling Example</title>\n</head>\n<body>\n  <div id=\"myDiv\">Click Me</div>\n</body>\n</html>\n```\n点击页面中的`<div>`元素，那么click事件会按照如下顺序传播：\n1. `<div>`\n2. `<body>`\n3. `<html>`\n4. `document`\n\n#### 1.2 事件捕获\n事件捕获的思想是不太具体的节点应该更早接收到事件，而最具体的节点应该最后接收到事件。\n事件捕获的用意在于在事件到达预定目标之前捕获它。\n\n点击页面中的`<div>`元素，click事件会按照如下顺序传播：\n1. `document`\n2. `<html>`\n3. `<body>`\n4. `<div>`\n\n#### 1.2 DOM事件流\n“DOM2级事件”规定的事件流包括三个阶段：事件捕获阶段、处于目标阶段和事件冒泡阶段\n\n![Alt text](http://img1.zsgjs.com/upfile/file/2016/0615/7644326177bdc141c1b2b85d4575d528.png)\n\n## 2. 事件处理程序\n响应某个事件的函数就是事件处理程序，或事件侦听器\n\n#### 2.1 HTML事件处理程序\n```html\n<input type=\"button\" name=\"btn\" onclick=\"alert('Clicked')\" value=\"Click Me\" />\n```\n\n#### 2.2 DOM 0级事件处理程序\n","source":"_posts/Javascript事件.md","raw":"---\ntitle: Javascript事件\ndate: 2015-02-07 10:16:30\ntags: Javascript\ncategories: 编程\n---\n\n## 1. 事件流\n事件流描述的是从页面中接收事件的顺序\n\n#### 1.1 事件冒泡\nIE的事件流：事件冒泡（event bubbling），即事件开始时由最具体的元素（文档中嵌套层次最深的那个节点）接收，然后逐级向上传播到较为不具体的节点（文档）\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Event Bubbling Example</title>\n</head>\n<body>\n  <div id=\"myDiv\">Click Me</div>\n</body>\n</html>\n```\n点击页面中的`<div>`元素，那么click事件会按照如下顺序传播：\n1. `<div>`\n2. `<body>`\n3. `<html>`\n4. `document`\n\n#### 1.2 事件捕获\n事件捕获的思想是不太具体的节点应该更早接收到事件，而最具体的节点应该最后接收到事件。\n事件捕获的用意在于在事件到达预定目标之前捕获它。\n\n点击页面中的`<div>`元素，click事件会按照如下顺序传播：\n1. `document`\n2. `<html>`\n3. `<body>`\n4. `<div>`\n\n#### 1.2 DOM事件流\n“DOM2级事件”规定的事件流包括三个阶段：事件捕获阶段、处于目标阶段和事件冒泡阶段\n\n![Alt text](http://img1.zsgjs.com/upfile/file/2016/0615/7644326177bdc141c1b2b85d4575d528.png)\n\n## 2. 事件处理程序\n响应某个事件的函数就是事件处理程序，或事件侦听器\n\n#### 2.1 HTML事件处理程序\n```html\n<input type=\"button\" name=\"btn\" onclick=\"alert('Clicked')\" value=\"Click Me\" />\n```\n\n#### 2.2 DOM 0级事件处理程序\n","slug":"Javascript事件","published":1,"updated":"2022-09-08T14:51:06.962Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krq0000ekp00e4fkar5w","content":"<h2 id=\"1-事件流\"><a href=\"#1-事件流\" class=\"headerlink\" title=\"1. 事件流\"></a>1. 事件流</h2><p>事件流描述的是从页面中接收事件的顺序</p>\n<h4 id=\"1-1-事件冒泡\"><a href=\"#1-1-事件冒泡\" class=\"headerlink\" title=\"1.1 事件冒泡\"></a>1.1 事件冒泡</h4><p>IE的事件流：事件冒泡（event bubbling），即事件开始时由最具体的元素（文档中嵌套层次最深的那个节点）接收，然后逐级向上传播到较为不具体的节点（文档）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Event Bubbling Example<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;myDiv&quot;</span>&gt;</span>Click Me<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>点击页面中的<code>&lt;div&gt;</code>元素，那么click事件会按照如下顺序传播：</p>\n<ol>\n<li><code>&lt;div&gt;</code></li>\n<li><code>&lt;body&gt;</code></li>\n<li><code>&lt;html&gt;</code></li>\n<li><code>document</code></li>\n</ol>\n<h4 id=\"1-2-事件捕获\"><a href=\"#1-2-事件捕获\" class=\"headerlink\" title=\"1.2 事件捕获\"></a>1.2 事件捕获</h4><p>事件捕获的思想是不太具体的节点应该更早接收到事件，而最具体的节点应该最后接收到事件。<br>事件捕获的用意在于在事件到达预定目标之前捕获它。</p>\n<p>点击页面中的<code>&lt;div&gt;</code>元素，click事件会按照如下顺序传播：</p>\n<ol>\n<li><code>document</code></li>\n<li><code>&lt;html&gt;</code></li>\n<li><code>&lt;body&gt;</code></li>\n<li><code>&lt;div&gt;</code></li>\n</ol>\n<h4 id=\"1-2-DOM事件流\"><a href=\"#1-2-DOM事件流\" class=\"headerlink\" title=\"1.2 DOM事件流\"></a>1.2 DOM事件流</h4><p>“DOM2级事件”规定的事件流包括三个阶段：事件捕获阶段、处于目标阶段和事件冒泡阶段</p>\n<p><img src=\"http://img1.zsgjs.com/upfile/file/2016/0615/7644326177bdc141c1b2b85d4575d528.png\" alt=\"Alt text\"></p>\n<h2 id=\"2-事件处理程序\"><a href=\"#2-事件处理程序\" class=\"headerlink\" title=\"2. 事件处理程序\"></a>2. 事件处理程序</h2><p>响应某个事件的函数就是事件处理程序，或事件侦听器</p>\n<h4 id=\"2-1-HTML事件处理程序\"><a href=\"#2-1-HTML事件处理程序\" class=\"headerlink\" title=\"2.1 HTML事件处理程序\"></a>2.1 HTML事件处理程序</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;alert(&#x27;Clicked&#x27;)&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Click Me&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-DOM-0级事件处理程序\"><a href=\"#2-2-DOM-0级事件处理程序\" class=\"headerlink\" title=\"2.2 DOM 0级事件处理程序\"></a>2.2 DOM 0级事件处理程序</h4>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-事件流\"><a href=\"#1-事件流\" class=\"headerlink\" title=\"1. 事件流\"></a>1. 事件流</h2><p>事件流描述的是从页面中接收事件的顺序</p>\n<h4 id=\"1-1-事件冒泡\"><a href=\"#1-1-事件冒泡\" class=\"headerlink\" title=\"1.1 事件冒泡\"></a>1.1 事件冒泡</h4><p>IE的事件流：事件冒泡（event bubbling），即事件开始时由最具体的元素（文档中嵌套层次最深的那个节点）接收，然后逐级向上传播到较为不具体的节点（文档）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Event Bubbling Example<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;myDiv&quot;</span>&gt;</span>Click Me<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>点击页面中的<code>&lt;div&gt;</code>元素，那么click事件会按照如下顺序传播：</p>\n<ol>\n<li><code>&lt;div&gt;</code></li>\n<li><code>&lt;body&gt;</code></li>\n<li><code>&lt;html&gt;</code></li>\n<li><code>document</code></li>\n</ol>\n<h4 id=\"1-2-事件捕获\"><a href=\"#1-2-事件捕获\" class=\"headerlink\" title=\"1.2 事件捕获\"></a>1.2 事件捕获</h4><p>事件捕获的思想是不太具体的节点应该更早接收到事件，而最具体的节点应该最后接收到事件。<br>事件捕获的用意在于在事件到达预定目标之前捕获它。</p>\n<p>点击页面中的<code>&lt;div&gt;</code>元素，click事件会按照如下顺序传播：</p>\n<ol>\n<li><code>document</code></li>\n<li><code>&lt;html&gt;</code></li>\n<li><code>&lt;body&gt;</code></li>\n<li><code>&lt;div&gt;</code></li>\n</ol>\n<h4 id=\"1-2-DOM事件流\"><a href=\"#1-2-DOM事件流\" class=\"headerlink\" title=\"1.2 DOM事件流\"></a>1.2 DOM事件流</h4><p>“DOM2级事件”规定的事件流包括三个阶段：事件捕获阶段、处于目标阶段和事件冒泡阶段</p>\n<p><img src=\"http://img1.zsgjs.com/upfile/file/2016/0615/7644326177bdc141c1b2b85d4575d528.png\" alt=\"Alt text\"></p>\n<h2 id=\"2-事件处理程序\"><a href=\"#2-事件处理程序\" class=\"headerlink\" title=\"2. 事件处理程序\"></a>2. 事件处理程序</h2><p>响应某个事件的函数就是事件处理程序，或事件侦听器</p>\n<h4 id=\"2-1-HTML事件处理程序\"><a href=\"#2-1-HTML事件处理程序\" class=\"headerlink\" title=\"2.1 HTML事件处理程序\"></a>2.1 HTML事件处理程序</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;alert(&#x27;Clicked&#x27;)&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Click Me&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-DOM-0级事件处理程序\"><a href=\"#2-2-DOM-0级事件处理程序\" class=\"headerlink\" title=\"2.2 DOM 0级事件处理程序\"></a>2.2 DOM 0级事件处理程序</h4>"},{"title":"Javascript面向对象编程","date":"2015-05-23T05:42:42.000Z","_content":"ECMA-262把对象定义为：\"无序属性的集合，其属性可以包含基本值、对象或者函数。\"\n\n## 对象\n\n### 属性类型\n- 数据属性\n- 访问器属性\n\n##### 定义多个属性\n\n##### 读取属性的特性\n\n### 创建对象\n\n##### 工厂模式\n\n##### 原型模式\n\n##### 组合使用构造函数模式和原型模式\n\n##### 动态原型模式\n\n##### 寄生构造函数模式\n\n##### 稳妥构造函数模式\n\n### 继承\n","source":"_posts/Javascript面向对象编程.md","raw":"---\ntitle: Javascript面向对象编程\ndate: 2015-05-23 13:42:42\ntags: Javascript\ncategories: 编程\n---\nECMA-262把对象定义为：\"无序属性的集合，其属性可以包含基本值、对象或者函数。\"\n\n## 对象\n\n### 属性类型\n- 数据属性\n- 访问器属性\n\n##### 定义多个属性\n\n##### 读取属性的特性\n\n### 创建对象\n\n##### 工厂模式\n\n##### 原型模式\n\n##### 组合使用构造函数模式和原型模式\n\n##### 动态原型模式\n\n##### 寄生构造函数模式\n\n##### 稳妥构造函数模式\n\n### 继承\n","slug":"Javascript面向对象编程","published":1,"updated":"2022-09-08T14:51:06.963Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krq2000jkp008uidckig","content":"<p>ECMA-262把对象定义为：”无序属性的集合，其属性可以包含基本值、对象或者函数。”</p>\n<h2 id=\"对象\"><a href=\"#对象\" class=\"headerlink\" title=\"对象\"></a>对象</h2><h3 id=\"属性类型\"><a href=\"#属性类型\" class=\"headerlink\" title=\"属性类型\"></a>属性类型</h3><ul>\n<li>数据属性</li>\n<li>访问器属性</li>\n</ul>\n<h5 id=\"定义多个属性\"><a href=\"#定义多个属性\" class=\"headerlink\" title=\"定义多个属性\"></a>定义多个属性</h5><h5 id=\"读取属性的特性\"><a href=\"#读取属性的特性\" class=\"headerlink\" title=\"读取属性的特性\"></a>读取属性的特性</h5><h3 id=\"创建对象\"><a href=\"#创建对象\" class=\"headerlink\" title=\"创建对象\"></a>创建对象</h3><h5 id=\"工厂模式\"><a href=\"#工厂模式\" class=\"headerlink\" title=\"工厂模式\"></a>工厂模式</h5><h5 id=\"原型模式\"><a href=\"#原型模式\" class=\"headerlink\" title=\"原型模式\"></a>原型模式</h5><h5 id=\"组合使用构造函数模式和原型模式\"><a href=\"#组合使用构造函数模式和原型模式\" class=\"headerlink\" title=\"组合使用构造函数模式和原型模式\"></a>组合使用构造函数模式和原型模式</h5><h5 id=\"动态原型模式\"><a href=\"#动态原型模式\" class=\"headerlink\" title=\"动态原型模式\"></a>动态原型模式</h5><h5 id=\"寄生构造函数模式\"><a href=\"#寄生构造函数模式\" class=\"headerlink\" title=\"寄生构造函数模式\"></a>寄生构造函数模式</h5><h5 id=\"稳妥构造函数模式\"><a href=\"#稳妥构造函数模式\" class=\"headerlink\" title=\"稳妥构造函数模式\"></a>稳妥构造函数模式</h5><h3 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h3>","site":{"data":{}},"excerpt":"","more":"<p>ECMA-262把对象定义为：”无序属性的集合，其属性可以包含基本值、对象或者函数。”</p>\n<h2 id=\"对象\"><a href=\"#对象\" class=\"headerlink\" title=\"对象\"></a>对象</h2><h3 id=\"属性类型\"><a href=\"#属性类型\" class=\"headerlink\" title=\"属性类型\"></a>属性类型</h3><ul>\n<li>数据属性</li>\n<li>访问器属性</li>\n</ul>\n<h5 id=\"定义多个属性\"><a href=\"#定义多个属性\" class=\"headerlink\" title=\"定义多个属性\"></a>定义多个属性</h5><h5 id=\"读取属性的特性\"><a href=\"#读取属性的特性\" class=\"headerlink\" title=\"读取属性的特性\"></a>读取属性的特性</h5><h3 id=\"创建对象\"><a href=\"#创建对象\" class=\"headerlink\" title=\"创建对象\"></a>创建对象</h3><h5 id=\"工厂模式\"><a href=\"#工厂模式\" class=\"headerlink\" title=\"工厂模式\"></a>工厂模式</h5><h5 id=\"原型模式\"><a href=\"#原型模式\" class=\"headerlink\" title=\"原型模式\"></a>原型模式</h5><h5 id=\"组合使用构造函数模式和原型模式\"><a href=\"#组合使用构造函数模式和原型模式\" class=\"headerlink\" title=\"组合使用构造函数模式和原型模式\"></a>组合使用构造函数模式和原型模式</h5><h5 id=\"动态原型模式\"><a href=\"#动态原型模式\" class=\"headerlink\" title=\"动态原型模式\"></a>动态原型模式</h5><h5 id=\"寄生构造函数模式\"><a href=\"#寄生构造函数模式\" class=\"headerlink\" title=\"寄生构造函数模式\"></a>寄生构造函数模式</h5><h5 id=\"稳妥构造函数模式\"><a href=\"#稳妥构造函数模式\" class=\"headerlink\" title=\"稳妥构造函数模式\"></a>稳妥构造函数模式</h5><h3 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h3>"},{"title":"jQuery源码阅读(二)","date":"2015-08-30T09:27:53.000Z","_content":"> jQuery 版本：2.0.3\n> jQuery 源码学习笔记（二）：\n> [原文地址](http://www.cnblogs.com/aaronjs/p/3279314.html)\n\n# 事件绑定\n\n## 1. 事件绑定接口\n\n![事件绑定接口](http://images.cnitblog.com/blog/329084/201311/25131537-e46635f5fd144ceeb43c1bf8d3516dfc.png)\n\njQuery的事件绑定，以click方法为例：\n- click\n- bind\n- delegate\n- on\n\n## 2. jQuery事件流程图\n\n![jQuery事件流程图](http://images.cnitblog.com/blog/329084/201311/26084505-ee141e573a864f148af28f3cf62b6196.png)","source":"_posts/Jquery源码阅读-二.md","raw":"---\ntitle: jQuery源码阅读(二)\ndate: 2015-08-30 17:27:53\ntags:\n---\n> jQuery 版本：2.0.3\n> jQuery 源码学习笔记（二）：\n> [原文地址](http://www.cnblogs.com/aaronjs/p/3279314.html)\n\n# 事件绑定\n\n## 1. 事件绑定接口\n\n![事件绑定接口](http://images.cnitblog.com/blog/329084/201311/25131537-e46635f5fd144ceeb43c1bf8d3516dfc.png)\n\njQuery的事件绑定，以click方法为例：\n- click\n- bind\n- delegate\n- on\n\n## 2. jQuery事件流程图\n\n![jQuery事件流程图](http://images.cnitblog.com/blog/329084/201311/26084505-ee141e573a864f148af28f3cf62b6196.png)","slug":"Jquery源码阅读-二","published":1,"updated":"2022-09-08T14:51:06.963Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krq3000mkp00e9vkbswq","content":"<blockquote>\n<p>jQuery 版本：2.0.3<br>jQuery 源码学习笔记（二）：<br><a href=\"http://www.cnblogs.com/aaronjs/p/3279314.html\">原文地址</a></p>\n</blockquote>\n<h1 id=\"事件绑定\"><a href=\"#事件绑定\" class=\"headerlink\" title=\"事件绑定\"></a>事件绑定</h1><h2 id=\"1-事件绑定接口\"><a href=\"#1-事件绑定接口\" class=\"headerlink\" title=\"1. 事件绑定接口\"></a>1. 事件绑定接口</h2><p><img src=\"http://images.cnitblog.com/blog/329084/201311/25131537-e46635f5fd144ceeb43c1bf8d3516dfc.png\" alt=\"事件绑定接口\"></p>\n<p>jQuery的事件绑定，以click方法为例：</p>\n<ul>\n<li>click</li>\n<li>bind</li>\n<li>delegate</li>\n<li>on</li>\n</ul>\n<h2 id=\"2-jQuery事件流程图\"><a href=\"#2-jQuery事件流程图\" class=\"headerlink\" title=\"2. jQuery事件流程图\"></a>2. jQuery事件流程图</h2><p><img src=\"http://images.cnitblog.com/blog/329084/201311/26084505-ee141e573a864f148af28f3cf62b6196.png\" alt=\"jQuery事件流程图\"></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>jQuery 版本：2.0.3<br>jQuery 源码学习笔记（二）：<br><a href=\"http://www.cnblogs.com/aaronjs/p/3279314.html\">原文地址</a></p>\n</blockquote>\n<h1 id=\"事件绑定\"><a href=\"#事件绑定\" class=\"headerlink\" title=\"事件绑定\"></a>事件绑定</h1><h2 id=\"1-事件绑定接口\"><a href=\"#1-事件绑定接口\" class=\"headerlink\" title=\"1. 事件绑定接口\"></a>1. 事件绑定接口</h2><p><img src=\"http://images.cnitblog.com/blog/329084/201311/25131537-e46635f5fd144ceeb43c1bf8d3516dfc.png\" alt=\"事件绑定接口\"></p>\n<p>jQuery的事件绑定，以click方法为例：</p>\n<ul>\n<li>click</li>\n<li>bind</li>\n<li>delegate</li>\n<li>on</li>\n</ul>\n<h2 id=\"2-jQuery事件流程图\"><a href=\"#2-jQuery事件流程图\" class=\"headerlink\" title=\"2. jQuery事件流程图\"></a>2. jQuery事件流程图</h2><p><img src=\"http://images.cnitblog.com/blog/329084/201311/26084505-ee141e573a864f148af28f3cf62b6196.png\" alt=\"jQuery事件流程图\"></p>\n"},{"title":"jQuery源码阅读","date":"2015-08-21T06:25:18.000Z","_content":"> jQuery 版本：2.0.3\n> jQuery 源码学习笔记：\n> [原文地址](http://www.cnblogs.com/aaronjs/p/3279314.html)\n\n# 1. 整体架构\n\nJquey的核心是从HTML文档中匹配元素后执行操作\n如：\n\n```js\n $(selector).append(html)\n $(selector).html(html).css()\n```\n\n具体步骤可分为:\n- 构造jQuery对象\n\n- 调用jQuery方法\n\n# 2. jQuery 构建\n\n通过原型传递，把jQuery的原型传递给jQuery.prototype.init.prototype\n\n```js\nvar jQuery = function(selector, context) {\n return  new aQuery.prototype.init();\n}\njQuery.prototype = {\n  init: function() {\n    return this;\n  },\n  name: function() {\n    return this.age\n  },\n  age: 20\n}\n\njQuery.prototype.init.prototype = jQuery.prototype;\n\nconsole.log(jQuery().name()) //20\n```\n\n# 3. 链式调用\n实现链式的基本条件就是实例this的存在，并且是同一个\n\n```js\njQuery.prototype = {\n  init: function() {\n    return this;\n  },\n  name: function() {\n    return this\n  }\n}\n```\n\n```js\njQuery.init().name()\n```\n\n# 4. 插件接口\n为jQuery或者jQuery prototype添加属性方法\n\njQuery.extend 对jQuery本身的属性和方法进行了扩展\n\njQuery.fn.extend 对jQuery.fn的属性和方法进行了扩展\n\njQuery.fn 是jQuery.prototype 的引用\n\n```js\njQuery.extend = jQuery.fn.extend = function() {\n}\n```\n\n# 5. 总结\n\n- 通过new jQuery.fn.init() 构建一个新的对象，拥有init构造器的prototype原型对象的方法\n- 通过改变prorotype指针的指向，让这个新的对象也指向了jQuery类的原型prototype","source":"_posts/Jquery源码阅读.md","raw":"---\ntitle: jQuery源码阅读\ndate: 2015-08-21 14:25:18\ntags: Jquery\ncategories: JavaScript\n---\n> jQuery 版本：2.0.3\n> jQuery 源码学习笔记：\n> [原文地址](http://www.cnblogs.com/aaronjs/p/3279314.html)\n\n# 1. 整体架构\n\nJquey的核心是从HTML文档中匹配元素后执行操作\n如：\n\n```js\n $(selector).append(html)\n $(selector).html(html).css()\n```\n\n具体步骤可分为:\n- 构造jQuery对象\n\n- 调用jQuery方法\n\n# 2. jQuery 构建\n\n通过原型传递，把jQuery的原型传递给jQuery.prototype.init.prototype\n\n```js\nvar jQuery = function(selector, context) {\n return  new aQuery.prototype.init();\n}\njQuery.prototype = {\n  init: function() {\n    return this;\n  },\n  name: function() {\n    return this.age\n  },\n  age: 20\n}\n\njQuery.prototype.init.prototype = jQuery.prototype;\n\nconsole.log(jQuery().name()) //20\n```\n\n# 3. 链式调用\n实现链式的基本条件就是实例this的存在，并且是同一个\n\n```js\njQuery.prototype = {\n  init: function() {\n    return this;\n  },\n  name: function() {\n    return this\n  }\n}\n```\n\n```js\njQuery.init().name()\n```\n\n# 4. 插件接口\n为jQuery或者jQuery prototype添加属性方法\n\njQuery.extend 对jQuery本身的属性和方法进行了扩展\n\njQuery.fn.extend 对jQuery.fn的属性和方法进行了扩展\n\njQuery.fn 是jQuery.prototype 的引用\n\n```js\njQuery.extend = jQuery.fn.extend = function() {\n}\n```\n\n# 5. 总结\n\n- 通过new jQuery.fn.init() 构建一个新的对象，拥有init构造器的prototype原型对象的方法\n- 通过改变prorotype指针的指向，让这个新的对象也指向了jQuery类的原型prototype","slug":"Jquery源码阅读","published":1,"updated":"2022-09-08T14:51:06.964Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krq5000rkp0006z63504","content":"<blockquote>\n<p>jQuery 版本：2.0.3<br>jQuery 源码学习笔记：<br><a href=\"http://www.cnblogs.com/aaronjs/p/3279314.html\">原文地址</a></p>\n</blockquote>\n<h1 id=\"1-整体架构\"><a href=\"#1-整体架构\" class=\"headerlink\" title=\"1. 整体架构\"></a>1. 整体架构</h1><p>Jquey的核心是从HTML文档中匹配元素后执行操作<br>如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">append</span>(html)</span><br><span class=\"line\">$(selector).<span class=\"title function_\">html</span>(html).<span class=\"title function_\">css</span>()</span><br></pre></td></tr></table></figure>\n\n<p>具体步骤可分为:</p>\n<ul>\n<li><p>构造jQuery对象</p>\n</li>\n<li><p>调用jQuery方法</p>\n</li>\n</ul>\n<h1 id=\"2-jQuery-构建\"><a href=\"#2-jQuery-构建\" class=\"headerlink\" title=\"2. jQuery 构建\"></a>2. jQuery 构建</h1><p>通过原型传递，把jQuery的原型传递给jQuery.prototype.init.prototype</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> jQuery = <span class=\"keyword\">function</span>(<span class=\"params\">selector, context</span>) &#123;</span><br><span class=\"line\"> <span class=\"keyword\">return</span>  <span class=\"keyword\">new</span> aQuery.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"title function_\">init</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">jQuery.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">init</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">age</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">20</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">init</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = jQuery.<span class=\"property\"><span class=\"keyword\">prototype</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">jQuery</span>().<span class=\"title function_\">name</span>()) <span class=\"comment\">//20</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"3-链式调用\"><a href=\"#3-链式调用\" class=\"headerlink\" title=\"3. 链式调用\"></a>3. 链式调用</h1><p>实现链式的基本条件就是实例this的存在，并且是同一个</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jQuery.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">init</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jQuery.<span class=\"title function_\">init</span>().<span class=\"title function_\">name</span>()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"4-插件接口\"><a href=\"#4-插件接口\" class=\"headerlink\" title=\"4. 插件接口\"></a>4. 插件接口</h1><p>为jQuery或者jQuery prototype添加属性方法</p>\n<p>jQuery.extend 对jQuery本身的属性和方法进行了扩展</p>\n<p>jQuery.fn.extend 对jQuery.fn的属性和方法进行了扩展</p>\n<p>jQuery.fn 是jQuery.prototype 的引用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jQuery.<span class=\"property\">extend</span> = jQuery.<span class=\"property\">fn</span>.<span class=\"property\">extend</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"5-总结\"><a href=\"#5-总结\" class=\"headerlink\" title=\"5. 总结\"></a>5. 总结</h1><ul>\n<li>通过new jQuery.fn.init() 构建一个新的对象，拥有init构造器的prototype原型对象的方法</li>\n<li>通过改变prorotype指针的指向，让这个新的对象也指向了jQuery类的原型prototype</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>jQuery 版本：2.0.3<br>jQuery 源码学习笔记：<br><a href=\"http://www.cnblogs.com/aaronjs/p/3279314.html\">原文地址</a></p>\n</blockquote>\n<h1 id=\"1-整体架构\"><a href=\"#1-整体架构\" class=\"headerlink\" title=\"1. 整体架构\"></a>1. 整体架构</h1><p>Jquey的核心是从HTML文档中匹配元素后执行操作<br>如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).<span class=\"title function_\">append</span>(html)</span><br><span class=\"line\">$(selector).<span class=\"title function_\">html</span>(html).<span class=\"title function_\">css</span>()</span><br></pre></td></tr></table></figure>\n\n<p>具体步骤可分为:</p>\n<ul>\n<li><p>构造jQuery对象</p>\n</li>\n<li><p>调用jQuery方法</p>\n</li>\n</ul>\n<h1 id=\"2-jQuery-构建\"><a href=\"#2-jQuery-构建\" class=\"headerlink\" title=\"2. jQuery 构建\"></a>2. jQuery 构建</h1><p>通过原型传递，把jQuery的原型传递给jQuery.prototype.init.prototype</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> jQuery = <span class=\"keyword\">function</span>(<span class=\"params\">selector, context</span>) &#123;</span><br><span class=\"line\"> <span class=\"keyword\">return</span>  <span class=\"keyword\">new</span> aQuery.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"title function_\">init</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">jQuery.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">init</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">age</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">20</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">init</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = jQuery.<span class=\"property\"><span class=\"keyword\">prototype</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">jQuery</span>().<span class=\"title function_\">name</span>()) <span class=\"comment\">//20</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"3-链式调用\"><a href=\"#3-链式调用\" class=\"headerlink\" title=\"3. 链式调用\"></a>3. 链式调用</h1><p>实现链式的基本条件就是实例this的存在，并且是同一个</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jQuery.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">init</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jQuery.<span class=\"title function_\">init</span>().<span class=\"title function_\">name</span>()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"4-插件接口\"><a href=\"#4-插件接口\" class=\"headerlink\" title=\"4. 插件接口\"></a>4. 插件接口</h1><p>为jQuery或者jQuery prototype添加属性方法</p>\n<p>jQuery.extend 对jQuery本身的属性和方法进行了扩展</p>\n<p>jQuery.fn.extend 对jQuery.fn的属性和方法进行了扩展</p>\n<p>jQuery.fn 是jQuery.prototype 的引用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jQuery.<span class=\"property\">extend</span> = jQuery.<span class=\"property\">fn</span>.<span class=\"property\">extend</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"5-总结\"><a href=\"#5-总结\" class=\"headerlink\" title=\"5. 总结\"></a>5. 总结</h1><ul>\n<li>通过new jQuery.fn.init() 构建一个新的对象，拥有init构造器的prototype原型对象的方法</li>\n<li>通过改变prorotype指针的指向，让这个新的对象也指向了jQuery类的原型prototype</li>\n</ul>\n"},{"title":"Markdown语法总结","date":"2015-10-23T05:45:12.000Z","_content":"\n## 特殊字符自动转换\n------------------------\n> &字符\n> <字符\n\n## 区块元素\n------------------------\n\n- 段落和换行\n\n- 标题\n\n>类Setext形式\n``` bash\nThis is an H1\n=============\nThis is an H2\n=============\n```\n\n>类Atx形式\n``` bash\n# 这是H1\n## 这是H2\n```\n- 区块引用\n\n- 代码区块\n\n- 分割线\n\n\n## 区段元素\n------------------------\n\n- 链接\n这是[我的blog](http://www.cherishhsieh.com)\n\n- 强调\n**文本区域**\n\n- 代码\nUse the `printf()` function\n\n- 图片\n![Alt text](https://avatars2.githubusercontent.com/u/6762420?v=3&s=460)\n\n## 其他\n------------------------\n\n- 自动链接\n<http://www.cherishhsieh.com>\n<xieqin1991@gmail.com>\n\n- 反斜杠\n\\*literal asterisks\\*\n>\\   反斜线\n>`   反引号\n>\\*   星号\n>_   底线\n>{}  花括号\n>[]  方括号\n>()  括弧\n>\\#   井字号\n>\\+   加号\n>\\-   减号\n>.   英文句点\n>!   惊叹号","source":"_posts/Markdown语法总结.md","raw":"---\ntitle: Markdown语法总结\ndate: 2015-10-23 13:45:12\ntags: Markdown\ncategories: Markdown\n---\n\n## 特殊字符自动转换\n------------------------\n> &字符\n> <字符\n\n## 区块元素\n------------------------\n\n- 段落和换行\n\n- 标题\n\n>类Setext形式\n``` bash\nThis is an H1\n=============\nThis is an H2\n=============\n```\n\n>类Atx形式\n``` bash\n# 这是H1\n## 这是H2\n```\n- 区块引用\n\n- 代码区块\n\n- 分割线\n\n\n## 区段元素\n------------------------\n\n- 链接\n这是[我的blog](http://www.cherishhsieh.com)\n\n- 强调\n**文本区域**\n\n- 代码\nUse the `printf()` function\n\n- 图片\n![Alt text](https://avatars2.githubusercontent.com/u/6762420?v=3&s=460)\n\n## 其他\n------------------------\n\n- 自动链接\n<http://www.cherishhsieh.com>\n<xieqin1991@gmail.com>\n\n- 反斜杠\n\\*literal asterisks\\*\n>\\   反斜线\n>`   反引号\n>\\*   星号\n>_   底线\n>{}  花括号\n>[]  方括号\n>()  括弧\n>\\#   井字号\n>\\+   加号\n>\\-   减号\n>.   英文句点\n>!   惊叹号","slug":"Markdown语法总结","published":1,"updated":"2022-09-08T14:51:06.964Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krq6000ukp000g8cf54w","content":"<h2 id=\"特殊字符自动转换\"><a href=\"#特殊字符自动转换\" class=\"headerlink\" title=\"特殊字符自动转换\"></a>特殊字符自动转换</h2><hr>\n<blockquote>\n<p>&amp;字符<br>&lt;字符</p>\n</blockquote>\n<h2 id=\"区块元素\"><a href=\"#区块元素\" class=\"headerlink\" title=\"区块元素\"></a>区块元素</h2><hr>\n<ul>\n<li><p>段落和换行</p>\n</li>\n<li><p>标题</p>\n</li>\n</ul>\n<blockquote>\n<p>类Setext形式</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">This is an H1</span><br><span class=\"line\">=============</span><br><span class=\"line\">This is an H2</span><br><span class=\"line\">=============</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>类Atx形式</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这是H1</span></span><br><span class=\"line\"><span class=\"comment\">## 这是H2</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>区块引用</p>\n</li>\n<li><p>代码区块</p>\n</li>\n<li><p>分割线</p>\n</li>\n</ul>\n<h2 id=\"区段元素\"><a href=\"#区段元素\" class=\"headerlink\" title=\"区段元素\"></a>区段元素</h2><hr>\n<ul>\n<li><p>链接<br>这是<a href=\"http://www.cherishhsieh.com/\">我的blog</a></p>\n</li>\n<li><p>强调<br><strong>文本区域</strong></p>\n</li>\n<li><p>代码<br>Use the <code>printf()</code> function</p>\n</li>\n<li><p>图片<br><img src=\"https://avatars2.githubusercontent.com/u/6762420?v=3&s=460\" alt=\"Alt text\"></p>\n</li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><hr>\n<ul>\n<li><p>自动链接<br><a href=\"http://www.cherishhsieh.com/\">http://www.cherishhsieh.com</a><br><a href=\"mailto:&#x78;&#105;&#x65;&#113;&#x69;&#110;&#49;&#x39;&#57;&#x31;&#x40;&#x67;&#109;&#97;&#105;&#x6c;&#46;&#99;&#111;&#109;\">&#x78;&#105;&#x65;&#113;&#x69;&#110;&#49;&#x39;&#57;&#x31;&#x40;&#x67;&#109;&#97;&#105;&#x6c;&#46;&#99;&#111;&#109;</a></p>\n</li>\n<li><p>反斜杠<br>*literal asterisks*</p>\n<blockquote>\n<p>\\   反斜线<br>&#96;   反引号<br>*   星号<br>_   底线<br>{}  花括号<br>[]  方括号<br>()  括弧<br>#   井字号<br>+   加号<br>-   减号<br>.   英文句点<br>!   惊叹号</p>\n</blockquote>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"特殊字符自动转换\"><a href=\"#特殊字符自动转换\" class=\"headerlink\" title=\"特殊字符自动转换\"></a>特殊字符自动转换</h2><hr>\n<blockquote>\n<p>&amp;字符<br>&lt;字符</p>\n</blockquote>\n<h2 id=\"区块元素\"><a href=\"#区块元素\" class=\"headerlink\" title=\"区块元素\"></a>区块元素</h2><hr>\n<ul>\n<li><p>段落和换行</p>\n</li>\n<li><p>标题</p>\n</li>\n</ul>\n<blockquote>\n<p>类Setext形式</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">This is an H1</span><br><span class=\"line\">=============</span><br><span class=\"line\">This is an H2</span><br><span class=\"line\">=============</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>类Atx形式</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这是H1</span></span><br><span class=\"line\"><span class=\"comment\">## 这是H2</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>区块引用</p>\n</li>\n<li><p>代码区块</p>\n</li>\n<li><p>分割线</p>\n</li>\n</ul>\n<h2 id=\"区段元素\"><a href=\"#区段元素\" class=\"headerlink\" title=\"区段元素\"></a>区段元素</h2><hr>\n<ul>\n<li><p>链接<br>这是<a href=\"http://www.cherishhsieh.com/\">我的blog</a></p>\n</li>\n<li><p>强调<br><strong>文本区域</strong></p>\n</li>\n<li><p>代码<br>Use the <code>printf()</code> function</p>\n</li>\n<li><p>图片<br><img src=\"https://avatars2.githubusercontent.com/u/6762420?v=3&s=460\" alt=\"Alt text\"></p>\n</li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><hr>\n<ul>\n<li><p>自动链接<br><a href=\"http://www.cherishhsieh.com/\">http://www.cherishhsieh.com</a><br><a href=\"mailto:&#x78;&#105;&#x65;&#113;&#x69;&#110;&#49;&#x39;&#57;&#x31;&#x40;&#x67;&#109;&#97;&#105;&#x6c;&#46;&#99;&#111;&#109;\">&#x78;&#105;&#x65;&#113;&#x69;&#110;&#49;&#x39;&#57;&#x31;&#x40;&#x67;&#109;&#97;&#105;&#x6c;&#46;&#99;&#111;&#109;</a></p>\n</li>\n<li><p>反斜杠<br>*literal asterisks*</p>\n<blockquote>\n<p>\\   反斜线<br>&#96;   反引号<br>*   星号<br>_   底线<br>{}  花括号<br>[]  方括号<br>()  括弧<br>#   井字号<br>+   加号<br>-   减号<br>.   英文句点<br>!   惊叹号</p>\n</blockquote>\n</li>\n</ul>\n"},{"title":"React-Native学习总结","date":"2016-06-11T08:49:01.000Z","_content":"\n[文档](https://facebook.github.io/react-native/docs/getting-started.html)\n\n# 个人学习demo\n[react-native-learning-starter](https://github.com/xieQin/react-native-learning-starter)\n\nAndroid app\n\n主要实现的功能：\n- splash页\n- 抽屉导航\n- 带网络请求的ListView\n- 界面切换及Android 返回按钮控制\n- 下拉刷新\n\n# 总体感受\n如果只是用来实现简单的列表页+详情页，对于不熟悉Native开发的Web前端技术人员来说，React Native还是能很好地完成需求的，网络请求、UI视图交互、页面跳转均提供了很好的支持\n\n但是如果需要使用PackageManager,ActivityManager等组件的话，就需要通过React Native和Native混合开发了\n个人觉得对于实现复杂的应用来说，目前的RN社区还是缺乏一些高质量的组件，在找不到好用的组件的情况下，或者说大部分组件拿来后都要大修大改的情况下，实现 App 的效率其实非常低，大家都在忙着做一些基础的控件，很多东西都没有打磨好\n\n# 环境配置及安装\n依照[教程](https://facebook.github.io/react-native/docs/getting-started.html)安装即可\n","source":"_posts/React-Native学习总结.md","raw":"---\ntitle: React-Native学习总结\ndate: 2016-06-11 16:49:01\ntags: React-Native\ncategories: React\n---\n\n[文档](https://facebook.github.io/react-native/docs/getting-started.html)\n\n# 个人学习demo\n[react-native-learning-starter](https://github.com/xieQin/react-native-learning-starter)\n\nAndroid app\n\n主要实现的功能：\n- splash页\n- 抽屉导航\n- 带网络请求的ListView\n- 界面切换及Android 返回按钮控制\n- 下拉刷新\n\n# 总体感受\n如果只是用来实现简单的列表页+详情页，对于不熟悉Native开发的Web前端技术人员来说，React Native还是能很好地完成需求的，网络请求、UI视图交互、页面跳转均提供了很好的支持\n\n但是如果需要使用PackageManager,ActivityManager等组件的话，就需要通过React Native和Native混合开发了\n个人觉得对于实现复杂的应用来说，目前的RN社区还是缺乏一些高质量的组件，在找不到好用的组件的情况下，或者说大部分组件拿来后都要大修大改的情况下，实现 App 的效率其实非常低，大家都在忙着做一些基础的控件，很多东西都没有打磨好\n\n# 环境配置及安装\n依照[教程](https://facebook.github.io/react-native/docs/getting-started.html)安装即可\n","slug":"React-Native学习总结","published":1,"updated":"2022-09-08T14:51:06.965Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krq7000zkp008txpdma9","content":"<p><a href=\"https://facebook.github.io/react-native/docs/getting-started.html\">文档</a></p>\n<h1 id=\"个人学习demo\"><a href=\"#个人学习demo\" class=\"headerlink\" title=\"个人学习demo\"></a>个人学习demo</h1><p><a href=\"https://github.com/xieQin/react-native-learning-starter\">react-native-learning-starter</a></p>\n<p>Android app</p>\n<p>主要实现的功能：</p>\n<ul>\n<li>splash页</li>\n<li>抽屉导航</li>\n<li>带网络请求的ListView</li>\n<li>界面切换及Android 返回按钮控制</li>\n<li>下拉刷新</li>\n</ul>\n<h1 id=\"总体感受\"><a href=\"#总体感受\" class=\"headerlink\" title=\"总体感受\"></a>总体感受</h1><p>如果只是用来实现简单的列表页+详情页，对于不熟悉Native开发的Web前端技术人员来说，React Native还是能很好地完成需求的，网络请求、UI视图交互、页面跳转均提供了很好的支持</p>\n<p>但是如果需要使用PackageManager,ActivityManager等组件的话，就需要通过React Native和Native混合开发了<br>个人觉得对于实现复杂的应用来说，目前的RN社区还是缺乏一些高质量的组件，在找不到好用的组件的情况下，或者说大部分组件拿来后都要大修大改的情况下，实现 App 的效率其实非常低，大家都在忙着做一些基础的控件，很多东西都没有打磨好</p>\n<h1 id=\"环境配置及安装\"><a href=\"#环境配置及安装\" class=\"headerlink\" title=\"环境配置及安装\"></a>环境配置及安装</h1><p>依照<a href=\"https://facebook.github.io/react-native/docs/getting-started.html\">教程</a>安装即可</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://facebook.github.io/react-native/docs/getting-started.html\">文档</a></p>\n<h1 id=\"个人学习demo\"><a href=\"#个人学习demo\" class=\"headerlink\" title=\"个人学习demo\"></a>个人学习demo</h1><p><a href=\"https://github.com/xieQin/react-native-learning-starter\">react-native-learning-starter</a></p>\n<p>Android app</p>\n<p>主要实现的功能：</p>\n<ul>\n<li>splash页</li>\n<li>抽屉导航</li>\n<li>带网络请求的ListView</li>\n<li>界面切换及Android 返回按钮控制</li>\n<li>下拉刷新</li>\n</ul>\n<h1 id=\"总体感受\"><a href=\"#总体感受\" class=\"headerlink\" title=\"总体感受\"></a>总体感受</h1><p>如果只是用来实现简单的列表页+详情页，对于不熟悉Native开发的Web前端技术人员来说，React Native还是能很好地完成需求的，网络请求、UI视图交互、页面跳转均提供了很好的支持</p>\n<p>但是如果需要使用PackageManager,ActivityManager等组件的话，就需要通过React Native和Native混合开发了<br>个人觉得对于实现复杂的应用来说，目前的RN社区还是缺乏一些高质量的组件，在找不到好用的组件的情况下，或者说大部分组件拿来后都要大修大改的情况下，实现 App 的效率其实非常低，大家都在忙着做一些基础的控件，很多东西都没有打磨好</p>\n<h1 id=\"环境配置及安装\"><a href=\"#环境配置及安装\" class=\"headerlink\" title=\"环境配置及安装\"></a>环境配置及安装</h1><p>依照<a href=\"https://facebook.github.io/react-native/docs/getting-started.html\">教程</a>安装即可</p>\n"},{"title":"React学习总结","date":"2015-11-15T07:01:07.000Z","_content":"\n[文档](http://reactjs.cn/react/docs/getting-started.html)\n[个人学习demo](https://github.com/xieQin/react-learning/tree/master/tutorial)\n\nReact 主要概念：\n- 组件\n- JSX\n- Virtual DOM\n- Data Flow\n\n```js\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\n\nclass HelloMessage extends Component {\n  render() {\n    return <div>Hello {this.props.name}</div>;\n  }\n}\n\n// 加载组件到 DOM 元素 mountNode\nrender(<HelloMessage name=\"John\" />, mountNode);\n```\n\n# 组件生命周期\n\n- `componentWillMount`\n- `componentDidMount`\n- `componentWillReceiveProps`\n- `shouldComponentUpdate`\n- `componentWillUpdate`\n- `componentDidUpdate`\n- `componentWillUnmount`\n\n一个简单例子：\n```js\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\n\nclass LikeButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { liked: false };\n  }\n\n  handleClick(e) {\n    this.setState({ liked: !this.state.liked });\n  }\n\n  render() {\n    const text = this.state.liked ? 'like' : 'haven\\'t liked';\n    return (\n      <p onClick={this.handleClick.bind(this)}>\n          You {text} this. Click to toggle.\n      </p>\n    );\n  }\n}\n\nrender(\n    <LikeButton />,\n    document.getElementById('example')\n);\n```","source":"_posts/React学习总结.md","raw":"---\ntitle: React学习总结\ndate: 2015-11-15 15:01:07\ntags: React\ncategories: React\n---\n\n[文档](http://reactjs.cn/react/docs/getting-started.html)\n[个人学习demo](https://github.com/xieQin/react-learning/tree/master/tutorial)\n\nReact 主要概念：\n- 组件\n- JSX\n- Virtual DOM\n- Data Flow\n\n```js\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\n\nclass HelloMessage extends Component {\n  render() {\n    return <div>Hello {this.props.name}</div>;\n  }\n}\n\n// 加载组件到 DOM 元素 mountNode\nrender(<HelloMessage name=\"John\" />, mountNode);\n```\n\n# 组件生命周期\n\n- `componentWillMount`\n- `componentDidMount`\n- `componentWillReceiveProps`\n- `shouldComponentUpdate`\n- `componentWillUpdate`\n- `componentDidUpdate`\n- `componentWillUnmount`\n\n一个简单例子：\n```js\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\n\nclass LikeButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { liked: false };\n  }\n\n  handleClick(e) {\n    this.setState({ liked: !this.state.liked });\n  }\n\n  render() {\n    const text = this.state.liked ? 'like' : 'haven\\'t liked';\n    return (\n      <p onClick={this.handleClick.bind(this)}>\n          You {text} this. Click to toggle.\n      </p>\n    );\n  }\n}\n\nrender(\n    <LikeButton />,\n    document.getElementById('example')\n);\n```","slug":"React学习总结","published":1,"updated":"2022-09-08T14:51:06.966Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krq80012kp00d154bbcz","content":"<p><a href=\"http://reactjs.cn/react/docs/getting-started.html\">文档</a><br><a href=\"https://github.com/xieQin/react-learning/tree/master/tutorial\">个人学习demo</a></p>\n<p>React 主要概念：</p>\n<ul>\n<li>组件</li>\n<li>JSX</li>\n<li>Virtual DOM</li>\n<li>Data Flow</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>, &#123; <span class=\"title class_\">Component</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; render &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-dom&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">HelloMessage</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Hello &#123;this.props.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 加载组件到 DOM 元素 mountNode</span></span><br><span class=\"line\"><span class=\"title function_\">render</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">HelloMessage</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;John&quot;</span> /&gt;</span></span>, mountNode);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"组件生命周期\"><a href=\"#组件生命周期\" class=\"headerlink\" title=\"组件生命周期\"></a>组件生命周期</h1><ul>\n<li><code>componentWillMount</code></li>\n<li><code>componentDidMount</code></li>\n<li><code>componentWillReceiveProps</code></li>\n<li><code>shouldComponentUpdate</code></li>\n<li><code>componentWillUpdate</code></li>\n<li><code>componentDidUpdate</code></li>\n<li><code>componentWillUnmount</code></li>\n</ul>\n<p>一个简单例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>, &#123; <span class=\"title class_\">Component</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; render &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-dom&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">LikeButton</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">props</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>(props);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">state</span> = &#123; <span class=\"attr\">liked</span>: <span class=\"literal\">false</span> &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">handleClick</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123; <span class=\"attr\">liked</span>: !<span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">liked</span> &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> text = <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">liked</span> ? <span class=\"string\">&#x27;like&#x27;</span> : <span class=\"string\">&#x27;haven\\&#x27;t liked&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.handleClick.bind(this)&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          You &#123;text&#125; this. Click to toggle.</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">render</span>(</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">LikeButton</span> /&gt;</span></span>,</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;example&#x27;</span>)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://reactjs.cn/react/docs/getting-started.html\">文档</a><br><a href=\"https://github.com/xieQin/react-learning/tree/master/tutorial\">个人学习demo</a></p>\n<p>React 主要概念：</p>\n<ul>\n<li>组件</li>\n<li>JSX</li>\n<li>Virtual DOM</li>\n<li>Data Flow</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>, &#123; <span class=\"title class_\">Component</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; render &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-dom&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">HelloMessage</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Hello &#123;this.props.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 加载组件到 DOM 元素 mountNode</span></span><br><span class=\"line\"><span class=\"title function_\">render</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">HelloMessage</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;John&quot;</span> /&gt;</span></span>, mountNode);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"组件生命周期\"><a href=\"#组件生命周期\" class=\"headerlink\" title=\"组件生命周期\"></a>组件生命周期</h1><ul>\n<li><code>componentWillMount</code></li>\n<li><code>componentDidMount</code></li>\n<li><code>componentWillReceiveProps</code></li>\n<li><code>shouldComponentUpdate</code></li>\n<li><code>componentWillUpdate</code></li>\n<li><code>componentDidUpdate</code></li>\n<li><code>componentWillUnmount</code></li>\n</ul>\n<p>一个简单例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>, &#123; <span class=\"title class_\">Component</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; render &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-dom&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">LikeButton</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">props</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>(props);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">state</span> = &#123; <span class=\"attr\">liked</span>: <span class=\"literal\">false</span> &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">handleClick</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123; <span class=\"attr\">liked</span>: !<span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">liked</span> &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> text = <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">liked</span> ? <span class=\"string\">&#x27;like&#x27;</span> : <span class=\"string\">&#x27;haven\\&#x27;t liked&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;this.handleClick.bind(this)&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          You &#123;text&#125; this. Click to toggle.</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">render</span>(</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">LikeButton</span> /&gt;</span></span>,</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;example&#x27;</span>)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>"},{"title":"Redux学习总结","date":"2016-06-15T07:01:17.000Z","_content":"\n![Redux流程图](https://camo.githubusercontent.com/76224d874f32535aa62c0cd01750fb71fb02cf53/687474703a2f2f70362e7168696d672e636f6d2f642f696e6e2f39613331326463632f7265647578466c6f772e706e67)\n\n从Redux的流程图来看，redux的整体思想还是不难理解的\n只是当遇到各种为了同构而设计得较为繁琐的API、为了相对高效率地获得状态树的局部状态而引入的第三方库时，\n难免有些地方迷糊\n因此总结一下学习中的要点，备查\n\n[推荐教程](https://github.com/happypoulp/redux-tutorial)\n[文档](http://redux.js.org/)\n\n# 1. Redux\n\nRedux主要特点：\n- state以单一对象存储在store对象中\n- state只读，state变化时应返回新的state而不是更新原state\n- 使用纯函数reducer执行state更新\n\n>state 为单一对象，使得 Redux 只需要维护一棵状态树，服务端很容易初始化状态，易于服务器渲染。state 只能通过 dispatch(action) 来触发更新，更新逻辑由 reducer 来执行\n\n## 1.1 Action\n\naction 可以理解为应用向 store 传递的数据信息（一般为用户交互信息）\n\n```js\nfunction addTodo(text) {\n  return {\n    type: ADD_TODO,\n    text,\n  }\n}\nstore.dispatch(addTodo(text))\n```\n如果要处理异步 action，需要使用一些中间件。 \nredux-thunks 和 redux-promise 分别是使用异步回调和 Promise 来解决异步 action 的问题\n\n## 1.2 Reducer\n更新state的纯函数，用来执行根据指定 action 来更新 state 的逻辑\n`(previousState, action) => newState`\n`combineReducers(reducers)` 可以把多个 reducer 合并成一个 root reducer\n\n## 1.3 Store\n\nstore 是一个单一对象：\n\n- 管理应用的 state\n- 获取 state `store.getState()`\n- 触发 state 更新 `store.dispatch(action)`\n- 注册 state 变化监听器 `store.subscribe(listener)`\n- 创建store `createStore(reducer, [initialState])`\n\n# 2. Middlewares\ndispatch(action) 是一个同步的过程：执行 reducer 更新 state -> 调用 store 的监听处理函数。\n如果需要在 dispatch 时执行一些异步操作（fetch action data），此时就需要引入 Middleware 解决。\n\n```js\nexport default function thunkMiddleware({ dispatch, getState }) {\n  return next => action =>\n    typeof action === 'function' ? action(dispatch, getState) : next(action)\n}\n```\n`newDispatch = middleware1(middleware2(...(dispatch)...))`\n\n# 3. react-redux\n[react-redux 文档](http://cn.redux.js.org/docs/react-redux/index.html)\n\nAPI:\n\n- `<Provider store>`\n- `connect([mapStateToProps], [mapDispatchToProps], [mergeProps], [options])`\n\n# 4. 总结\n\n- action是纯声明式的数据结构，提供事件的所有要素\n- reducer是一个匹配函数, 所有的reducer都可以捕捉到action并匹配与自己相关与否，相关就拿走action中的要素进行逻辑处理，修改store中的状态，不相关就不对state做处理原样返回\n- store负责存储状态并可以被react api回调，发布action\n- react-redux, 提供一个Provider和connect\n- Provider是一个普通组件，可以作为顶层app的分发点，传入store属性后，它会将state分发给所有被connect的组件\n- connect是一个科里化函数，先接收两个参数（数据绑定mapStateToProps和事件绑定mapDispatchToProps），再接受一个参数（将要绑定的组件本身）\n- mapStateToProps：构建好Redux系统的时候，它会被自动初始化，但是你的React组件并不知道它的存在，因此你需要分拣出你需要的Redux状态，所以你需要绑定一个函数，它的参数是state，简单返回你关心的几个值。\n- mapDispatchToProps：声明好的action作为回调，也可以被注入到组件里，就是通过这个函数，它的参数是dispatch，通过redux的辅助方法bindActionCreator绑定所有action以及参数的dispatch，就可以作为属性在组件里面作为函数简单使用了，不需要手动dispatch。这个mapDispatchToProps是可选的，如果不传这个参数redux会简单把dispatch作为属性注入给组件，可以手动当做store.dispatch使用。","source":"_posts/Redux学习总结.md","raw":"---\ntitle: Redux学习总结\ndate: 2016-06-15 15:01:17\ntags: Redux\ncategories: React\n---\n\n![Redux流程图](https://camo.githubusercontent.com/76224d874f32535aa62c0cd01750fb71fb02cf53/687474703a2f2f70362e7168696d672e636f6d2f642f696e6e2f39613331326463632f7265647578466c6f772e706e67)\n\n从Redux的流程图来看，redux的整体思想还是不难理解的\n只是当遇到各种为了同构而设计得较为繁琐的API、为了相对高效率地获得状态树的局部状态而引入的第三方库时，\n难免有些地方迷糊\n因此总结一下学习中的要点，备查\n\n[推荐教程](https://github.com/happypoulp/redux-tutorial)\n[文档](http://redux.js.org/)\n\n# 1. Redux\n\nRedux主要特点：\n- state以单一对象存储在store对象中\n- state只读，state变化时应返回新的state而不是更新原state\n- 使用纯函数reducer执行state更新\n\n>state 为单一对象，使得 Redux 只需要维护一棵状态树，服务端很容易初始化状态，易于服务器渲染。state 只能通过 dispatch(action) 来触发更新，更新逻辑由 reducer 来执行\n\n## 1.1 Action\n\naction 可以理解为应用向 store 传递的数据信息（一般为用户交互信息）\n\n```js\nfunction addTodo(text) {\n  return {\n    type: ADD_TODO,\n    text,\n  }\n}\nstore.dispatch(addTodo(text))\n```\n如果要处理异步 action，需要使用一些中间件。 \nredux-thunks 和 redux-promise 分别是使用异步回调和 Promise 来解决异步 action 的问题\n\n## 1.2 Reducer\n更新state的纯函数，用来执行根据指定 action 来更新 state 的逻辑\n`(previousState, action) => newState`\n`combineReducers(reducers)` 可以把多个 reducer 合并成一个 root reducer\n\n## 1.3 Store\n\nstore 是一个单一对象：\n\n- 管理应用的 state\n- 获取 state `store.getState()`\n- 触发 state 更新 `store.dispatch(action)`\n- 注册 state 变化监听器 `store.subscribe(listener)`\n- 创建store `createStore(reducer, [initialState])`\n\n# 2. Middlewares\ndispatch(action) 是一个同步的过程：执行 reducer 更新 state -> 调用 store 的监听处理函数。\n如果需要在 dispatch 时执行一些异步操作（fetch action data），此时就需要引入 Middleware 解决。\n\n```js\nexport default function thunkMiddleware({ dispatch, getState }) {\n  return next => action =>\n    typeof action === 'function' ? action(dispatch, getState) : next(action)\n}\n```\n`newDispatch = middleware1(middleware2(...(dispatch)...))`\n\n# 3. react-redux\n[react-redux 文档](http://cn.redux.js.org/docs/react-redux/index.html)\n\nAPI:\n\n- `<Provider store>`\n- `connect([mapStateToProps], [mapDispatchToProps], [mergeProps], [options])`\n\n# 4. 总结\n\n- action是纯声明式的数据结构，提供事件的所有要素\n- reducer是一个匹配函数, 所有的reducer都可以捕捉到action并匹配与自己相关与否，相关就拿走action中的要素进行逻辑处理，修改store中的状态，不相关就不对state做处理原样返回\n- store负责存储状态并可以被react api回调，发布action\n- react-redux, 提供一个Provider和connect\n- Provider是一个普通组件，可以作为顶层app的分发点，传入store属性后，它会将state分发给所有被connect的组件\n- connect是一个科里化函数，先接收两个参数（数据绑定mapStateToProps和事件绑定mapDispatchToProps），再接受一个参数（将要绑定的组件本身）\n- mapStateToProps：构建好Redux系统的时候，它会被自动初始化，但是你的React组件并不知道它的存在，因此你需要分拣出你需要的Redux状态，所以你需要绑定一个函数，它的参数是state，简单返回你关心的几个值。\n- mapDispatchToProps：声明好的action作为回调，也可以被注入到组件里，就是通过这个函数，它的参数是dispatch，通过redux的辅助方法bindActionCreator绑定所有action以及参数的dispatch，就可以作为属性在组件里面作为函数简单使用了，不需要手动dispatch。这个mapDispatchToProps是可选的，如果不传这个参数redux会简单把dispatch作为属性注入给组件，可以手动当做store.dispatch使用。","slug":"Redux学习总结","published":1,"updated":"2022-09-08T14:51:06.966Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krqa0015kp005n3g47i1","content":"<p><img src=\"https://camo.githubusercontent.com/76224d874f32535aa62c0cd01750fb71fb02cf53/687474703a2f2f70362e7168696d672e636f6d2f642f696e6e2f39613331326463632f7265647578466c6f772e706e67\" alt=\"Redux流程图\"></p>\n<p>从Redux的流程图来看，redux的整体思想还是不难理解的<br>只是当遇到各种为了同构而设计得较为繁琐的API、为了相对高效率地获得状态树的局部状态而引入的第三方库时，<br>难免有些地方迷糊<br>因此总结一下学习中的要点，备查</p>\n<p><a href=\"https://github.com/happypoulp/redux-tutorial\">推荐教程</a><br><a href=\"http://redux.js.org/\">文档</a></p>\n<h1 id=\"1-Redux\"><a href=\"#1-Redux\" class=\"headerlink\" title=\"1. Redux\"></a>1. Redux</h1><p>Redux主要特点：</p>\n<ul>\n<li>state以单一对象存储在store对象中</li>\n<li>state只读，state变化时应返回新的state而不是更新原state</li>\n<li>使用纯函数reducer执行state更新</li>\n</ul>\n<blockquote>\n<p>state 为单一对象，使得 Redux 只需要维护一棵状态树，服务端很容易初始化状态，易于服务器渲染。state 只能通过 dispatch(action) 来触发更新，更新逻辑由 reducer 来执行</p>\n</blockquote>\n<h2 id=\"1-1-Action\"><a href=\"#1-1-Action\" class=\"headerlink\" title=\"1.1 Action\"></a>1.1 Action</h2><p>action 可以理解为应用向 store 传递的数据信息（一般为用户交互信息）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">addTodo</span>(<span class=\"params\">text</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"variable constant_\">ADD_TODO</span>,</span><br><span class=\"line\">    text,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">store.<span class=\"title function_\">dispatch</span>(<span class=\"title function_\">addTodo</span>(text))</span><br></pre></td></tr></table></figure>\n<p>如果要处理异步 action，需要使用一些中间件。<br>redux-thunks 和 redux-promise 分别是使用异步回调和 Promise 来解决异步 action 的问题</p>\n<h2 id=\"1-2-Reducer\"><a href=\"#1-2-Reducer\" class=\"headerlink\" title=\"1.2 Reducer\"></a>1.2 Reducer</h2><p>更新state的纯函数，用来执行根据指定 action 来更新 state 的逻辑<br><code>(previousState, action) =&gt; newState</code><br><code>combineReducers(reducers)</code> 可以把多个 reducer 合并成一个 root reducer</p>\n<h2 id=\"1-3-Store\"><a href=\"#1-3-Store\" class=\"headerlink\" title=\"1.3 Store\"></a>1.3 Store</h2><p>store 是一个单一对象：</p>\n<ul>\n<li>管理应用的 state</li>\n<li>获取 state <code>store.getState()</code></li>\n<li>触发 state 更新 <code>store.dispatch(action)</code></li>\n<li>注册 state 变化监听器 <code>store.subscribe(listener)</code></li>\n<li>创建store <code>createStore(reducer, [initialState])</code></li>\n</ul>\n<h1 id=\"2-Middlewares\"><a href=\"#2-Middlewares\" class=\"headerlink\" title=\"2. Middlewares\"></a>2. Middlewares</h1><p>dispatch(action) 是一个同步的过程：执行 reducer 更新 state -&gt; 调用 store 的监听处理函数。<br>如果需要在 dispatch 时执行一些异步操作（fetch action data），此时就需要引入 Middleware 解决。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> <span class=\"title function_\">thunkMiddleware</span>(<span class=\"params\">&#123; dispatch, getState &#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"params\">next</span> =&gt;</span> <span class=\"function\"><span class=\"params\">action</span> =&gt;</span></span><br><span class=\"line\">    <span class=\"keyword\">typeof</span> action === <span class=\"string\">&#x27;function&#x27;</span> ? <span class=\"title function_\">action</span>(dispatch, getState) : <span class=\"title function_\">next</span>(action)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>newDispatch = middleware1(middleware2(...(dispatch)...))</code></p>\n<h1 id=\"3-react-redux\"><a href=\"#3-react-redux\" class=\"headerlink\" title=\"3. react-redux\"></a>3. react-redux</h1><p><a href=\"http://cn.redux.js.org/docs/react-redux/index.html\">react-redux 文档</a></p>\n<p>API:</p>\n<ul>\n<li><code>&lt;Provider store&gt;</code></li>\n<li><code>connect([mapStateToProps], [mapDispatchToProps], [mergeProps], [options])</code></li>\n</ul>\n<h1 id=\"4-总结\"><a href=\"#4-总结\" class=\"headerlink\" title=\"4. 总结\"></a>4. 总结</h1><ul>\n<li>action是纯声明式的数据结构，提供事件的所有要素</li>\n<li>reducer是一个匹配函数, 所有的reducer都可以捕捉到action并匹配与自己相关与否，相关就拿走action中的要素进行逻辑处理，修改store中的状态，不相关就不对state做处理原样返回</li>\n<li>store负责存储状态并可以被react api回调，发布action</li>\n<li>react-redux, 提供一个Provider和connect</li>\n<li>Provider是一个普通组件，可以作为顶层app的分发点，传入store属性后，它会将state分发给所有被connect的组件</li>\n<li>connect是一个科里化函数，先接收两个参数（数据绑定mapStateToProps和事件绑定mapDispatchToProps），再接受一个参数（将要绑定的组件本身）</li>\n<li>mapStateToProps：构建好Redux系统的时候，它会被自动初始化，但是你的React组件并不知道它的存在，因此你需要分拣出你需要的Redux状态，所以你需要绑定一个函数，它的参数是state，简单返回你关心的几个值。</li>\n<li>mapDispatchToProps：声明好的action作为回调，也可以被注入到组件里，就是通过这个函数，它的参数是dispatch，通过redux的辅助方法bindActionCreator绑定所有action以及参数的dispatch，就可以作为属性在组件里面作为函数简单使用了，不需要手动dispatch。这个mapDispatchToProps是可选的，如果不传这个参数redux会简单把dispatch作为属性注入给组件，可以手动当做store.dispatch使用。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://camo.githubusercontent.com/76224d874f32535aa62c0cd01750fb71fb02cf53/687474703a2f2f70362e7168696d672e636f6d2f642f696e6e2f39613331326463632f7265647578466c6f772e706e67\" alt=\"Redux流程图\"></p>\n<p>从Redux的流程图来看，redux的整体思想还是不难理解的<br>只是当遇到各种为了同构而设计得较为繁琐的API、为了相对高效率地获得状态树的局部状态而引入的第三方库时，<br>难免有些地方迷糊<br>因此总结一下学习中的要点，备查</p>\n<p><a href=\"https://github.com/happypoulp/redux-tutorial\">推荐教程</a><br><a href=\"http://redux.js.org/\">文档</a></p>\n<h1 id=\"1-Redux\"><a href=\"#1-Redux\" class=\"headerlink\" title=\"1. Redux\"></a>1. Redux</h1><p>Redux主要特点：</p>\n<ul>\n<li>state以单一对象存储在store对象中</li>\n<li>state只读，state变化时应返回新的state而不是更新原state</li>\n<li>使用纯函数reducer执行state更新</li>\n</ul>\n<blockquote>\n<p>state 为单一对象，使得 Redux 只需要维护一棵状态树，服务端很容易初始化状态，易于服务器渲染。state 只能通过 dispatch(action) 来触发更新，更新逻辑由 reducer 来执行</p>\n</blockquote>\n<h2 id=\"1-1-Action\"><a href=\"#1-1-Action\" class=\"headerlink\" title=\"1.1 Action\"></a>1.1 Action</h2><p>action 可以理解为应用向 store 传递的数据信息（一般为用户交互信息）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">addTodo</span>(<span class=\"params\">text</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"variable constant_\">ADD_TODO</span>,</span><br><span class=\"line\">    text,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">store.<span class=\"title function_\">dispatch</span>(<span class=\"title function_\">addTodo</span>(text))</span><br></pre></td></tr></table></figure>\n<p>如果要处理异步 action，需要使用一些中间件。<br>redux-thunks 和 redux-promise 分别是使用异步回调和 Promise 来解决异步 action 的问题</p>\n<h2 id=\"1-2-Reducer\"><a href=\"#1-2-Reducer\" class=\"headerlink\" title=\"1.2 Reducer\"></a>1.2 Reducer</h2><p>更新state的纯函数，用来执行根据指定 action 来更新 state 的逻辑<br><code>(previousState, action) =&gt; newState</code><br><code>combineReducers(reducers)</code> 可以把多个 reducer 合并成一个 root reducer</p>\n<h2 id=\"1-3-Store\"><a href=\"#1-3-Store\" class=\"headerlink\" title=\"1.3 Store\"></a>1.3 Store</h2><p>store 是一个单一对象：</p>\n<ul>\n<li>管理应用的 state</li>\n<li>获取 state <code>store.getState()</code></li>\n<li>触发 state 更新 <code>store.dispatch(action)</code></li>\n<li>注册 state 变化监听器 <code>store.subscribe(listener)</code></li>\n<li>创建store <code>createStore(reducer, [initialState])</code></li>\n</ul>\n<h1 id=\"2-Middlewares\"><a href=\"#2-Middlewares\" class=\"headerlink\" title=\"2. Middlewares\"></a>2. Middlewares</h1><p>dispatch(action) 是一个同步的过程：执行 reducer 更新 state -&gt; 调用 store 的监听处理函数。<br>如果需要在 dispatch 时执行一些异步操作（fetch action data），此时就需要引入 Middleware 解决。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> <span class=\"title function_\">thunkMiddleware</span>(<span class=\"params\">&#123; dispatch, getState &#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"params\">next</span> =&gt;</span> <span class=\"function\"><span class=\"params\">action</span> =&gt;</span></span><br><span class=\"line\">    <span class=\"keyword\">typeof</span> action === <span class=\"string\">&#x27;function&#x27;</span> ? <span class=\"title function_\">action</span>(dispatch, getState) : <span class=\"title function_\">next</span>(action)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>newDispatch = middleware1(middleware2(...(dispatch)...))</code></p>\n<h1 id=\"3-react-redux\"><a href=\"#3-react-redux\" class=\"headerlink\" title=\"3. react-redux\"></a>3. react-redux</h1><p><a href=\"http://cn.redux.js.org/docs/react-redux/index.html\">react-redux 文档</a></p>\n<p>API:</p>\n<ul>\n<li><code>&lt;Provider store&gt;</code></li>\n<li><code>connect([mapStateToProps], [mapDispatchToProps], [mergeProps], [options])</code></li>\n</ul>\n<h1 id=\"4-总结\"><a href=\"#4-总结\" class=\"headerlink\" title=\"4. 总结\"></a>4. 总结</h1><ul>\n<li>action是纯声明式的数据结构，提供事件的所有要素</li>\n<li>reducer是一个匹配函数, 所有的reducer都可以捕捉到action并匹配与自己相关与否，相关就拿走action中的要素进行逻辑处理，修改store中的状态，不相关就不对state做处理原样返回</li>\n<li>store负责存储状态并可以被react api回调，发布action</li>\n<li>react-redux, 提供一个Provider和connect</li>\n<li>Provider是一个普通组件，可以作为顶层app的分发点，传入store属性后，它会将state分发给所有被connect的组件</li>\n<li>connect是一个科里化函数，先接收两个参数（数据绑定mapStateToProps和事件绑定mapDispatchToProps），再接受一个参数（将要绑定的组件本身）</li>\n<li>mapStateToProps：构建好Redux系统的时候，它会被自动初始化，但是你的React组件并不知道它的存在，因此你需要分拣出你需要的Redux状态，所以你需要绑定一个函数，它的参数是state，简单返回你关心的几个值。</li>\n<li>mapDispatchToProps：声明好的action作为回调，也可以被注入到组件里，就是通过这个函数，它的参数是dispatch，通过redux的辅助方法bindActionCreator绑定所有action以及参数的dispatch，就可以作为属性在组件里面作为函数简单使用了，不需要手动dispatch。这个mapDispatchToProps是可选的，如果不传这个参数redux会简单把dispatch作为属性注入给组件，可以手动当做store.dispatch使用。</li>\n</ul>\n"},{"title":"Touch手势","date":"2015-04-04T03:18:54.000Z","_content":"\n## 常见问题\n>- 带延迟的事件分发机制：鼠标事件\n>- Mousemove无法追踪\n\n## 点击延迟\n```js\nvar startX,\n    startY,\n    tap;\n\nfunction getCoord(e, c) {\n    return /touch/.test(e.type) ? (e.originalEvent || e).changedTouches[0]['page' + c] : e['page' + c];\n}\n\nfunction setTap() {\n    tap = true;\n    setTimeout(function () {\n        tap = false;\n    }, 500);\n}\n\nelement.on('touchstart', function (ev) {\n    startX = getCoord(ev, 'X');\n    startY = getCoord(ev, 'Y');\n}).on('touchend', function (ev) {\n    // If movement is less than 20px, execute the handler\n    if (Math.abs(getCoord(ev, 'X') - startX) < 20 && Math.abs(getCoord(ev, 'Y') - startY) < 20) {\n        // Prevent emulated mouse events\n        ev.preventDefault();\n        handler.call(this, ev);\n    }\n    setTap();\n}).on('click', function (ev) {\n    if (!tap) {\n        // If handler was not called on touchend, call it on click;\n        handler.call(this, ev);\n    }\n    ev.preventDefault();\n});\n```\n\n## Touch事件\n>- Point\n>- Tap\n>- Press and Hold\n>- Slide\n>- Swipe\n>- Pinch and Stretch\n>- Turn\n\n```js\nvar touch,\n    action,\n    diffX,\n    diffY,\n    endX,\n    endY,\n    scroll,\n    sort,\n    startX,\n    startY,\n    swipe,\n\nfunction testTouch(e) {\n    if (e.type == 'touchstart') {\n        touch = true;\n    } else if (touch) {\n        touch = false;\n        return false;\n    }\n    return true;\n}\n\nfunction onStart(ev) {\n    if (testTouch(ev) && !action) {\n        action = true;\n\n        startX = getCoord(ev, 'X');\n        startY = getCoord(ev, 'Y');\n        diffX = 0;\n        diffY = 0;\n\n        sortTimer = setTimeout(function () {\n            sort = true;\n        }, 200);\n\n        if (ev.type == 'mousedown') {\n            $(document).on('mousemove', onMove).on('mouseup', onEnd);\n        }\n    }\n}\n\nfunction onMove(ev) {\n    if (action) {\n        endX = getCoord(ev, 'X');\n        endY = getCoord(ev, 'Y');\n        diffX = endX - startX;\n        diffY = endY - startY;\n\n        if (!sort && !swipe && !scroll) {\n            if (Math.abs(diffY) > 10) { // It's a scroll\n                scroll = true;\n                // Android 4.0 will not fire touchend event\n                $(this).trigger('touchend');\n            } else if (Math.abs(diffX) > 7) { // It's a swipe\n                swipe = true;\n            }\n        }\n\n        if (swipe) {\n            ev.preventDefault(); // Kill page scroll\n            // Handle swipe\n            // ...\n        }\n\n        if (sort) {\n            ev.preventDefault(); // Kill page scroll\n            // Handle sort\n            // ....\n        }\n\n        if (Math.abs(diffX) > 5 || Math.abs(diffY) > 5) {\n            clearTimeout(sortTimer);\n        }\n    }\n}\n\nfunction onEnd(ev) {\n    if (action) {\n        action = false;\n\n        if (swipe) {\n            // Handle swipe end\n            // ...\n        } else if (sort) {\n            // Handle sort end\n            // ...\n        } else if (!scroll && Math.abs(diffX) < 5 && Math.abs(diffY) < 5) { // Tap\n            if (ev.type === 'touchend') { // Prevent phantom clicks\n                ev.preventDefault();\n            }\n            // Handle tap\n            // ...\n        }\n\n        swipe = false;\n        sort = false;\n        scroll = false;\n\n        clearTimeout(sortTimer);\n\n        if (ev.type == 'mouseup') {\n            $(document).off('mousemove', onMove).off('mouseup', onEnd);\n        }\n    }\n}\n\nelement\n    .on('touchstart mousedown', onStart)\n    .on('touchmove', onMove)\n    .on('touchend touchcancel', onEnd)\n```","source":"_posts/Touch手势.md","raw":"---\ntitle: Touch手势\ndate: 2015-04-04 11:18:54\ntags: Javascript\ncategories: 前端\n---\n\n## 常见问题\n>- 带延迟的事件分发机制：鼠标事件\n>- Mousemove无法追踪\n\n## 点击延迟\n```js\nvar startX,\n    startY,\n    tap;\n\nfunction getCoord(e, c) {\n    return /touch/.test(e.type) ? (e.originalEvent || e).changedTouches[0]['page' + c] : e['page' + c];\n}\n\nfunction setTap() {\n    tap = true;\n    setTimeout(function () {\n        tap = false;\n    }, 500);\n}\n\nelement.on('touchstart', function (ev) {\n    startX = getCoord(ev, 'X');\n    startY = getCoord(ev, 'Y');\n}).on('touchend', function (ev) {\n    // If movement is less than 20px, execute the handler\n    if (Math.abs(getCoord(ev, 'X') - startX) < 20 && Math.abs(getCoord(ev, 'Y') - startY) < 20) {\n        // Prevent emulated mouse events\n        ev.preventDefault();\n        handler.call(this, ev);\n    }\n    setTap();\n}).on('click', function (ev) {\n    if (!tap) {\n        // If handler was not called on touchend, call it on click;\n        handler.call(this, ev);\n    }\n    ev.preventDefault();\n});\n```\n\n## Touch事件\n>- Point\n>- Tap\n>- Press and Hold\n>- Slide\n>- Swipe\n>- Pinch and Stretch\n>- Turn\n\n```js\nvar touch,\n    action,\n    diffX,\n    diffY,\n    endX,\n    endY,\n    scroll,\n    sort,\n    startX,\n    startY,\n    swipe,\n\nfunction testTouch(e) {\n    if (e.type == 'touchstart') {\n        touch = true;\n    } else if (touch) {\n        touch = false;\n        return false;\n    }\n    return true;\n}\n\nfunction onStart(ev) {\n    if (testTouch(ev) && !action) {\n        action = true;\n\n        startX = getCoord(ev, 'X');\n        startY = getCoord(ev, 'Y');\n        diffX = 0;\n        diffY = 0;\n\n        sortTimer = setTimeout(function () {\n            sort = true;\n        }, 200);\n\n        if (ev.type == 'mousedown') {\n            $(document).on('mousemove', onMove).on('mouseup', onEnd);\n        }\n    }\n}\n\nfunction onMove(ev) {\n    if (action) {\n        endX = getCoord(ev, 'X');\n        endY = getCoord(ev, 'Y');\n        diffX = endX - startX;\n        diffY = endY - startY;\n\n        if (!sort && !swipe && !scroll) {\n            if (Math.abs(diffY) > 10) { // It's a scroll\n                scroll = true;\n                // Android 4.0 will not fire touchend event\n                $(this).trigger('touchend');\n            } else if (Math.abs(diffX) > 7) { // It's a swipe\n                swipe = true;\n            }\n        }\n\n        if (swipe) {\n            ev.preventDefault(); // Kill page scroll\n            // Handle swipe\n            // ...\n        }\n\n        if (sort) {\n            ev.preventDefault(); // Kill page scroll\n            // Handle sort\n            // ....\n        }\n\n        if (Math.abs(diffX) > 5 || Math.abs(diffY) > 5) {\n            clearTimeout(sortTimer);\n        }\n    }\n}\n\nfunction onEnd(ev) {\n    if (action) {\n        action = false;\n\n        if (swipe) {\n            // Handle swipe end\n            // ...\n        } else if (sort) {\n            // Handle sort end\n            // ...\n        } else if (!scroll && Math.abs(diffX) < 5 && Math.abs(diffY) < 5) { // Tap\n            if (ev.type === 'touchend') { // Prevent phantom clicks\n                ev.preventDefault();\n            }\n            // Handle tap\n            // ...\n        }\n\n        swipe = false;\n        sort = false;\n        scroll = false;\n\n        clearTimeout(sortTimer);\n\n        if (ev.type == 'mouseup') {\n            $(document).off('mousemove', onMove).off('mouseup', onEnd);\n        }\n    }\n}\n\nelement\n    .on('touchstart mousedown', onStart)\n    .on('touchmove', onMove)\n    .on('touchend touchcancel', onEnd)\n```","slug":"Touch手势","published":1,"updated":"2022-09-08T14:51:06.967Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krqb0019kp0063hiaix5","content":"<h2 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h2><blockquote>\n<ul>\n<li>带延迟的事件分发机制：鼠标事件</li>\n<li>Mousemove无法追踪</li>\n</ul>\n</blockquote>\n<h2 id=\"点击延迟\"><a href=\"#点击延迟\" class=\"headerlink\" title=\"点击延迟\"></a>点击延迟</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> startX,</span><br><span class=\"line\">    startY,</span><br><span class=\"line\">    tap;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getCoord</span>(<span class=\"params\">e, c</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"regexp\">/touch/</span>.<span class=\"title function_\">test</span>(e.<span class=\"property\">type</span>) ? (e.<span class=\"property\">originalEvent</span> || e).<span class=\"property\">changedTouches</span>[<span class=\"number\">0</span>][<span class=\"string\">&#x27;page&#x27;</span> + c] : e[<span class=\"string\">&#x27;page&#x27;</span> + c];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">setTap</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    tap = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        tap = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;, <span class=\"number\">500</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">element.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;touchstart&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">ev</span>) &#123;</span><br><span class=\"line\">    startX = <span class=\"title function_\">getCoord</span>(ev, <span class=\"string\">&#x27;X&#x27;</span>);</span><br><span class=\"line\">    startY = <span class=\"title function_\">getCoord</span>(ev, <span class=\"string\">&#x27;Y&#x27;</span>);</span><br><span class=\"line\">&#125;).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;touchend&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">ev</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// If movement is less than 20px, execute the handler</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(<span class=\"title function_\">getCoord</span>(ev, <span class=\"string\">&#x27;X&#x27;</span>) - startX) &lt; <span class=\"number\">20</span> &amp;&amp; <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(<span class=\"title function_\">getCoord</span>(ev, <span class=\"string\">&#x27;Y&#x27;</span>) - startY) &lt; <span class=\"number\">20</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Prevent emulated mouse events</span></span><br><span class=\"line\">        ev.<span class=\"title function_\">preventDefault</span>();</span><br><span class=\"line\">        handler.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>, ev);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">setTap</span>();</span><br><span class=\"line\">&#125;).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">ev</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!tap) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// If handler was not called on touchend, call it on click;</span></span><br><span class=\"line\">        handler.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>, ev);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ev.<span class=\"title function_\">preventDefault</span>();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Touch事件\"><a href=\"#Touch事件\" class=\"headerlink\" title=\"Touch事件\"></a>Touch事件</h2><blockquote>\n<ul>\n<li>Point</li>\n<li>Tap</li>\n<li>Press and Hold</li>\n<li>Slide</li>\n<li>Swipe</li>\n<li>Pinch and Stretch</li>\n<li>Turn</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> touch,</span><br><span class=\"line\">    action,</span><br><span class=\"line\">    diffX,</span><br><span class=\"line\">    diffY,</span><br><span class=\"line\">    endX,</span><br><span class=\"line\">    endY,</span><br><span class=\"line\">    scroll,</span><br><span class=\"line\">    sort,</span><br><span class=\"line\">    startX,</span><br><span class=\"line\">    startY,</span><br><span class=\"line\">    swipe,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">testTouch</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (e.<span class=\"property\">type</span> == <span class=\"string\">&#x27;touchstart&#x27;</span>) &#123;</span><br><span class=\"line\">        touch = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (touch) &#123;</span><br><span class=\"line\">        touch = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">onStart</span>(<span class=\"params\">ev</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_\">testTouch</span>(ev) &amp;&amp; !action) &#123;</span><br><span class=\"line\">        action = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        startX = <span class=\"title function_\">getCoord</span>(ev, <span class=\"string\">&#x27;X&#x27;</span>);</span><br><span class=\"line\">        startY = <span class=\"title function_\">getCoord</span>(ev, <span class=\"string\">&#x27;Y&#x27;</span>);</span><br><span class=\"line\">        diffX = <span class=\"number\">0</span>;</span><br><span class=\"line\">        diffY = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        sortTimer = <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            sort = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;, <span class=\"number\">200</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ev.<span class=\"property\">type</span> == <span class=\"string\">&#x27;mousedown&#x27;</span>) &#123;</span><br><span class=\"line\">            $(<span class=\"variable language_\">document</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;mousemove&#x27;</span>, onMove).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;mouseup&#x27;</span>, onEnd);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">onMove</span>(<span class=\"params\">ev</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (action) &#123;</span><br><span class=\"line\">        endX = <span class=\"title function_\">getCoord</span>(ev, <span class=\"string\">&#x27;X&#x27;</span>);</span><br><span class=\"line\">        endY = <span class=\"title function_\">getCoord</span>(ev, <span class=\"string\">&#x27;Y&#x27;</span>);</span><br><span class=\"line\">        diffX = endX - startX;</span><br><span class=\"line\">        diffY = endY - startY;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!sort &amp;&amp; !swipe &amp;&amp; !scroll) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(diffY) &gt; <span class=\"number\">10</span>) &#123; <span class=\"comment\">// It&#x27;s a scroll</span></span><br><span class=\"line\">                scroll = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"comment\">// Android 4.0 will not fire touchend event</span></span><br><span class=\"line\">                $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">trigger</span>(<span class=\"string\">&#x27;touchend&#x27;</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(diffX) &gt; <span class=\"number\">7</span>) &#123; <span class=\"comment\">// It&#x27;s a swipe</span></span><br><span class=\"line\">                swipe = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (swipe) &#123;</span><br><span class=\"line\">            ev.<span class=\"title function_\">preventDefault</span>(); <span class=\"comment\">// Kill page scroll</span></span><br><span class=\"line\">            <span class=\"comment\">// Handle swipe</span></span><br><span class=\"line\">            <span class=\"comment\">// ...</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sort) &#123;</span><br><span class=\"line\">            ev.<span class=\"title function_\">preventDefault</span>(); <span class=\"comment\">// Kill page scroll</span></span><br><span class=\"line\">            <span class=\"comment\">// Handle sort</span></span><br><span class=\"line\">            <span class=\"comment\">// ....</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(diffX) &gt; <span class=\"number\">5</span> || <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(diffY) &gt; <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">clearTimeout</span>(sortTimer);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">onEnd</span>(<span class=\"params\">ev</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (action) &#123;</span><br><span class=\"line\">        action = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (swipe) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// Handle swipe end</span></span><br><span class=\"line\">            <span class=\"comment\">// ...</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (sort) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// Handle sort end</span></span><br><span class=\"line\">            <span class=\"comment\">// ...</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!scroll &amp;&amp; <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(diffX) &lt; <span class=\"number\">5</span> &amp;&amp; <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(diffY) &lt; <span class=\"number\">5</span>) &#123; <span class=\"comment\">// Tap</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ev.<span class=\"property\">type</span> === <span class=\"string\">&#x27;touchend&#x27;</span>) &#123; <span class=\"comment\">// Prevent phantom clicks</span></span><br><span class=\"line\">                ev.<span class=\"title function_\">preventDefault</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// Handle tap</span></span><br><span class=\"line\">            <span class=\"comment\">// ...</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        swipe = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        sort = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        scroll = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">clearTimeout</span>(sortTimer);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ev.<span class=\"property\">type</span> == <span class=\"string\">&#x27;mouseup&#x27;</span>) &#123;</span><br><span class=\"line\">            $(<span class=\"variable language_\">document</span>).<span class=\"title function_\">off</span>(<span class=\"string\">&#x27;mousemove&#x27;</span>, onMove).<span class=\"title function_\">off</span>(<span class=\"string\">&#x27;mouseup&#x27;</span>, onEnd);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">element</span><br><span class=\"line\">    .<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;touchstart mousedown&#x27;</span>, onStart)</span><br><span class=\"line\">    .<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;touchmove&#x27;</span>, onMove)</span><br><span class=\"line\">    .<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;touchend touchcancel&#x27;</span>, onEnd)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h2><blockquote>\n<ul>\n<li>带延迟的事件分发机制：鼠标事件</li>\n<li>Mousemove无法追踪</li>\n</ul>\n</blockquote>\n<h2 id=\"点击延迟\"><a href=\"#点击延迟\" class=\"headerlink\" title=\"点击延迟\"></a>点击延迟</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> startX,</span><br><span class=\"line\">    startY,</span><br><span class=\"line\">    tap;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getCoord</span>(<span class=\"params\">e, c</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"regexp\">/touch/</span>.<span class=\"title function_\">test</span>(e.<span class=\"property\">type</span>) ? (e.<span class=\"property\">originalEvent</span> || e).<span class=\"property\">changedTouches</span>[<span class=\"number\">0</span>][<span class=\"string\">&#x27;page&#x27;</span> + c] : e[<span class=\"string\">&#x27;page&#x27;</span> + c];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">setTap</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    tap = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        tap = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;, <span class=\"number\">500</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">element.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;touchstart&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">ev</span>) &#123;</span><br><span class=\"line\">    startX = <span class=\"title function_\">getCoord</span>(ev, <span class=\"string\">&#x27;X&#x27;</span>);</span><br><span class=\"line\">    startY = <span class=\"title function_\">getCoord</span>(ev, <span class=\"string\">&#x27;Y&#x27;</span>);</span><br><span class=\"line\">&#125;).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;touchend&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">ev</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// If movement is less than 20px, execute the handler</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(<span class=\"title function_\">getCoord</span>(ev, <span class=\"string\">&#x27;X&#x27;</span>) - startX) &lt; <span class=\"number\">20</span> &amp;&amp; <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(<span class=\"title function_\">getCoord</span>(ev, <span class=\"string\">&#x27;Y&#x27;</span>) - startY) &lt; <span class=\"number\">20</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Prevent emulated mouse events</span></span><br><span class=\"line\">        ev.<span class=\"title function_\">preventDefault</span>();</span><br><span class=\"line\">        handler.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>, ev);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">setTap</span>();</span><br><span class=\"line\">&#125;).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">ev</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!tap) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// If handler was not called on touchend, call it on click;</span></span><br><span class=\"line\">        handler.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>, ev);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ev.<span class=\"title function_\">preventDefault</span>();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Touch事件\"><a href=\"#Touch事件\" class=\"headerlink\" title=\"Touch事件\"></a>Touch事件</h2><blockquote>\n<ul>\n<li>Point</li>\n<li>Tap</li>\n<li>Press and Hold</li>\n<li>Slide</li>\n<li>Swipe</li>\n<li>Pinch and Stretch</li>\n<li>Turn</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> touch,</span><br><span class=\"line\">    action,</span><br><span class=\"line\">    diffX,</span><br><span class=\"line\">    diffY,</span><br><span class=\"line\">    endX,</span><br><span class=\"line\">    endY,</span><br><span class=\"line\">    scroll,</span><br><span class=\"line\">    sort,</span><br><span class=\"line\">    startX,</span><br><span class=\"line\">    startY,</span><br><span class=\"line\">    swipe,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">testTouch</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (e.<span class=\"property\">type</span> == <span class=\"string\">&#x27;touchstart&#x27;</span>) &#123;</span><br><span class=\"line\">        touch = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (touch) &#123;</span><br><span class=\"line\">        touch = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">onStart</span>(<span class=\"params\">ev</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_\">testTouch</span>(ev) &amp;&amp; !action) &#123;</span><br><span class=\"line\">        action = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        startX = <span class=\"title function_\">getCoord</span>(ev, <span class=\"string\">&#x27;X&#x27;</span>);</span><br><span class=\"line\">        startY = <span class=\"title function_\">getCoord</span>(ev, <span class=\"string\">&#x27;Y&#x27;</span>);</span><br><span class=\"line\">        diffX = <span class=\"number\">0</span>;</span><br><span class=\"line\">        diffY = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        sortTimer = <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            sort = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;, <span class=\"number\">200</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ev.<span class=\"property\">type</span> == <span class=\"string\">&#x27;mousedown&#x27;</span>) &#123;</span><br><span class=\"line\">            $(<span class=\"variable language_\">document</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;mousemove&#x27;</span>, onMove).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;mouseup&#x27;</span>, onEnd);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">onMove</span>(<span class=\"params\">ev</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (action) &#123;</span><br><span class=\"line\">        endX = <span class=\"title function_\">getCoord</span>(ev, <span class=\"string\">&#x27;X&#x27;</span>);</span><br><span class=\"line\">        endY = <span class=\"title function_\">getCoord</span>(ev, <span class=\"string\">&#x27;Y&#x27;</span>);</span><br><span class=\"line\">        diffX = endX - startX;</span><br><span class=\"line\">        diffY = endY - startY;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!sort &amp;&amp; !swipe &amp;&amp; !scroll) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(diffY) &gt; <span class=\"number\">10</span>) &#123; <span class=\"comment\">// It&#x27;s a scroll</span></span><br><span class=\"line\">                scroll = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"comment\">// Android 4.0 will not fire touchend event</span></span><br><span class=\"line\">                $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">trigger</span>(<span class=\"string\">&#x27;touchend&#x27;</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(diffX) &gt; <span class=\"number\">7</span>) &#123; <span class=\"comment\">// It&#x27;s a swipe</span></span><br><span class=\"line\">                swipe = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (swipe) &#123;</span><br><span class=\"line\">            ev.<span class=\"title function_\">preventDefault</span>(); <span class=\"comment\">// Kill page scroll</span></span><br><span class=\"line\">            <span class=\"comment\">// Handle swipe</span></span><br><span class=\"line\">            <span class=\"comment\">// ...</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sort) &#123;</span><br><span class=\"line\">            ev.<span class=\"title function_\">preventDefault</span>(); <span class=\"comment\">// Kill page scroll</span></span><br><span class=\"line\">            <span class=\"comment\">// Handle sort</span></span><br><span class=\"line\">            <span class=\"comment\">// ....</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(diffX) &gt; <span class=\"number\">5</span> || <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(diffY) &gt; <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">clearTimeout</span>(sortTimer);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">onEnd</span>(<span class=\"params\">ev</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (action) &#123;</span><br><span class=\"line\">        action = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (swipe) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// Handle swipe end</span></span><br><span class=\"line\">            <span class=\"comment\">// ...</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (sort) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// Handle sort end</span></span><br><span class=\"line\">            <span class=\"comment\">// ...</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!scroll &amp;&amp; <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(diffX) &lt; <span class=\"number\">5</span> &amp;&amp; <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(diffY) &lt; <span class=\"number\">5</span>) &#123; <span class=\"comment\">// Tap</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ev.<span class=\"property\">type</span> === <span class=\"string\">&#x27;touchend&#x27;</span>) &#123; <span class=\"comment\">// Prevent phantom clicks</span></span><br><span class=\"line\">                ev.<span class=\"title function_\">preventDefault</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// Handle tap</span></span><br><span class=\"line\">            <span class=\"comment\">// ...</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        swipe = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        sort = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        scroll = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">clearTimeout</span>(sortTimer);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ev.<span class=\"property\">type</span> == <span class=\"string\">&#x27;mouseup&#x27;</span>) &#123;</span><br><span class=\"line\">            $(<span class=\"variable language_\">document</span>).<span class=\"title function_\">off</span>(<span class=\"string\">&#x27;mousemove&#x27;</span>, onMove).<span class=\"title function_\">off</span>(<span class=\"string\">&#x27;mouseup&#x27;</span>, onEnd);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">element</span><br><span class=\"line\">    .<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;touchstart mousedown&#x27;</span>, onStart)</span><br><span class=\"line\">    .<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;touchmove&#x27;</span>, onMove)</span><br><span class=\"line\">    .<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;touchend touchcancel&#x27;</span>, onEnd)</span><br></pre></td></tr></table></figure>"},{"title":"Vue.js","date":"2015-09-09T09:46:23.000Z","_content":"\n# 学习资源\n[中文文档](http://cn.vuejs.org/guide/)\n[vue-cli](https://github.com/vuejs/vue-cli)\n[vue-resource](https://github.com/vuejs/vue-resource)\n[vue-router](https://github.com/vuejs/vue-router)\n[vuex](https://github.com/vuejs/vuex)\n\n# 学习demo\n[vue-template](https://github.com/xieQin/vue-template)\n[vue-todomvc](https://github.com/xieQin/vue-todomvc)\n[quote-demo](https://github.com/xieQin/quote-demo)\n\n# 学习总结\n比Angular更容易上手更简洁的前端框架\n吸收了很多React的思想\n\n是一个用于创建界面的库，也是一个精简的MVVM\n\n专注于MVVM模型的ViewModal层，通过双向数据绑定将View层和Modal层连接起来\n\n实际的DOM封装和输出都抽象成Directives和Filters","source":"_posts/Vue.md","raw":"---\ntitle: Vue.js\ndate: 2015-09-9 17:46:23\ntags: Vue\ncategories: Javascript\n---\n\n# 学习资源\n[中文文档](http://cn.vuejs.org/guide/)\n[vue-cli](https://github.com/vuejs/vue-cli)\n[vue-resource](https://github.com/vuejs/vue-resource)\n[vue-router](https://github.com/vuejs/vue-router)\n[vuex](https://github.com/vuejs/vuex)\n\n# 学习demo\n[vue-template](https://github.com/xieQin/vue-template)\n[vue-todomvc](https://github.com/xieQin/vue-todomvc)\n[quote-demo](https://github.com/xieQin/quote-demo)\n\n# 学习总结\n比Angular更容易上手更简洁的前端框架\n吸收了很多React的思想\n\n是一个用于创建界面的库，也是一个精简的MVVM\n\n专注于MVVM模型的ViewModal层，通过双向数据绑定将View层和Modal层连接起来\n\n实际的DOM封装和输出都抽象成Directives和Filters","slug":"Vue","published":1,"updated":"2022-09-08T14:51:06.967Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krqe001bkp00cjhoc6j5","content":"<h1 id=\"学习资源\"><a href=\"#学习资源\" class=\"headerlink\" title=\"学习资源\"></a>学习资源</h1><p><a href=\"http://cn.vuejs.org/guide/\">中文文档</a><br><a href=\"https://github.com/vuejs/vue-cli\">vue-cli</a><br><a href=\"https://github.com/vuejs/vue-resource\">vue-resource</a><br><a href=\"https://github.com/vuejs/vue-router\">vue-router</a><br><a href=\"https://github.com/vuejs/vuex\">vuex</a></p>\n<h1 id=\"学习demo\"><a href=\"#学习demo\" class=\"headerlink\" title=\"学习demo\"></a>学习demo</h1><p><a href=\"https://github.com/xieQin/vue-template\">vue-template</a><br><a href=\"https://github.com/xieQin/vue-todomvc\">vue-todomvc</a><br><a href=\"https://github.com/xieQin/quote-demo\">quote-demo</a></p>\n<h1 id=\"学习总结\"><a href=\"#学习总结\" class=\"headerlink\" title=\"学习总结\"></a>学习总结</h1><p>比Angular更容易上手更简洁的前端框架<br>吸收了很多React的思想</p>\n<p>是一个用于创建界面的库，也是一个精简的MVVM</p>\n<p>专注于MVVM模型的ViewModal层，通过双向数据绑定将View层和Modal层连接起来</p>\n<p>实际的DOM封装和输出都抽象成Directives和Filters</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"学习资源\"><a href=\"#学习资源\" class=\"headerlink\" title=\"学习资源\"></a>学习资源</h1><p><a href=\"http://cn.vuejs.org/guide/\">中文文档</a><br><a href=\"https://github.com/vuejs/vue-cli\">vue-cli</a><br><a href=\"https://github.com/vuejs/vue-resource\">vue-resource</a><br><a href=\"https://github.com/vuejs/vue-router\">vue-router</a><br><a href=\"https://github.com/vuejs/vuex\">vuex</a></p>\n<h1 id=\"学习demo\"><a href=\"#学习demo\" class=\"headerlink\" title=\"学习demo\"></a>学习demo</h1><p><a href=\"https://github.com/xieQin/vue-template\">vue-template</a><br><a href=\"https://github.com/xieQin/vue-todomvc\">vue-todomvc</a><br><a href=\"https://github.com/xieQin/quote-demo\">quote-demo</a></p>\n<h1 id=\"学习总结\"><a href=\"#学习总结\" class=\"headerlink\" title=\"学习总结\"></a>学习总结</h1><p>比Angular更容易上手更简洁的前端框架<br>吸收了很多React的思想</p>\n<p>是一个用于创建界面的库，也是一个精简的MVVM</p>\n<p>专注于MVVM模型的ViewModal层，通过双向数据绑定将View层和Modal层连接起来</p>\n<p>实际的DOM封装和输出都抽象成Directives和Filters</p>\n"},{"title":"Vue与Vuex","date":"2016-03-25T04:59:18.000Z","_content":"\n[vuex](https://github.com/vuejs/vuex)\n[文档](http://vuex.vuejs.org/en/index.html)\n\n# 总体流程\n![总体流程](https://raw.githubusercontent.com/vuejs/vuex/master/docs/en/vuex.png)\n\n# Demo\n[quote-demo](https://github.com/xieQin/quote-demo)\n\n# 学习总结\nVuex也是Flux的一种实现，是一个针对Vue特化的Flux，主要是为了配合Vue本身的响应式机制\n\n相较于Redux，同样具有单状态树和热重载的api，不过也少了一些在Vue的场景下并不契合的特性，\n如强制的immutability、为了同构而设计得较为繁琐的 API、必须依赖第三方库才能相对高效率地获得状态树的局部状态等\n\nVue + Vuex更为简洁，开发效率比React + Redux更高，更易于理解\n","source":"_posts/Vue与Vuex.md","raw":"---\ntitle: Vue与Vuex\ndate: 2016-03-25 12:59:18\ntags: Vue\ncategories: Javascript\n---\n\n[vuex](https://github.com/vuejs/vuex)\n[文档](http://vuex.vuejs.org/en/index.html)\n\n# 总体流程\n![总体流程](https://raw.githubusercontent.com/vuejs/vuex/master/docs/en/vuex.png)\n\n# Demo\n[quote-demo](https://github.com/xieQin/quote-demo)\n\n# 学习总结\nVuex也是Flux的一种实现，是一个针对Vue特化的Flux，主要是为了配合Vue本身的响应式机制\n\n相较于Redux，同样具有单状态树和热重载的api，不过也少了一些在Vue的场景下并不契合的特性，\n如强制的immutability、为了同构而设计得较为繁琐的 API、必须依赖第三方库才能相对高效率地获得状态树的局部状态等\n\nVue + Vuex更为简洁，开发效率比React + Redux更高，更易于理解\n","slug":"Vue与Vuex","published":1,"updated":"2022-09-08T14:51:06.968Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krqf001fkp00f9zu67kj","content":"<p><a href=\"https://github.com/vuejs/vuex\">vuex</a><br><a href=\"http://vuex.vuejs.org/en/index.html\">文档</a></p>\n<h1 id=\"总体流程\"><a href=\"#总体流程\" class=\"headerlink\" title=\"总体流程\"></a>总体流程</h1><p><img src=\"https://raw.githubusercontent.com/vuejs/vuex/master/docs/en/vuex.png\" alt=\"总体流程\"></p>\n<h1 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h1><p><a href=\"https://github.com/xieQin/quote-demo\">quote-demo</a></p>\n<h1 id=\"学习总结\"><a href=\"#学习总结\" class=\"headerlink\" title=\"学习总结\"></a>学习总结</h1><p>Vuex也是Flux的一种实现，是一个针对Vue特化的Flux，主要是为了配合Vue本身的响应式机制</p>\n<p>相较于Redux，同样具有单状态树和热重载的api，不过也少了一些在Vue的场景下并不契合的特性，<br>如强制的immutability、为了同构而设计得较为繁琐的 API、必须依赖第三方库才能相对高效率地获得状态树的局部状态等</p>\n<p>Vue + Vuex更为简洁，开发效率比React + Redux更高，更易于理解</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://github.com/vuejs/vuex\">vuex</a><br><a href=\"http://vuex.vuejs.org/en/index.html\">文档</a></p>\n<h1 id=\"总体流程\"><a href=\"#总体流程\" class=\"headerlink\" title=\"总体流程\"></a>总体流程</h1><p><img src=\"https://raw.githubusercontent.com/vuejs/vuex/master/docs/en/vuex.png\" alt=\"总体流程\"></p>\n<h1 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h1><p><a href=\"https://github.com/xieQin/quote-demo\">quote-demo</a></p>\n<h1 id=\"学习总结\"><a href=\"#学习总结\" class=\"headerlink\" title=\"学习总结\"></a>学习总结</h1><p>Vuex也是Flux的一种实现，是一个针对Vue特化的Flux，主要是为了配合Vue本身的响应式机制</p>\n<p>相较于Redux，同样具有单状态树和热重载的api，不过也少了一些在Vue的场景下并不契合的特性，<br>如强制的immutability、为了同构而设计得较为繁琐的 API、必须依赖第三方库才能相对高效率地获得状态树的局部状态等</p>\n<p>Vue + Vuex更为简洁，开发效率比React + Redux更高，更易于理解</p>\n"},{"title":"datatables 使用","date":"2014-08-12T10:29:56.000Z","_content":"\n一款jQuery表格插件\n\n[中文网](http://datatables.club/)\n[文档](http://datatables.club/reference/)\n[手册](http://datatables.club/manual/)\n\n搭配ajax使用\n\n```js\n$(document).ready(function() {\n  $('#example').dataTable( {\n    \"ajax\": \"data/objects.txt\",\n    \"columns\": [\n      { \"data\": \"name\" },\n      { \"data\": \"position\" },\n      { \"data\": \"office\" },\n      { \"data\": \"extn\" },\n      { \"data\": \"start_date\" },\n      { \"data\": \"salary\" }\n    ]\n  });\n});\n```\n\n","source":"_posts/datatables-使用.md","raw":"---\ntitle: datatables 使用\ndate: 2014-08-12 18:29:56\ntags: Jquery\ncategories: 插件\n---\n\n一款jQuery表格插件\n\n[中文网](http://datatables.club/)\n[文档](http://datatables.club/reference/)\n[手册](http://datatables.club/manual/)\n\n搭配ajax使用\n\n```js\n$(document).ready(function() {\n  $('#example').dataTable( {\n    \"ajax\": \"data/objects.txt\",\n    \"columns\": [\n      { \"data\": \"name\" },\n      { \"data\": \"position\" },\n      { \"data\": \"office\" },\n      { \"data\": \"extn\" },\n      { \"data\": \"start_date\" },\n      { \"data\": \"salary\" }\n    ]\n  });\n});\n```\n\n","slug":"datatables-使用","published":1,"updated":"2022-09-08T14:51:06.968Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krqf001hkp00a6iua026","content":"<p>一款jQuery表格插件</p>\n<p><a href=\"http://datatables.club/\">中文网</a><br><a href=\"http://datatables.club/reference/\">文档</a><br><a href=\"http://datatables.club/manual/\">手册</a></p>\n<p>搭配ajax使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"variable language_\">document</span>).<span class=\"title function_\">ready</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  $(<span class=\"string\">&#x27;#example&#x27;</span>).<span class=\"title function_\">dataTable</span>( &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;ajax&quot;</span>: <span class=\"string\">&quot;data/objects.txt&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;columns&quot;</span>: [</span><br><span class=\"line\">      &#123; <span class=\"string\">&quot;data&quot;</span>: <span class=\"string\">&quot;name&quot;</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"string\">&quot;data&quot;</span>: <span class=\"string\">&quot;position&quot;</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"string\">&quot;data&quot;</span>: <span class=\"string\">&quot;office&quot;</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"string\">&quot;data&quot;</span>: <span class=\"string\">&quot;extn&quot;</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"string\">&quot;data&quot;</span>: <span class=\"string\">&quot;start_date&quot;</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"string\">&quot;data&quot;</span>: <span class=\"string\">&quot;salary&quot;</span> &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>一款jQuery表格插件</p>\n<p><a href=\"http://datatables.club/\">中文网</a><br><a href=\"http://datatables.club/reference/\">文档</a><br><a href=\"http://datatables.club/manual/\">手册</a></p>\n<p>搭配ajax使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"variable language_\">document</span>).<span class=\"title function_\">ready</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  $(<span class=\"string\">&#x27;#example&#x27;</span>).<span class=\"title function_\">dataTable</span>( &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;ajax&quot;</span>: <span class=\"string\">&quot;data/objects.txt&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;columns&quot;</span>: [</span><br><span class=\"line\">      &#123; <span class=\"string\">&quot;data&quot;</span>: <span class=\"string\">&quot;name&quot;</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"string\">&quot;data&quot;</span>: <span class=\"string\">&quot;position&quot;</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"string\">&quot;data&quot;</span>: <span class=\"string\">&quot;office&quot;</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"string\">&quot;data&quot;</span>: <span class=\"string\">&quot;extn&quot;</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"string\">&quot;data&quot;</span>: <span class=\"string\">&quot;start_date&quot;</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"string\">&quot;data&quot;</span>: <span class=\"string\">&quot;salary&quot;</span> &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n"},{"title":"flexbox伸缩盒布局","date":"2014-11-21T01:37:20.000Z","_content":"Flex元素可以让你的布局根据浏览器的大小变化进行自动伸缩\n原文[guide-to-flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\nFlex元素分为flex containers 和 flex items\n\n## 1. Flex container\n\n![container](https://css-tricks.com/wp-content/uploads/2014/05/flex-container.svg)\n\n#### 1.1 display\n用于定义一个flex container 元素\n```css\n.container {\n  display: flex; /* or inline-flex */\n}\n```\n\n#### 1.2 flex-direction\n用于设置主轴\n![flex-direction](https://css-tricks.com/wp-content/uploads/2014/05/flex-direction1.svg)\n```css\n.container {\n  flex-direction: row | row-reverse | column | column-reverse;\n}\n```\n\n#### 1.3 flex-wrap\n![flex-wrap](https://css-tricks.com/wp-content/uploads/2014/05/flex-wrap.svg)\n```css\n.container{\n  flex-wrap: nowrap | wrap | wrap-reverse;\n}\n```\n\n#### 1.4 flex-flow\n`flex-direction` 与 `flex-wrap` 的合并写法\n默认属性为 `row nowrap`\n\n```css\nflex-flow: <'flex-direction'> || <'flex-wrap'>\n```\n\n#### 1.5 justify-content\n用于flex items在设置主轴上的对齐方式\n![justify-content](https://css-tricks.com/wp-content/uploads/2013/04/justify-content.svg)\n\n```css\n.container {\n  justify-content: flex-start | flex-end | center | space-between | space-around;\n}\n```\n\n#### 1.6 align-items\n用于flex items在设置侧轴(cross-axis)上的对齐方式\n\n![align-items](https://css-tricks.com/wp-content/uploads/2014/05/align-items.svg)\n\n```css\n.container {\n  align-items: flex-start | flex-end | center | baseline | stretch;\n}\n```\n\n#### 1.7 align-content\n\n![align-content](https://css-tricks.com/wp-content/uploads/2013/04/align-content.svg)\n```css\n.container {\n  align-content: flex-start | flex-end | center | space-between | space-around | stretch;\n}\n```\n\n## 2. Flex items\n\n#### 2.1 order\n\n![order](https://css-tricks.com/wp-content/uploads/2013/04/order-2.svg)\n```css\n.item {\n  order: <integer>;\n}\n```\n\n#### 2.2 flex-grow\n\n![flex-grow](https://css-tricks.com/wp-content/uploads/2014/05/flex-grow.svg)\n```css\n.item {\n  flex-grow: <number>; /* default 0 */\n}\n```\n\n#### 2.3 flex-shrink\n\n```css\n.item {\n  flex-shrink: <number>; /* default 1 */\n}\n```\n\n#### 2.4 flex-basis\n\n```css\n.item {\n  flex-basis: <length> | auto; /* default auto */\n}\n```\n\n#### 2.5 flex\n\n`flex-grow`, `flex-shrink` 与 `flex-basis`的合并写法\n```css\n.item {\n  flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\n}\n```\n\n#### 2.6 align-self\n\n![align-self](https://css-tricks.com/wp-content/uploads/2014/05/align-self.svg)\n```css\n.item {\n  align-self: auto | flex-start | flex-end | center | baseline | stretch;\n}\n```","source":"_posts/flexbox伸缩盒布局.md","raw":"---\ntitle: flexbox伸缩盒布局\ndate: 2014-11-21 09:37:20\ntags: CSS\ncategories: 前端\n---\nFlex元素可以让你的布局根据浏览器的大小变化进行自动伸缩\n原文[guide-to-flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\nFlex元素分为flex containers 和 flex items\n\n## 1. Flex container\n\n![container](https://css-tricks.com/wp-content/uploads/2014/05/flex-container.svg)\n\n#### 1.1 display\n用于定义一个flex container 元素\n```css\n.container {\n  display: flex; /* or inline-flex */\n}\n```\n\n#### 1.2 flex-direction\n用于设置主轴\n![flex-direction](https://css-tricks.com/wp-content/uploads/2014/05/flex-direction1.svg)\n```css\n.container {\n  flex-direction: row | row-reverse | column | column-reverse;\n}\n```\n\n#### 1.3 flex-wrap\n![flex-wrap](https://css-tricks.com/wp-content/uploads/2014/05/flex-wrap.svg)\n```css\n.container{\n  flex-wrap: nowrap | wrap | wrap-reverse;\n}\n```\n\n#### 1.4 flex-flow\n`flex-direction` 与 `flex-wrap` 的合并写法\n默认属性为 `row nowrap`\n\n```css\nflex-flow: <'flex-direction'> || <'flex-wrap'>\n```\n\n#### 1.5 justify-content\n用于flex items在设置主轴上的对齐方式\n![justify-content](https://css-tricks.com/wp-content/uploads/2013/04/justify-content.svg)\n\n```css\n.container {\n  justify-content: flex-start | flex-end | center | space-between | space-around;\n}\n```\n\n#### 1.6 align-items\n用于flex items在设置侧轴(cross-axis)上的对齐方式\n\n![align-items](https://css-tricks.com/wp-content/uploads/2014/05/align-items.svg)\n\n```css\n.container {\n  align-items: flex-start | flex-end | center | baseline | stretch;\n}\n```\n\n#### 1.7 align-content\n\n![align-content](https://css-tricks.com/wp-content/uploads/2013/04/align-content.svg)\n```css\n.container {\n  align-content: flex-start | flex-end | center | space-between | space-around | stretch;\n}\n```\n\n## 2. Flex items\n\n#### 2.1 order\n\n![order](https://css-tricks.com/wp-content/uploads/2013/04/order-2.svg)\n```css\n.item {\n  order: <integer>;\n}\n```\n\n#### 2.2 flex-grow\n\n![flex-grow](https://css-tricks.com/wp-content/uploads/2014/05/flex-grow.svg)\n```css\n.item {\n  flex-grow: <number>; /* default 0 */\n}\n```\n\n#### 2.3 flex-shrink\n\n```css\n.item {\n  flex-shrink: <number>; /* default 1 */\n}\n```\n\n#### 2.4 flex-basis\n\n```css\n.item {\n  flex-basis: <length> | auto; /* default auto */\n}\n```\n\n#### 2.5 flex\n\n`flex-grow`, `flex-shrink` 与 `flex-basis`的合并写法\n```css\n.item {\n  flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\n}\n```\n\n#### 2.6 align-self\n\n![align-self](https://css-tricks.com/wp-content/uploads/2014/05/align-self.svg)\n```css\n.item {\n  align-self: auto | flex-start | flex-end | center | baseline | stretch;\n}\n```","slug":"flexbox伸缩盒布局","published":1,"updated":"2022-09-08T14:51:06.969Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krqg001mkp00hx3c9813","content":"<p>Flex元素可以让你的布局根据浏览器的大小变化进行自动伸缩<br>原文<a href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\">guide-to-flexbox</a></p>\n<p>Flex元素分为flex containers 和 flex items</p>\n<h2 id=\"1-Flex-container\"><a href=\"#1-Flex-container\" class=\"headerlink\" title=\"1. Flex container\"></a>1. Flex container</h2><p><img src=\"https://css-tricks.com/wp-content/uploads/2014/05/flex-container.svg\" alt=\"container\"></p>\n<h4 id=\"1-1-display\"><a href=\"#1-1-display\" class=\"headerlink\" title=\"1.1 display\"></a>1.1 display</h4><p>用于定义一个flex container 元素</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex; <span class=\"comment\">/* or inline-flex */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-2-flex-direction\"><a href=\"#1-2-flex-direction\" class=\"headerlink\" title=\"1.2 flex-direction\"></a>1.2 flex-direction</h4><p>用于设置主轴<br><img src=\"https://css-tricks.com/wp-content/uploads/2014/05/flex-direction1.svg\" alt=\"flex-direction\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-direction</span>: row | row-reverse | column | column-reverse;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-flex-wrap\"><a href=\"#1-3-flex-wrap\" class=\"headerlink\" title=\"1.3 flex-wrap\"></a>1.3 flex-wrap</h4><p><img src=\"https://css-tricks.com/wp-content/uploads/2014/05/flex-wrap.svg\" alt=\"flex-wrap\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-wrap</span>: nowrap | wrap | wrap-reverse;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-4-flex-flow\"><a href=\"#1-4-flex-flow\" class=\"headerlink\" title=\"1.4 flex-flow\"></a>1.4 flex-flow</h4><p><code>flex-direction</code> 与 <code>flex-wrap</code> 的合并写法<br>默认属性为 <code>row nowrap</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">flex-flow</span>: &lt;<span class=\"string\">&#x27;flex-direction&#x27;</span>&gt; || &lt;<span class=\"string\">&#x27;flex-wrap&#x27;</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-5-justify-content\"><a href=\"#1-5-justify-content\" class=\"headerlink\" title=\"1.5 justify-content\"></a>1.5 justify-content</h4><p>用于flex items在设置主轴上的对齐方式<br><img src=\"https://css-tricks.com/wp-content/uploads/2013/04/justify-content.svg\" alt=\"justify-content\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: flex-start | flex-end | center | space-between | space-around;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-6-align-items\"><a href=\"#1-6-align-items\" class=\"headerlink\" title=\"1.6 align-items\"></a>1.6 align-items</h4><p>用于flex items在设置侧轴(cross-axis)上的对齐方式</p>\n<p><img src=\"https://css-tricks.com/wp-content/uploads/2014/05/align-items.svg\" alt=\"align-items\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: flex-start | flex-end | center | baseline | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-7-align-content\"><a href=\"#1-7-align-content\" class=\"headerlink\" title=\"1.7 align-content\"></a>1.7 align-content</h4><p><img src=\"https://css-tricks.com/wp-content/uploads/2013/04/align-content.svg\" alt=\"align-content\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">align-content</span>: flex-start | flex-end | center | space-between | space-around | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-Flex-items\"><a href=\"#2-Flex-items\" class=\"headerlink\" title=\"2. Flex items\"></a>2. Flex items</h2><h4 id=\"2-1-order\"><a href=\"#2-1-order\" class=\"headerlink\" title=\"2.1 order\"></a>2.1 order</h4><p><img src=\"https://css-tricks.com/wp-content/uploads/2013/04/order-2.svg\" alt=\"order\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">order</span>: &lt;integer&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-flex-grow\"><a href=\"#2-2-flex-grow\" class=\"headerlink\" title=\"2.2 flex-grow\"></a>2.2 flex-grow</h4><p><img src=\"https://css-tricks.com/wp-content/uploads/2014/05/flex-grow.svg\" alt=\"flex-grow\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-grow</span>: &lt;number&gt;; <span class=\"comment\">/* default 0 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-3-flex-shrink\"><a href=\"#2-3-flex-shrink\" class=\"headerlink\" title=\"2.3 flex-shrink\"></a>2.3 flex-shrink</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-shrink</span>: &lt;number&gt;; <span class=\"comment\">/* default 1 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-4-flex-basis\"><a href=\"#2-4-flex-basis\" class=\"headerlink\" title=\"2.4 flex-basis\"></a>2.4 flex-basis</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-basis</span>: &lt;length&gt; | auto; <span class=\"comment\">/* default auto */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-5-flex\"><a href=\"#2-5-flex\" class=\"headerlink\" title=\"2.5 flex\"></a>2.5 flex</h4><p><code>flex-grow</code>, <code>flex-shrink</code> 与 <code>flex-basis</code>的合并写法</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: none | [ &lt;<span class=\"string\">&#x27;flex-grow&#x27;</span>&gt; &lt;<span class=\"string\">&#x27;flex-shrink&#x27;</span>&gt;? || &lt;<span class=\"string\">&#x27;flex-basis&#x27;</span>&gt; ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-6-align-self\"><a href=\"#2-6-align-self\" class=\"headerlink\" title=\"2.6 align-self\"></a>2.6 align-self</h4><p><img src=\"https://css-tricks.com/wp-content/uploads/2014/05/align-self.svg\" alt=\"align-self\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">align-self</span>: auto | flex-start | flex-end | center | baseline | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>Flex元素可以让你的布局根据浏览器的大小变化进行自动伸缩<br>原文<a href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\">guide-to-flexbox</a></p>\n<p>Flex元素分为flex containers 和 flex items</p>\n<h2 id=\"1-Flex-container\"><a href=\"#1-Flex-container\" class=\"headerlink\" title=\"1. Flex container\"></a>1. Flex container</h2><p><img src=\"https://css-tricks.com/wp-content/uploads/2014/05/flex-container.svg\" alt=\"container\"></p>\n<h4 id=\"1-1-display\"><a href=\"#1-1-display\" class=\"headerlink\" title=\"1.1 display\"></a>1.1 display</h4><p>用于定义一个flex container 元素</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex; <span class=\"comment\">/* or inline-flex */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-2-flex-direction\"><a href=\"#1-2-flex-direction\" class=\"headerlink\" title=\"1.2 flex-direction\"></a>1.2 flex-direction</h4><p>用于设置主轴<br><img src=\"https://css-tricks.com/wp-content/uploads/2014/05/flex-direction1.svg\" alt=\"flex-direction\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-direction</span>: row | row-reverse | column | column-reverse;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-flex-wrap\"><a href=\"#1-3-flex-wrap\" class=\"headerlink\" title=\"1.3 flex-wrap\"></a>1.3 flex-wrap</h4><p><img src=\"https://css-tricks.com/wp-content/uploads/2014/05/flex-wrap.svg\" alt=\"flex-wrap\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-wrap</span>: nowrap | wrap | wrap-reverse;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-4-flex-flow\"><a href=\"#1-4-flex-flow\" class=\"headerlink\" title=\"1.4 flex-flow\"></a>1.4 flex-flow</h4><p><code>flex-direction</code> 与 <code>flex-wrap</code> 的合并写法<br>默认属性为 <code>row nowrap</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">flex-flow</span>: &lt;<span class=\"string\">&#x27;flex-direction&#x27;</span>&gt; || &lt;<span class=\"string\">&#x27;flex-wrap&#x27;</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-5-justify-content\"><a href=\"#1-5-justify-content\" class=\"headerlink\" title=\"1.5 justify-content\"></a>1.5 justify-content</h4><p>用于flex items在设置主轴上的对齐方式<br><img src=\"https://css-tricks.com/wp-content/uploads/2013/04/justify-content.svg\" alt=\"justify-content\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: flex-start | flex-end | center | space-between | space-around;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-6-align-items\"><a href=\"#1-6-align-items\" class=\"headerlink\" title=\"1.6 align-items\"></a>1.6 align-items</h4><p>用于flex items在设置侧轴(cross-axis)上的对齐方式</p>\n<p><img src=\"https://css-tricks.com/wp-content/uploads/2014/05/align-items.svg\" alt=\"align-items\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: flex-start | flex-end | center | baseline | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-7-align-content\"><a href=\"#1-7-align-content\" class=\"headerlink\" title=\"1.7 align-content\"></a>1.7 align-content</h4><p><img src=\"https://css-tricks.com/wp-content/uploads/2013/04/align-content.svg\" alt=\"align-content\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">align-content</span>: flex-start | flex-end | center | space-between | space-around | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-Flex-items\"><a href=\"#2-Flex-items\" class=\"headerlink\" title=\"2. Flex items\"></a>2. Flex items</h2><h4 id=\"2-1-order\"><a href=\"#2-1-order\" class=\"headerlink\" title=\"2.1 order\"></a>2.1 order</h4><p><img src=\"https://css-tricks.com/wp-content/uploads/2013/04/order-2.svg\" alt=\"order\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">order</span>: &lt;integer&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-flex-grow\"><a href=\"#2-2-flex-grow\" class=\"headerlink\" title=\"2.2 flex-grow\"></a>2.2 flex-grow</h4><p><img src=\"https://css-tricks.com/wp-content/uploads/2014/05/flex-grow.svg\" alt=\"flex-grow\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-grow</span>: &lt;number&gt;; <span class=\"comment\">/* default 0 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-3-flex-shrink\"><a href=\"#2-3-flex-shrink\" class=\"headerlink\" title=\"2.3 flex-shrink\"></a>2.3 flex-shrink</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-shrink</span>: &lt;number&gt;; <span class=\"comment\">/* default 1 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-4-flex-basis\"><a href=\"#2-4-flex-basis\" class=\"headerlink\" title=\"2.4 flex-basis\"></a>2.4 flex-basis</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-basis</span>: &lt;length&gt; | auto; <span class=\"comment\">/* default auto */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-5-flex\"><a href=\"#2-5-flex\" class=\"headerlink\" title=\"2.5 flex\"></a>2.5 flex</h4><p><code>flex-grow</code>, <code>flex-shrink</code> 与 <code>flex-basis</code>的合并写法</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: none | [ &lt;<span class=\"string\">&#x27;flex-grow&#x27;</span>&gt; &lt;<span class=\"string\">&#x27;flex-shrink&#x27;</span>&gt;? || &lt;<span class=\"string\">&#x27;flex-basis&#x27;</span>&gt; ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-6-align-self\"><a href=\"#2-6-align-self\" class=\"headerlink\" title=\"2.6 align-self\"></a>2.6 align-self</h4><p><img src=\"https://css-tricks.com/wp-content/uploads/2014/05/align-self.svg\" alt=\"align-self\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">align-self</span>: auto | flex-start | flex-end | center | baseline | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"express与koa","date":"2016-02-26T11:03:44.000Z","_content":"\n# Express\n[Express 文档](http://www.expressjs.com.cn/starter/installing.html)\nExpress主要解决了 请求路由 和 视图模板 的问题\n没有强制的规范约束，因此各个示例中 Config，Controller，View的维护、管理、技巧真是各式各样\n\n# Koa总体流程图\n\n![Koa总体流程图](http://berwin.github.io/ppts/koa/img/koa-flow.jpg)\n[koa](https://github.com/koajs/koa)\n[koa-guide](https://github.com/guo-yu/koa-guide)","source":"_posts/express与koa.md","raw":"---\ntitle: express与koa\ndate: 2016-02-26 19:03:44\ntags: Nodejs\ncategories: Nodejs\n---\n\n# Express\n[Express 文档](http://www.expressjs.com.cn/starter/installing.html)\nExpress主要解决了 请求路由 和 视图模板 的问题\n没有强制的规范约束，因此各个示例中 Config，Controller，View的维护、管理、技巧真是各式各样\n\n# Koa总体流程图\n\n![Koa总体流程图](http://berwin.github.io/ppts/koa/img/koa-flow.jpg)\n[koa](https://github.com/koajs/koa)\n[koa-guide](https://github.com/guo-yu/koa-guide)","slug":"express与koa","published":1,"updated":"2022-09-08T14:51:06.969Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krqh001pkp004vt3h6qx","content":"<h1 id=\"Express\"><a href=\"#Express\" class=\"headerlink\" title=\"Express\"></a>Express</h1><p><a href=\"http://www.expressjs.com.cn/starter/installing.html\">Express 文档</a><br>Express主要解决了 请求路由 和 视图模板 的问题<br>没有强制的规范约束，因此各个示例中 Config，Controller，View的维护、管理、技巧真是各式各样</p>\n<h1 id=\"Koa总体流程图\"><a href=\"#Koa总体流程图\" class=\"headerlink\" title=\"Koa总体流程图\"></a>Koa总体流程图</h1><p><img src=\"http://berwin.github.io/ppts/koa/img/koa-flow.jpg\" alt=\"Koa总体流程图\"><br><a href=\"https://github.com/koajs/koa\">koa</a><br><a href=\"https://github.com/guo-yu/koa-guide\">koa-guide</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Express\"><a href=\"#Express\" class=\"headerlink\" title=\"Express\"></a>Express</h1><p><a href=\"http://www.expressjs.com.cn/starter/installing.html\">Express 文档</a><br>Express主要解决了 请求路由 和 视图模板 的问题<br>没有强制的规范约束，因此各个示例中 Config，Controller，View的维护、管理、技巧真是各式各样</p>\n<h1 id=\"Koa总体流程图\"><a href=\"#Koa总体流程图\" class=\"headerlink\" title=\"Koa总体流程图\"></a>Koa总体流程图</h1><p><img src=\"http://berwin.github.io/ppts/koa/img/koa-flow.jpg\" alt=\"Koa总体流程图\"><br><a href=\"https://github.com/koajs/koa\">koa</a><br><a href=\"https://github.com/guo-yu/koa-guide\">koa-guide</a></p>\n"},{"title":"react-router使用指南","date":"2016-05-20T09:00:39.000Z","_content":"\nreact-router 作为react的路由插件，整体使用上我觉得比vue-router更为方便（除了变来变去的api），\n特别是路由嵌套简洁很多。\n原文见[react-router-tutorial](https://github.com/reactjs/react-router-tutorial)\n\n## 一、安装\n\n```bash\nnpm install react-router --save\n```\n\n## 二、显示路由\n在入口文件处\n- 引入`Router` 、`Route`、`hashHistory`\n\n- render `Router`\n\n```js\nimport { Router, Route, hashHistory } from 'react-router'\nimport About from './modules/About'\nimport Repos from './modules/Repos'\n\nrender((\n  <Router history={hashHistory}>\n    <Route path=\"/\" component={App}/>\n    <Route path=\"/repos\" component={Repos}/>\n    <Route path=\"/about\" component={About}/>\n  </Router>\n), document.getElementById('app'))\n```\n\n使用history api 管理路由时：\n```js\n// index.js\n// ...\nimport { Router, Route, browserHistory } from 'react-router'\n\nrender((\n  <Router history={browserHistory}>\n    {/* ... */}\n  </Router>\n), document.getElementById('app'))\n```\n\n## 三、嵌套路由\n嵌套路由的实现相比vue-router中通过声明子路由的方法简洁直观了很多\n路由的嵌套与对应组件的嵌套之间是存在对应关系，通过这种对应关系来实现嵌套路由\n```\n<App>       {/*  /          */}\n  <Repos>   {/*  /repos     */}\n    <Repo/> {/*  /repos/123 */}\n  </Repos>\n</App>\n```\n\n```js\n// index.js\n// ...\nrender((\n  <Router history={hashHistory}>\n    <Route path=\"/\" component={App}>\n      {/* make them children of `App` */}\n      <Route path=\"/repos\" component={Repos}/>\n      <Route path=\"/about\" component={About}/>\n    </Route>\n  </Router>\n), document.getElementById('app'))\n\n```\n\n```js\n// modules/App.js\n// ...\n  render() {\n    return (\n      <div>\n        <h1>Ghettohub Issues</h1>\n        <ul role=\"nav\">\n          <li><Link to=\"/about\">About</Link></li>\n          <li><Link to=\"/repos\">Repos</Link></li>\n        </ul>\n\n        {/* add this */}\n        {this.props.children}\n\n      </div>\n    )\n  }\n// ...\n```\n\n## 四、导航样式\n访问各路由时显示对应的激活样式\n\n#### 1. Active Styles\n```js\n// modules/App.js\n<li><Link to=\"/about\" activeStyle={{ color: 'red' }}>About</Link></li>\n<li><Link to=\"/repos\" activeStyle={{ color: 'red' }}>Repos</Link></li>\n```\n\n#### 2. Active Class Name\n```js\n// modules/App.js\n<li><Link to=\"/about\" activeClassName=\"active\">About</Link></li>\n<li><Link to=\"/repos\" activeClassName=\"active\">Repos</Link></li>\n```\n```css\n.active {\n  color: green;\n}\n```\n\n#### 3. 封装成NavLink组件\n```js\nimport React from 'react'\nimport { Link } from 'react-router'\n\nexport default React.createClass({\n  render() {\n    return <Link {...this.props} activeClassName=\"active\"/>\n  }\n})\n```\n\n```js\n// modules/App.js\nimport NavLink from './NavLink'\n\n// ...\n\n<li><NavLink to=\"/about\">About</NavLink></li>\n<li><NavLink to=\"/repos\">Repos</NavLink></li>\n```\n\n#### 4. IndexLink\n```js\n// App.js\nimport { IndexLink } from 'react-router'\n\n// ...\n<li><IndexLink to=\"/\" activeClassName=\"active\">Home</IndexLink></li>\n```\n\n#### 5. onlyActiveOnIndex\n```js\n<li><Link to=\"/\" activeClassName=\"active\" onlyActiveOnIndex={true}>Home</Link></li>\n```\n\n```js\n<li><NavLink to=\"/\" onlyActiveOnIndex={true}>Home</NavLink></li>\n```\n\n## 五、参数传递\n用户获取及传递url中附带的参数\n有`/repos/:userName/:repoName`这样的路由\n\n```js\n// modules/Repo.js\nimport React from 'react'\n\nexport default React.createClass({\n  render() {\n    return (\n      <div>\n        <h2>{this.props.params.repoName}</h2>\n      </div>\n    )\n  }\n})\n```\n\n```js\n// ...\n// import Repo\nimport Repo from './modules/Repo'\n\nrender((\n  <Router history={hashHistory}>\n    <Route path=\"/\" component={App}>\n      <Route path=\"/repos\" component={Repos}/>\n      {/* 添加新路由 */}\n      <Route path=\"/repos/:userName/:repoName\" component={Repo}/>\n      <Route path=\"/about\" component={About}/>\n    </Route>\n  </Router>\n), document.getElementById('app'))\n```\n\n```js\n// Repos.js\nimport { Link } from 'react-router'\n// ...\nexport default React.createClass({\n  render() {\n    return (\n      <div>\n        <h2>Repos</h2>\n\n        {/* 添加跳转链接 */}\n        <ul>\n          <li><Link to=\"/repos/reactjs/react-router\">React Router</Link></li>\n          <li><Link to=\"/repos/facebook/react\">React</Link></li>\n        </ul>\n\n      </div>\n    )\n  }\n})\n```\n\n## 六、设置初始路由\n```js\n// index.js\n// 从'react-router' 中添加新的引用： `IndexRoute`\nimport { Router, Route, hashHistory, IndexRoute } from 'react-router'\n// 添加 Home 组件\nimport Home from './modules/Home'\n\n// ...\n\nrender((\n  <Router history={hashHistory}>\n    <Route path=\"/\" component={App}>\n\n      {/* 将Home组件作为 `/`的子路由添加 */}\n      <IndexRoute component={Home}/>\n\n      <Route path=\"/repos\" component={Repos}>\n        <Route path=\"/repos/:userName/:repoName\" component={Repo}/>\n      </Route>\n      <Route path=\"/about\" component={About}/>\n    </Route>\n  </Router>\n), document.getElementById('app'))\n```\n\n## 七、触发路由\n使用`browserHistory`\n```js\n// modules/Repos.js\nimport { browserHistory } from 'react-router'\n\n// ...\n  handleSubmit(event) {\n    // ...\n    const path = `/repos/${userName}/${repo}`\n    browserHistory.push(path)\n  },\n// ...\n```\n\n使用`Router`\n```js\n// ask for `router` from context\n  contextTypes: {\n    router: React.PropTypes.object\n  },\n\n  // ...\n\n  handleSubmit(event) {\n    // ...\n    this.context.router.push(path)\n  },\n```","source":"_posts/react-router使用指南.md","raw":"---\ntitle: react-router使用指南\ndate: 2016-05-20 17:00:39\ntags: React\ncategories: React\n---\n\nreact-router 作为react的路由插件，整体使用上我觉得比vue-router更为方便（除了变来变去的api），\n特别是路由嵌套简洁很多。\n原文见[react-router-tutorial](https://github.com/reactjs/react-router-tutorial)\n\n## 一、安装\n\n```bash\nnpm install react-router --save\n```\n\n## 二、显示路由\n在入口文件处\n- 引入`Router` 、`Route`、`hashHistory`\n\n- render `Router`\n\n```js\nimport { Router, Route, hashHistory } from 'react-router'\nimport About from './modules/About'\nimport Repos from './modules/Repos'\n\nrender((\n  <Router history={hashHistory}>\n    <Route path=\"/\" component={App}/>\n    <Route path=\"/repos\" component={Repos}/>\n    <Route path=\"/about\" component={About}/>\n  </Router>\n), document.getElementById('app'))\n```\n\n使用history api 管理路由时：\n```js\n// index.js\n// ...\nimport { Router, Route, browserHistory } from 'react-router'\n\nrender((\n  <Router history={browserHistory}>\n    {/* ... */}\n  </Router>\n), document.getElementById('app'))\n```\n\n## 三、嵌套路由\n嵌套路由的实现相比vue-router中通过声明子路由的方法简洁直观了很多\n路由的嵌套与对应组件的嵌套之间是存在对应关系，通过这种对应关系来实现嵌套路由\n```\n<App>       {/*  /          */}\n  <Repos>   {/*  /repos     */}\n    <Repo/> {/*  /repos/123 */}\n  </Repos>\n</App>\n```\n\n```js\n// index.js\n// ...\nrender((\n  <Router history={hashHistory}>\n    <Route path=\"/\" component={App}>\n      {/* make them children of `App` */}\n      <Route path=\"/repos\" component={Repos}/>\n      <Route path=\"/about\" component={About}/>\n    </Route>\n  </Router>\n), document.getElementById('app'))\n\n```\n\n```js\n// modules/App.js\n// ...\n  render() {\n    return (\n      <div>\n        <h1>Ghettohub Issues</h1>\n        <ul role=\"nav\">\n          <li><Link to=\"/about\">About</Link></li>\n          <li><Link to=\"/repos\">Repos</Link></li>\n        </ul>\n\n        {/* add this */}\n        {this.props.children}\n\n      </div>\n    )\n  }\n// ...\n```\n\n## 四、导航样式\n访问各路由时显示对应的激活样式\n\n#### 1. Active Styles\n```js\n// modules/App.js\n<li><Link to=\"/about\" activeStyle={{ color: 'red' }}>About</Link></li>\n<li><Link to=\"/repos\" activeStyle={{ color: 'red' }}>Repos</Link></li>\n```\n\n#### 2. Active Class Name\n```js\n// modules/App.js\n<li><Link to=\"/about\" activeClassName=\"active\">About</Link></li>\n<li><Link to=\"/repos\" activeClassName=\"active\">Repos</Link></li>\n```\n```css\n.active {\n  color: green;\n}\n```\n\n#### 3. 封装成NavLink组件\n```js\nimport React from 'react'\nimport { Link } from 'react-router'\n\nexport default React.createClass({\n  render() {\n    return <Link {...this.props} activeClassName=\"active\"/>\n  }\n})\n```\n\n```js\n// modules/App.js\nimport NavLink from './NavLink'\n\n// ...\n\n<li><NavLink to=\"/about\">About</NavLink></li>\n<li><NavLink to=\"/repos\">Repos</NavLink></li>\n```\n\n#### 4. IndexLink\n```js\n// App.js\nimport { IndexLink } from 'react-router'\n\n// ...\n<li><IndexLink to=\"/\" activeClassName=\"active\">Home</IndexLink></li>\n```\n\n#### 5. onlyActiveOnIndex\n```js\n<li><Link to=\"/\" activeClassName=\"active\" onlyActiveOnIndex={true}>Home</Link></li>\n```\n\n```js\n<li><NavLink to=\"/\" onlyActiveOnIndex={true}>Home</NavLink></li>\n```\n\n## 五、参数传递\n用户获取及传递url中附带的参数\n有`/repos/:userName/:repoName`这样的路由\n\n```js\n// modules/Repo.js\nimport React from 'react'\n\nexport default React.createClass({\n  render() {\n    return (\n      <div>\n        <h2>{this.props.params.repoName}</h2>\n      </div>\n    )\n  }\n})\n```\n\n```js\n// ...\n// import Repo\nimport Repo from './modules/Repo'\n\nrender((\n  <Router history={hashHistory}>\n    <Route path=\"/\" component={App}>\n      <Route path=\"/repos\" component={Repos}/>\n      {/* 添加新路由 */}\n      <Route path=\"/repos/:userName/:repoName\" component={Repo}/>\n      <Route path=\"/about\" component={About}/>\n    </Route>\n  </Router>\n), document.getElementById('app'))\n```\n\n```js\n// Repos.js\nimport { Link } from 'react-router'\n// ...\nexport default React.createClass({\n  render() {\n    return (\n      <div>\n        <h2>Repos</h2>\n\n        {/* 添加跳转链接 */}\n        <ul>\n          <li><Link to=\"/repos/reactjs/react-router\">React Router</Link></li>\n          <li><Link to=\"/repos/facebook/react\">React</Link></li>\n        </ul>\n\n      </div>\n    )\n  }\n})\n```\n\n## 六、设置初始路由\n```js\n// index.js\n// 从'react-router' 中添加新的引用： `IndexRoute`\nimport { Router, Route, hashHistory, IndexRoute } from 'react-router'\n// 添加 Home 组件\nimport Home from './modules/Home'\n\n// ...\n\nrender((\n  <Router history={hashHistory}>\n    <Route path=\"/\" component={App}>\n\n      {/* 将Home组件作为 `/`的子路由添加 */}\n      <IndexRoute component={Home}/>\n\n      <Route path=\"/repos\" component={Repos}>\n        <Route path=\"/repos/:userName/:repoName\" component={Repo}/>\n      </Route>\n      <Route path=\"/about\" component={About}/>\n    </Route>\n  </Router>\n), document.getElementById('app'))\n```\n\n## 七、触发路由\n使用`browserHistory`\n```js\n// modules/Repos.js\nimport { browserHistory } from 'react-router'\n\n// ...\n  handleSubmit(event) {\n    // ...\n    const path = `/repos/${userName}/${repo}`\n    browserHistory.push(path)\n  },\n// ...\n```\n\n使用`Router`\n```js\n// ask for `router` from context\n  contextTypes: {\n    router: React.PropTypes.object\n  },\n\n  // ...\n\n  handleSubmit(event) {\n    // ...\n    this.context.router.push(path)\n  },\n```","slug":"react-router使用指南","published":1,"updated":"2022-09-08T14:51:06.969Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krqi001ukp00dy5i9rmu","content":"<p>react-router 作为react的路由插件，整体使用上我觉得比vue-router更为方便（除了变来变去的api），<br>特别是路由嵌套简洁很多。<br>原文见<a href=\"https://github.com/reactjs/react-router-tutorial\">react-router-tutorial</a></p>\n<h2 id=\"一、安装\"><a href=\"#一、安装\" class=\"headerlink\" title=\"一、安装\"></a>一、安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install react-router --save</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"二、显示路由\"><a href=\"#二、显示路由\" class=\"headerlink\" title=\"二、显示路由\"></a>二、显示路由</h2><p>在入口文件处</p>\n<ul>\n<li><p>引入<code>Router</code> 、<code>Route</code>、<code>hashHistory</code></p>\n</li>\n<li><p>render <code>Router</code></p>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Router</span>, <span class=\"title class_\">Route</span>, hashHistory &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">About</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./modules/About&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Repos</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./modules/Repos&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">render</span>((</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Router</span> <span class=\"attr\">history</span>=<span class=\"string\">&#123;hashHistory&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;App&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/repos&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;Repos&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/about&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;About&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">Router</span>&gt;</span></span></span><br><span class=\"line\">), <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;app&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<p>使用history api 管理路由时：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// index.js</span></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Router</span>, <span class=\"title class_\">Route</span>, browserHistory &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">render</span>((</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Router</span> <span class=\"attr\">history</span>=<span class=\"string\">&#123;browserHistory&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    &#123;/* ... */&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">Router</span>&gt;</span></span></span><br><span class=\"line\">), <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;app&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三、嵌套路由\"><a href=\"#三、嵌套路由\" class=\"headerlink\" title=\"三、嵌套路由\"></a>三、嵌套路由</h2><p>嵌套路由的实现相比vue-router中通过声明子路由的方法简洁直观了很多<br>路由的嵌套与对应组件的嵌套之间是存在对应关系，通过这种对应关系来实现嵌套路由</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;App&gt;       &#123;/*  /          */&#125;</span><br><span class=\"line\">  &lt;Repos&gt;   &#123;/*  /repos     */&#125;</span><br><span class=\"line\">    &lt;Repo/&gt; &#123;/*  /repos/123 */&#125;</span><br><span class=\"line\">  &lt;/Repos&gt;</span><br><span class=\"line\">&lt;/App&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// index.js</span></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"><span class=\"title function_\">render</span>((</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Router</span> <span class=\"attr\">history</span>=<span class=\"string\">&#123;hashHistory&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;App&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;/* make them children of `App` */&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/repos&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;Repos&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/about&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;About&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Route</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">Router</span>&gt;</span></span></span><br><span class=\"line\">), <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;app&#x27;</span>))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// modules/App.js</span></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Ghettohub Issues<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;nav&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/about&quot;</span>&gt;</span>About<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/repos&quot;</span>&gt;</span>Repos<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">        &#123;/* add this */&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">        &#123;this.props.children&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"四、导航样式\"><a href=\"#四、导航样式\" class=\"headerlink\" title=\"四、导航样式\"></a>四、导航样式</h2><p>访问各路由时显示对应的激活样式</p>\n<h4 id=\"1-Active-Styles\"><a href=\"#1-Active-Styles\" class=\"headerlink\" title=\"1. Active Styles\"></a>1. Active Styles</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// modules/App.js</span></span><br><span class=\"line\">&lt;li&gt;<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/about&quot;</span> <span class=\"attr\">activeStyle</span>=<span class=\"string\">&#123;&#123;</span> <span class=\"attr\">color:</span> &#x27;<span class=\"attr\">red</span>&#x27; &#125;&#125;&gt;</span>About<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span></span>&lt;/li&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/repos&quot;</span> <span class=\"attr\">activeStyle</span>=<span class=\"string\">&#123;&#123;</span> <span class=\"attr\">color:</span> &#x27;<span class=\"attr\">red</span>&#x27; &#125;&#125;&gt;</span>Repos<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-Active-Class-Name\"><a href=\"#2-Active-Class-Name\" class=\"headerlink\" title=\"2. Active Class Name\"></a>2. Active Class Name</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// modules/App.js</span></span><br><span class=\"line\">&lt;li&gt;<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/about&quot;</span> <span class=\"attr\">activeClassName</span>=<span class=\"string\">&quot;active&quot;</span>&gt;</span>About<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span></span>&lt;/li&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/repos&quot;</span> <span class=\"attr\">activeClassName</span>=<span class=\"string\">&quot;active&quot;</span>&gt;</span>Repos<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-封装成NavLink组件\"><a href=\"#3-封装成NavLink组件\" class=\"headerlink\" title=\"3. 封装成NavLink组件\"></a>3. 封装成NavLink组件</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Link</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">React</span>.<span class=\"title function_\">createClass</span>(&#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Link</span> &#123;<span class=\"attr\">...this.props</span>&#125; <span class=\"attr\">activeClassName</span>=<span class=\"string\">&quot;active&quot;</span>/&gt;</span></span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// modules/App.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">NavLink</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./NavLink&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">NavLink</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/about&quot;</span>&gt;</span>About<span class=\"tag\">&lt;/<span class=\"name\">NavLink</span>&gt;</span></span>&lt;/li&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">NavLink</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/repos&quot;</span>&gt;</span>Repos<span class=\"tag\">&lt;/<span class=\"name\">NavLink</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-IndexLink\"><a href=\"#4-IndexLink\" class=\"headerlink\" title=\"4. IndexLink\"></a>4. IndexLink</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// App.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">IndexLink</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\">&lt;li&gt;<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">IndexLink</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/&quot;</span> <span class=\"attr\">activeClassName</span>=<span class=\"string\">&quot;active&quot;</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">IndexLink</span>&gt;</span></span>&lt;/li&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-onlyActiveOnIndex\"><a href=\"#5-onlyActiveOnIndex\" class=\"headerlink\" title=\"5. onlyActiveOnIndex\"></a>5. onlyActiveOnIndex</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;li&gt;<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/&quot;</span> <span class=\"attr\">activeClassName</span>=<span class=\"string\">&quot;active&quot;</span> <span class=\"attr\">onlyActiveOnIndex</span>=<span class=\"string\">&#123;true&#125;</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span></span>&lt;/li&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;li&gt;<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">NavLink</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/&quot;</span> <span class=\"attr\">onlyActiveOnIndex</span>=<span class=\"string\">&#123;true&#125;</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">NavLink</span>&gt;</span></span>&lt;/li&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"五、参数传递\"><a href=\"#五、参数传递\" class=\"headerlink\" title=\"五、参数传递\"></a>五、参数传递</h2><p>用户获取及传递url中附带的参数<br>有<code>/repos/:userName/:repoName</code>这样的路由</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// modules/Repo.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">React</span>.<span class=\"title function_\">createClass</span>(&#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;this.props.params.repoName&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"><span class=\"comment\">// import Repo</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Repo</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./modules/Repo&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">render</span>((</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Router</span> <span class=\"attr\">history</span>=<span class=\"string\">&#123;hashHistory&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;App&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/repos&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;Repos&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;/* 添加新路由 */&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/repos/:userName/:repoName&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;Repo&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/about&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;About&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Route</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">Router</span>&gt;</span></span></span><br><span class=\"line\">), <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;app&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Repos.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Link</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">React</span>.<span class=\"title function_\">createClass</span>(&#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Repos<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">        &#123;/* 添加跳转链接 */&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/repos/reactjs/react-router&quot;</span>&gt;</span>React Router<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/repos/facebook/react&quot;</span>&gt;</span>React<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"六、设置初始路由\"><a href=\"#六、设置初始路由\" class=\"headerlink\" title=\"六、设置初始路由\"></a>六、设置初始路由</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// index.js</span></span><br><span class=\"line\"><span class=\"comment\">// 从&#x27;react-router&#x27; 中添加新的引用： `IndexRoute`</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Router</span>, <span class=\"title class_\">Route</span>, hashHistory, <span class=\"title class_\">IndexRoute</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 添加 Home 组件</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Home</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./modules/Home&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">render</span>((</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Router</span> <span class=\"attr\">history</span>=<span class=\"string\">&#123;hashHistory&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;App&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;/* 将Home组件作为 `/`的子路由添加 */&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">IndexRoute</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;Home&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/repos&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;Repos&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/repos/:userName/:repoName&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;Repo&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">Route</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/about&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;About&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Route</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">Router</span>&gt;</span></span></span><br><span class=\"line\">), <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;app&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"七、触发路由\"><a href=\"#七、触发路由\" class=\"headerlink\" title=\"七、触发路由\"></a>七、触发路由</h2><p>使用<code>browserHistory</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// modules/Repos.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; browserHistory &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\">  <span class=\"title function_\">handleSubmit</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> path = <span class=\"string\">`/repos/<span class=\"subst\">$&#123;userName&#125;</span>/<span class=\"subst\">$&#123;repo&#125;</span>`</span></span><br><span class=\"line\">    browserHistory.<span class=\"title function_\">push</span>(path)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br></pre></td></tr></table></figure>\n\n<p>使用<code>Router</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ask for `router` from context</span></span><br><span class=\"line\">  <span class=\"attr\">contextTypes</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">router</span>: <span class=\"title class_\">React</span>.<span class=\"property\">PropTypes</span>.<span class=\"property\">object</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">handleSubmit</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">context</span>.<span class=\"property\">router</span>.<span class=\"title function_\">push</span>(path)</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>react-router 作为react的路由插件，整体使用上我觉得比vue-router更为方便（除了变来变去的api），<br>特别是路由嵌套简洁很多。<br>原文见<a href=\"https://github.com/reactjs/react-router-tutorial\">react-router-tutorial</a></p>\n<h2 id=\"一、安装\"><a href=\"#一、安装\" class=\"headerlink\" title=\"一、安装\"></a>一、安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install react-router --save</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"二、显示路由\"><a href=\"#二、显示路由\" class=\"headerlink\" title=\"二、显示路由\"></a>二、显示路由</h2><p>在入口文件处</p>\n<ul>\n<li><p>引入<code>Router</code> 、<code>Route</code>、<code>hashHistory</code></p>\n</li>\n<li><p>render <code>Router</code></p>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Router</span>, <span class=\"title class_\">Route</span>, hashHistory &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">About</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./modules/About&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Repos</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./modules/Repos&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">render</span>((</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Router</span> <span class=\"attr\">history</span>=<span class=\"string\">&#123;hashHistory&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;App&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/repos&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;Repos&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/about&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;About&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">Router</span>&gt;</span></span></span><br><span class=\"line\">), <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;app&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<p>使用history api 管理路由时：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// index.js</span></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Router</span>, <span class=\"title class_\">Route</span>, browserHistory &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">render</span>((</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Router</span> <span class=\"attr\">history</span>=<span class=\"string\">&#123;browserHistory&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    &#123;/* ... */&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">Router</span>&gt;</span></span></span><br><span class=\"line\">), <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;app&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三、嵌套路由\"><a href=\"#三、嵌套路由\" class=\"headerlink\" title=\"三、嵌套路由\"></a>三、嵌套路由</h2><p>嵌套路由的实现相比vue-router中通过声明子路由的方法简洁直观了很多<br>路由的嵌套与对应组件的嵌套之间是存在对应关系，通过这种对应关系来实现嵌套路由</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;App&gt;       &#123;/*  /          */&#125;</span><br><span class=\"line\">  &lt;Repos&gt;   &#123;/*  /repos     */&#125;</span><br><span class=\"line\">    &lt;Repo/&gt; &#123;/*  /repos/123 */&#125;</span><br><span class=\"line\">  &lt;/Repos&gt;</span><br><span class=\"line\">&lt;/App&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// index.js</span></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"><span class=\"title function_\">render</span>((</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Router</span> <span class=\"attr\">history</span>=<span class=\"string\">&#123;hashHistory&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;App&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;/* make them children of `App` */&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/repos&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;Repos&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/about&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;About&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Route</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">Router</span>&gt;</span></span></span><br><span class=\"line\">), <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;app&#x27;</span>))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// modules/App.js</span></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Ghettohub Issues<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;nav&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/about&quot;</span>&gt;</span>About<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/repos&quot;</span>&gt;</span>Repos<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">        &#123;/* add this */&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">        &#123;this.props.children&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"四、导航样式\"><a href=\"#四、导航样式\" class=\"headerlink\" title=\"四、导航样式\"></a>四、导航样式</h2><p>访问各路由时显示对应的激活样式</p>\n<h4 id=\"1-Active-Styles\"><a href=\"#1-Active-Styles\" class=\"headerlink\" title=\"1. Active Styles\"></a>1. Active Styles</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// modules/App.js</span></span><br><span class=\"line\">&lt;li&gt;<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/about&quot;</span> <span class=\"attr\">activeStyle</span>=<span class=\"string\">&#123;&#123;</span> <span class=\"attr\">color:</span> &#x27;<span class=\"attr\">red</span>&#x27; &#125;&#125;&gt;</span>About<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span></span>&lt;/li&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/repos&quot;</span> <span class=\"attr\">activeStyle</span>=<span class=\"string\">&#123;&#123;</span> <span class=\"attr\">color:</span> &#x27;<span class=\"attr\">red</span>&#x27; &#125;&#125;&gt;</span>Repos<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-Active-Class-Name\"><a href=\"#2-Active-Class-Name\" class=\"headerlink\" title=\"2. Active Class Name\"></a>2. Active Class Name</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// modules/App.js</span></span><br><span class=\"line\">&lt;li&gt;<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/about&quot;</span> <span class=\"attr\">activeClassName</span>=<span class=\"string\">&quot;active&quot;</span>&gt;</span>About<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span></span>&lt;/li&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/repos&quot;</span> <span class=\"attr\">activeClassName</span>=<span class=\"string\">&quot;active&quot;</span>&gt;</span>Repos<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-封装成NavLink组件\"><a href=\"#3-封装成NavLink组件\" class=\"headerlink\" title=\"3. 封装成NavLink组件\"></a>3. 封装成NavLink组件</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Link</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">React</span>.<span class=\"title function_\">createClass</span>(&#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Link</span> &#123;<span class=\"attr\">...this.props</span>&#125; <span class=\"attr\">activeClassName</span>=<span class=\"string\">&quot;active&quot;</span>/&gt;</span></span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// modules/App.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">NavLink</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./NavLink&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">NavLink</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/about&quot;</span>&gt;</span>About<span class=\"tag\">&lt;/<span class=\"name\">NavLink</span>&gt;</span></span>&lt;/li&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">NavLink</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/repos&quot;</span>&gt;</span>Repos<span class=\"tag\">&lt;/<span class=\"name\">NavLink</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-IndexLink\"><a href=\"#4-IndexLink\" class=\"headerlink\" title=\"4. IndexLink\"></a>4. IndexLink</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// App.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">IndexLink</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\">&lt;li&gt;<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">IndexLink</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/&quot;</span> <span class=\"attr\">activeClassName</span>=<span class=\"string\">&quot;active&quot;</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">IndexLink</span>&gt;</span></span>&lt;/li&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-onlyActiveOnIndex\"><a href=\"#5-onlyActiveOnIndex\" class=\"headerlink\" title=\"5. onlyActiveOnIndex\"></a>5. onlyActiveOnIndex</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;li&gt;<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/&quot;</span> <span class=\"attr\">activeClassName</span>=<span class=\"string\">&quot;active&quot;</span> <span class=\"attr\">onlyActiveOnIndex</span>=<span class=\"string\">&#123;true&#125;</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span></span>&lt;/li&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;li&gt;<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">NavLink</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/&quot;</span> <span class=\"attr\">onlyActiveOnIndex</span>=<span class=\"string\">&#123;true&#125;</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">NavLink</span>&gt;</span></span>&lt;/li&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"五、参数传递\"><a href=\"#五、参数传递\" class=\"headerlink\" title=\"五、参数传递\"></a>五、参数传递</h2><p>用户获取及传递url中附带的参数<br>有<code>/repos/:userName/:repoName</code>这样的路由</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// modules/Repo.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">React</span>.<span class=\"title function_\">createClass</span>(&#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;this.props.params.repoName&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"><span class=\"comment\">// import Repo</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Repo</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./modules/Repo&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">render</span>((</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Router</span> <span class=\"attr\">history</span>=<span class=\"string\">&#123;hashHistory&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;App&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/repos&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;Repos&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;/* 添加新路由 */&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/repos/:userName/:repoName&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;Repo&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/about&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;About&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Route</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">Router</span>&gt;</span></span></span><br><span class=\"line\">), <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;app&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Repos.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Link</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">React</span>.<span class=\"title function_\">createClass</span>(&#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Repos<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">        &#123;/* 添加跳转链接 */&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/repos/reactjs/react-router&quot;</span>&gt;</span>React Router<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/repos/facebook/react&quot;</span>&gt;</span>React<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"六、设置初始路由\"><a href=\"#六、设置初始路由\" class=\"headerlink\" title=\"六、设置初始路由\"></a>六、设置初始路由</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// index.js</span></span><br><span class=\"line\"><span class=\"comment\">// 从&#x27;react-router&#x27; 中添加新的引用： `IndexRoute`</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Router</span>, <span class=\"title class_\">Route</span>, hashHistory, <span class=\"title class_\">IndexRoute</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 添加 Home 组件</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Home</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./modules/Home&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">render</span>((</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Router</span> <span class=\"attr\">history</span>=<span class=\"string\">&#123;hashHistory&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;App&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;/* 将Home组件作为 `/`的子路由添加 */&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">IndexRoute</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;Home&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/repos&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;Repos&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/repos/:userName/:repoName&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;Repo&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">Route</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/about&quot;</span> <span class=\"attr\">component</span>=<span class=\"string\">&#123;About&#125;/</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Route</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">Router</span>&gt;</span></span></span><br><span class=\"line\">), <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;app&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"七、触发路由\"><a href=\"#七、触发路由\" class=\"headerlink\" title=\"七、触发路由\"></a>七、触发路由</h2><p>使用<code>browserHistory</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// modules/Repos.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; browserHistory &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\">  <span class=\"title function_\">handleSubmit</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> path = <span class=\"string\">`/repos/<span class=\"subst\">$&#123;userName&#125;</span>/<span class=\"subst\">$&#123;repo&#125;</span>`</span></span><br><span class=\"line\">    browserHistory.<span class=\"title function_\">push</span>(path)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br></pre></td></tr></table></figure>\n\n<p>使用<code>Router</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ask for `router` from context</span></span><br><span class=\"line\">  <span class=\"attr\">contextTypes</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">router</span>: <span class=\"title class_\">React</span>.<span class=\"property\">PropTypes</span>.<span class=\"property\">object</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">handleSubmit</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">context</span>.<span class=\"property\">router</span>.<span class=\"title function_\">push</span>(path)</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>"},{"title":"使用Cypress进行前端e2e测试","date":"2019-07-12T04:59:18.000Z","_content":"\n[Cypress文档](https://docs.cypress.io/)\n\n# e2e测试示例\n[code-coverage](https://github.com/xieQin/code-coverage)\n\n# Cypress概览\n![总体流程](http://chuantu.xyz/t6/702/1564540539x2728309587.jpg)\n\n# 编写测试用例总体流程\n- 确定测试流程\n- 明确流程中涉及到的元素及数据接口\n- 使用data-cy标记元素\n- 使用cy.get(), cy.route()进行数据接口mock\n- 按功能需求编写用例\n- 运行调试\n\n# Cypress使用总结\n### 优点\n引入简单，开箱即用\n\n官方示例多，利于开发与维护\n\ngui 界面（ env：chrome 浏览器），可边测试边调整\n\n截图功能，用例失败的场景节点会被截图保存，利于复现\n\n自定义 fixture，可 mock 数据\n\n自定义 commands，提高测试代码复用\n\n支持单元测试\n\n### 缺点\n不支持兼容测试，只能运行在chrome环境中\n","source":"_posts/使用Cypress进行前端e2e测试.md","raw":"---\ntitle: 使用Cypress进行前端e2e测试\ndate: 2019-07-12 12:59:18\ntags: Cypress\ncategories: Test\n---\n\n[Cypress文档](https://docs.cypress.io/)\n\n# e2e测试示例\n[code-coverage](https://github.com/xieQin/code-coverage)\n\n# Cypress概览\n![总体流程](http://chuantu.xyz/t6/702/1564540539x2728309587.jpg)\n\n# 编写测试用例总体流程\n- 确定测试流程\n- 明确流程中涉及到的元素及数据接口\n- 使用data-cy标记元素\n- 使用cy.get(), cy.route()进行数据接口mock\n- 按功能需求编写用例\n- 运行调试\n\n# Cypress使用总结\n### 优点\n引入简单，开箱即用\n\n官方示例多，利于开发与维护\n\ngui 界面（ env：chrome 浏览器），可边测试边调整\n\n截图功能，用例失败的场景节点会被截图保存，利于复现\n\n自定义 fixture，可 mock 数据\n\n自定义 commands，提高测试代码复用\n\n支持单元测试\n\n### 缺点\n不支持兼容测试，只能运行在chrome环境中\n","slug":"使用Cypress进行前端e2e测试","published":1,"updated":"2022-09-08T14:51:06.970Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krqi001wkp000z49ghzu","content":"<p><a href=\"https://docs.cypress.io/\">Cypress文档</a></p>\n<h1 id=\"e2e测试示例\"><a href=\"#e2e测试示例\" class=\"headerlink\" title=\"e2e测试示例\"></a>e2e测试示例</h1><p><a href=\"https://github.com/xieQin/code-coverage\">code-coverage</a></p>\n<h1 id=\"Cypress概览\"><a href=\"#Cypress概览\" class=\"headerlink\" title=\"Cypress概览\"></a>Cypress概览</h1><p><img src=\"http://chuantu.xyz/t6/702/1564540539x2728309587.jpg\" alt=\"总体流程\"></p>\n<h1 id=\"编写测试用例总体流程\"><a href=\"#编写测试用例总体流程\" class=\"headerlink\" title=\"编写测试用例总体流程\"></a>编写测试用例总体流程</h1><ul>\n<li>确定测试流程</li>\n<li>明确流程中涉及到的元素及数据接口</li>\n<li>使用data-cy标记元素</li>\n<li>使用cy.get(), cy.route()进行数据接口mock</li>\n<li>按功能需求编写用例</li>\n<li>运行调试</li>\n</ul>\n<h1 id=\"Cypress使用总结\"><a href=\"#Cypress使用总结\" class=\"headerlink\" title=\"Cypress使用总结\"></a>Cypress使用总结</h1><h3 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h3><p>引入简单，开箱即用</p>\n<p>官方示例多，利于开发与维护</p>\n<p>gui 界面（ env：chrome 浏览器），可边测试边调整</p>\n<p>截图功能，用例失败的场景节点会被截图保存，利于复现</p>\n<p>自定义 fixture，可 mock 数据</p>\n<p>自定义 commands，提高测试代码复用</p>\n<p>支持单元测试</p>\n<h3 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h3><p>不支持兼容测试，只能运行在chrome环境中</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://docs.cypress.io/\">Cypress文档</a></p>\n<h1 id=\"e2e测试示例\"><a href=\"#e2e测试示例\" class=\"headerlink\" title=\"e2e测试示例\"></a>e2e测试示例</h1><p><a href=\"https://github.com/xieQin/code-coverage\">code-coverage</a></p>\n<h1 id=\"Cypress概览\"><a href=\"#Cypress概览\" class=\"headerlink\" title=\"Cypress概览\"></a>Cypress概览</h1><p><img src=\"http://chuantu.xyz/t6/702/1564540539x2728309587.jpg\" alt=\"总体流程\"></p>\n<h1 id=\"编写测试用例总体流程\"><a href=\"#编写测试用例总体流程\" class=\"headerlink\" title=\"编写测试用例总体流程\"></a>编写测试用例总体流程</h1><ul>\n<li>确定测试流程</li>\n<li>明确流程中涉及到的元素及数据接口</li>\n<li>使用data-cy标记元素</li>\n<li>使用cy.get(), cy.route()进行数据接口mock</li>\n<li>按功能需求编写用例</li>\n<li>运行调试</li>\n</ul>\n<h1 id=\"Cypress使用总结\"><a href=\"#Cypress使用总结\" class=\"headerlink\" title=\"Cypress使用总结\"></a>Cypress使用总结</h1><h3 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h3><p>引入简单，开箱即用</p>\n<p>官方示例多，利于开发与维护</p>\n<p>gui 界面（ env：chrome 浏览器），可边测试边调整</p>\n<p>截图功能，用例失败的场景节点会被截图保存，利于复现</p>\n<p>自定义 fixture，可 mock 数据</p>\n<p>自定义 commands，提高测试代码复用</p>\n<p>支持单元测试</p>\n<h3 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h3><p>不支持兼容测试，只能运行在chrome环境中</p>\n"},{"title":"使用React Hooks进行状态管理","date":"2019-03-24T07:59:42.000Z","_content":"## 总体方案\n\n定义Model\n```ts\ntype stateType = {\n  text: string\n}\ntype actionsType = {\n  modify: any\n}\n\nconst TestModel: ModelType<stateType, actionsType> = {\n  state: {\n    text: 'hello world'\n  },\n  actions: {\n    modify (state, actions, text: string) {\n      return state => {\n        state.text = text\n      }\n    },\n  }\n}\n\nexport default TestModel\n```\n\n```ts\nimport { Model } from \"react-model\";\nimport Test from \"./test\";\n\nexport const { useStore, getState } = Model({ Test });\n```\n\n### 实际应用\n\n- 依赖：react-model\n\n- 使用示例\n```tsx\nimport { useStore } from '../models'\n\nconst Example = () => {\n  const [state, actions] = useStore('Test')\n  return (\n    <div onClick={() => actions.modify('hello')}>{state.text}</div>\n  )\n}\n```\n\n- 项目示例\n[react-state-hooks](https://github.com/xieQin/react-state-hooks)\n","source":"_posts/使用React Hooks进行状态管理.md","raw":"---\ntitle: 使用React Hooks进行状态管理\ndate: 2019-03-24 15:59:42\ntags: React\ncategories: React\n---\n## 总体方案\n\n定义Model\n```ts\ntype stateType = {\n  text: string\n}\ntype actionsType = {\n  modify: any\n}\n\nconst TestModel: ModelType<stateType, actionsType> = {\n  state: {\n    text: 'hello world'\n  },\n  actions: {\n    modify (state, actions, text: string) {\n      return state => {\n        state.text = text\n      }\n    },\n  }\n}\n\nexport default TestModel\n```\n\n```ts\nimport { Model } from \"react-model\";\nimport Test from \"./test\";\n\nexport const { useStore, getState } = Model({ Test });\n```\n\n### 实际应用\n\n- 依赖：react-model\n\n- 使用示例\n```tsx\nimport { useStore } from '../models'\n\nconst Example = () => {\n  const [state, actions] = useStore('Test')\n  return (\n    <div onClick={() => actions.modify('hello')}>{state.text}</div>\n  )\n}\n```\n\n- 项目示例\n[react-state-hooks](https://github.com/xieQin/react-state-hooks)\n","slug":"使用React Hooks进行状态管理","published":1,"updated":"2022-09-08T14:51:06.970Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krqj0021kp00b9v7aqgb","content":"<h2 id=\"总体方案\"><a href=\"#总体方案\" class=\"headerlink\" title=\"总体方案\"></a>总体方案</h2><p>定义Model</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> stateType = &#123;</span><br><span class=\"line\">  <span class=\"attr\">text</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> actionsType = &#123;</span><br><span class=\"line\">  <span class=\"attr\">modify</span>: <span class=\"built_in\">any</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">TestModel</span>: <span class=\"title class_\">ModelType</span>&lt;stateType, actionsType&gt; = &#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">text</span>: <span class=\"string\">&#x27;hello world&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">    modify (state, actions, <span class=\"attr\">text</span>: <span class=\"built_in\">string</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">        state.<span class=\"property\">text</span> = text</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">TestModel</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Model</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;react-model&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Test</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;./test&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> &#123; useStore, getState &#125; = <span class=\"title class_\">Model</span>(&#123; <span class=\"title class_\">Test</span> &#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"实际应用\"><a href=\"#实际应用\" class=\"headerlink\" title=\"实际应用\"></a>实际应用</h3><ul>\n<li><p>依赖：react-model</p>\n</li>\n<li><p>使用示例</p>\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; useStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../models&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Example</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [state, actions] = <span class=\"title function_\">useStore</span>(<span class=\"string\">&#x27;Test&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> actions.modify(&#x27;hello&#x27;)&#125;&gt;&#123;state.text&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>项目示例<br><a href=\"https://github.com/xieQin/react-state-hooks\">react-state-hooks</a></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"总体方案\"><a href=\"#总体方案\" class=\"headerlink\" title=\"总体方案\"></a>总体方案</h2><p>定义Model</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> stateType = &#123;</span><br><span class=\"line\">  <span class=\"attr\">text</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> actionsType = &#123;</span><br><span class=\"line\">  <span class=\"attr\">modify</span>: <span class=\"built_in\">any</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">TestModel</span>: <span class=\"title class_\">ModelType</span>&lt;stateType, actionsType&gt; = &#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">text</span>: <span class=\"string\">&#x27;hello world&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">    modify (state, actions, <span class=\"attr\">text</span>: <span class=\"built_in\">string</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">        state.<span class=\"property\">text</span> = text</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">TestModel</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Model</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;react-model&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Test</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;./test&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> &#123; useStore, getState &#125; = <span class=\"title class_\">Model</span>(&#123; <span class=\"title class_\">Test</span> &#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"实际应用\"><a href=\"#实际应用\" class=\"headerlink\" title=\"实际应用\"></a>实际应用</h3><ul>\n<li><p>依赖：react-model</p>\n</li>\n<li><p>使用示例</p>\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; useStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../models&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Example</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [state, actions] = <span class=\"title function_\">useStore</span>(<span class=\"string\">&#x27;Test&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> actions.modify(&#x27;hello&#x27;)&#125;&gt;&#123;state.text&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>项目示例<br><a href=\"https://github.com/xieQin/react-state-hooks\">react-state-hooks</a></p>\n</li>\n</ul>\n"},{"title":"使用nodejs搭建web服务器","date":"2015-07-25T05:52:41.000Z","_content":"\n搭建简单的web服务器\n\n##### 服务器基本流程：\n- 响应url请求，对应于硬盘上的文件\n- 如果文件存在，返回200状态码，并发送文件到浏览器端\n- 如果文件不存在，返回404状态码，并发送一个404文件到浏览器端\n- 如果文件读取错误，返回500状态码，发送错误信息到浏览器端\n\n##### 需要实现的基本功能点：\n- 开启web服务，加载各种web资源\n- 自动分配可用端口，也可以配置端口\n- 加载json文件并模拟网速\n- 启动时能自动打开默认浏览器浏览，方便调试\n- 支持常用文件的MIME类型\n- 允许跨域请求\n- host默认为本地IP\n- 可配置主页\n\n##### 扩展功能\n- 支持304缓存响应\n- 启用GZip功能对指定文件进行压缩\n- 支持断点续传\n- 使用快捷命令\n\n### 代码编写\n\n##### 基本代码\n```js\nvar http = require('http');        // Http服务器API\nvar fs = require('fs');            // 用于处理本地文件\nvar os = require('os');            //用于获取本地IP地址\nvar exec = require('child_process').exec; //用于打开默认浏览器\nvar path = require('path');     //用于处理路径和后缀\nvar url = require('url');       //用于解析get请求所带的参数\n\nvar CONFIG, //默认配置\n    HTTP,   //HTTP静态类\n    log;    //日志打印\n\nCONFIG = {\n  homedir:'',\n  home: 'index.html',\n  port: 8089,\n  browser: true,\n};\nlog = function(txt){ console.log(txt); };\n\nHTTP = {\n  init:function(){},\n  _getIPAddress:function(){/* 获取本地IPv4的IP地址 */},\n  _openURL:function(path){/* 使用默认浏览器打开URL */},\n  _getMIME:function(ext){/* 获取文件的MIME类型 */},\n  responseFile:function(pathName, res, ext, params){ /* 读取文件流并输出 */ }\n  route:function( pathName, req, res ){/* 路由到指定的文件并响应输出 */},\n  createServer:function(){/* 创建一个http服务 */},\n  _bindEvents:function(server){ /* 注册响应事件 */};\n\nHTTP.init();\n```\n\n##### 建立http服务\n```js\nvar server = http.createServer();\nserver.listen(CONFIG.port!==0 ? CONFIG.port : 0);\n```\n\n##### 注册 监听端口 和 请求响应 \n```js\nvar self = this, defaultUrl = CONFIG.homedir ? CONFIG.homedir+'/'+CONFIG.home : CONFIG.home;\n// 注册监听端口启用事件\nserver.on('listening', function() { \n  var port = server.address().port;\n  log('Server running at '+ port);\n  CONFIG.browser && self._openURL('http://'+self._getIPAddress()+':'+port+'/'+defaultUrl);\n})\n```\n\n##### 注册请求处理事件\n```js\nserver.on('request', function(request, response) {\n    // 解析请求的URL\n    var oURL = url.parse(request.url);\n    var pathName = oURL.pathname.slice(1);\n    if(!pathName) pathName = defaultUrl;\n    self.route.bind(self)(pathName, request, response);\n});\n```\n\n##### 路由处理\n```js\nresponseFile:function(pathName, res, ext, params){ /* 读取文件流并输出 */\n  var self = this;\n  var raw = fs.createReadStream(pathName);\n  // 允许跨域调用\n  res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n  res.setHeader(\"Content-Type\", self._getMIME(ext));\n\n  if(ext == 'json' && params.delay){\n    setTimeout(function(){\n      res.writeHead(200, \"Ok\");\n      raw.pipe(res);\n    },params.delay);\n  }else{\n    res.writeHead(200, \"Ok\");\n    raw.pipe(res);\n  }\n},\nroute:function( pathName, req, res ){/* 路由到指定的文件并响应输出 */\n  var self = this;\n  fs.stat(pathName, function(err, stats){\n    if(err){\n      res.writeHead(404, \"Not Found\", {'Content-Type': 'text/plain'});\n      res.write(\"This request URL \" + pathName + \" was not found on this server.\");\n      res.end();\n    }else{\n      if(stats.isDirectory()){\n        pathName = path.join(pathName, '/', CONFIG.home);\n        self.route(pathName, req, res);\n      }else{\n        var method = req.method,\n            ext = path.extname(pathName), \n            params='';\n\n        log(method+': '+pathName);// 打印请求日志\n\n        ext = ext ? ext.slice(1) : 'unknown';\n\n        // 如果是get请求，且url结尾为'/'，那么就返回 home 页\n        if(method=='GET'){\n          pathName.slice(-1) === '/' &&  (pathName = path.normalize(pathName + '/' +CONFIG.home));\n          params = url.parse(req.url, true).query;\n          self.responseFile.bind(self)(pathName, res, ext, params);\n        }else if(method == 'POST'){\n          var _postData = \"\", _postMap = \"\";\n          req.on('data', function (chunk){\n              _postData += chunk;\n          }).on(\"end\", function (){\n            params = require('querystring').parse(_postData);\n            responseFile.bind(self)(pathName, res, ext, params);\n          });\n        }else{\n          self.responseFile.bind(self)(pathName, res, ext, params);\n        }\n      }\n    }\n  });\n}\n```","source":"_posts/使用nodejs搭建web服务器.md","raw":"---\ntitle: 使用nodejs搭建web服务器\ndate: 2015-07-25 13:52:41\ntags: Nodejs\ncategories: Nodejs\n---\n\n搭建简单的web服务器\n\n##### 服务器基本流程：\n- 响应url请求，对应于硬盘上的文件\n- 如果文件存在，返回200状态码，并发送文件到浏览器端\n- 如果文件不存在，返回404状态码，并发送一个404文件到浏览器端\n- 如果文件读取错误，返回500状态码，发送错误信息到浏览器端\n\n##### 需要实现的基本功能点：\n- 开启web服务，加载各种web资源\n- 自动分配可用端口，也可以配置端口\n- 加载json文件并模拟网速\n- 启动时能自动打开默认浏览器浏览，方便调试\n- 支持常用文件的MIME类型\n- 允许跨域请求\n- host默认为本地IP\n- 可配置主页\n\n##### 扩展功能\n- 支持304缓存响应\n- 启用GZip功能对指定文件进行压缩\n- 支持断点续传\n- 使用快捷命令\n\n### 代码编写\n\n##### 基本代码\n```js\nvar http = require('http');        // Http服务器API\nvar fs = require('fs');            // 用于处理本地文件\nvar os = require('os');            //用于获取本地IP地址\nvar exec = require('child_process').exec; //用于打开默认浏览器\nvar path = require('path');     //用于处理路径和后缀\nvar url = require('url');       //用于解析get请求所带的参数\n\nvar CONFIG, //默认配置\n    HTTP,   //HTTP静态类\n    log;    //日志打印\n\nCONFIG = {\n  homedir:'',\n  home: 'index.html',\n  port: 8089,\n  browser: true,\n};\nlog = function(txt){ console.log(txt); };\n\nHTTP = {\n  init:function(){},\n  _getIPAddress:function(){/* 获取本地IPv4的IP地址 */},\n  _openURL:function(path){/* 使用默认浏览器打开URL */},\n  _getMIME:function(ext){/* 获取文件的MIME类型 */},\n  responseFile:function(pathName, res, ext, params){ /* 读取文件流并输出 */ }\n  route:function( pathName, req, res ){/* 路由到指定的文件并响应输出 */},\n  createServer:function(){/* 创建一个http服务 */},\n  _bindEvents:function(server){ /* 注册响应事件 */};\n\nHTTP.init();\n```\n\n##### 建立http服务\n```js\nvar server = http.createServer();\nserver.listen(CONFIG.port!==0 ? CONFIG.port : 0);\n```\n\n##### 注册 监听端口 和 请求响应 \n```js\nvar self = this, defaultUrl = CONFIG.homedir ? CONFIG.homedir+'/'+CONFIG.home : CONFIG.home;\n// 注册监听端口启用事件\nserver.on('listening', function() { \n  var port = server.address().port;\n  log('Server running at '+ port);\n  CONFIG.browser && self._openURL('http://'+self._getIPAddress()+':'+port+'/'+defaultUrl);\n})\n```\n\n##### 注册请求处理事件\n```js\nserver.on('request', function(request, response) {\n    // 解析请求的URL\n    var oURL = url.parse(request.url);\n    var pathName = oURL.pathname.slice(1);\n    if(!pathName) pathName = defaultUrl;\n    self.route.bind(self)(pathName, request, response);\n});\n```\n\n##### 路由处理\n```js\nresponseFile:function(pathName, res, ext, params){ /* 读取文件流并输出 */\n  var self = this;\n  var raw = fs.createReadStream(pathName);\n  // 允许跨域调用\n  res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n  res.setHeader(\"Content-Type\", self._getMIME(ext));\n\n  if(ext == 'json' && params.delay){\n    setTimeout(function(){\n      res.writeHead(200, \"Ok\");\n      raw.pipe(res);\n    },params.delay);\n  }else{\n    res.writeHead(200, \"Ok\");\n    raw.pipe(res);\n  }\n},\nroute:function( pathName, req, res ){/* 路由到指定的文件并响应输出 */\n  var self = this;\n  fs.stat(pathName, function(err, stats){\n    if(err){\n      res.writeHead(404, \"Not Found\", {'Content-Type': 'text/plain'});\n      res.write(\"This request URL \" + pathName + \" was not found on this server.\");\n      res.end();\n    }else{\n      if(stats.isDirectory()){\n        pathName = path.join(pathName, '/', CONFIG.home);\n        self.route(pathName, req, res);\n      }else{\n        var method = req.method,\n            ext = path.extname(pathName), \n            params='';\n\n        log(method+': '+pathName);// 打印请求日志\n\n        ext = ext ? ext.slice(1) : 'unknown';\n\n        // 如果是get请求，且url结尾为'/'，那么就返回 home 页\n        if(method=='GET'){\n          pathName.slice(-1) === '/' &&  (pathName = path.normalize(pathName + '/' +CONFIG.home));\n          params = url.parse(req.url, true).query;\n          self.responseFile.bind(self)(pathName, res, ext, params);\n        }else if(method == 'POST'){\n          var _postData = \"\", _postMap = \"\";\n          req.on('data', function (chunk){\n              _postData += chunk;\n          }).on(\"end\", function (){\n            params = require('querystring').parse(_postData);\n            responseFile.bind(self)(pathName, res, ext, params);\n          });\n        }else{\n          self.responseFile.bind(self)(pathName, res, ext, params);\n        }\n      }\n    }\n  });\n}\n```","slug":"使用nodejs搭建web服务器","published":1,"updated":"2022-09-08T14:51:06.970Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krqk0024kp00b97cgx1d","content":"<p>搭建简单的web服务器</p>\n<h5 id=\"服务器基本流程：\"><a href=\"#服务器基本流程：\" class=\"headerlink\" title=\"服务器基本流程：\"></a>服务器基本流程：</h5><ul>\n<li>响应url请求，对应于硬盘上的文件</li>\n<li>如果文件存在，返回200状态码，并发送文件到浏览器端</li>\n<li>如果文件不存在，返回404状态码，并发送一个404文件到浏览器端</li>\n<li>如果文件读取错误，返回500状态码，发送错误信息到浏览器端</li>\n</ul>\n<h5 id=\"需要实现的基本功能点：\"><a href=\"#需要实现的基本功能点：\" class=\"headerlink\" title=\"需要实现的基本功能点：\"></a>需要实现的基本功能点：</h5><ul>\n<li>开启web服务，加载各种web资源</li>\n<li>自动分配可用端口，也可以配置端口</li>\n<li>加载json文件并模拟网速</li>\n<li>启动时能自动打开默认浏览器浏览，方便调试</li>\n<li>支持常用文件的MIME类型</li>\n<li>允许跨域请求</li>\n<li>host默认为本地IP</li>\n<li>可配置主页</li>\n</ul>\n<h5 id=\"扩展功能\"><a href=\"#扩展功能\" class=\"headerlink\" title=\"扩展功能\"></a>扩展功能</h5><ul>\n<li>支持304缓存响应</li>\n<li>启用GZip功能对指定文件进行压缩</li>\n<li>支持断点续传</li>\n<li>使用快捷命令</li>\n</ul>\n<h3 id=\"代码编写\"><a href=\"#代码编写\" class=\"headerlink\" title=\"代码编写\"></a>代码编写</h3><h5 id=\"基本代码\"><a href=\"#基本代码\" class=\"headerlink\" title=\"基本代码\"></a>基本代码</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;http&#x27;</span>);        <span class=\"comment\">// Http服务器API</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>);            <span class=\"comment\">// 用于处理本地文件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> os = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;os&#x27;</span>);            <span class=\"comment\">//用于获取本地IP地址</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> exec = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;child_process&#x27;</span>).<span class=\"property\">exec</span>; <span class=\"comment\">//用于打开默认浏览器</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);     <span class=\"comment\">//用于处理路径和后缀</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> url = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;url&#x27;</span>);       <span class=\"comment\">//用于解析get请求所带的参数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"variable constant_\">CONFIG</span>, <span class=\"comment\">//默认配置</span></span><br><span class=\"line\">    <span class=\"variable constant_\">HTTP</span>,   <span class=\"comment\">//HTTP静态类</span></span><br><span class=\"line\">    log;    <span class=\"comment\">//日志打印</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable constant_\">CONFIG</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">homedir</span>:<span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">home</span>: <span class=\"string\">&#x27;index.html&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">port</span>: <span class=\"number\">8089</span>,</span><br><span class=\"line\">  <span class=\"attr\">browser</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">log = <span class=\"keyword\">function</span>(<span class=\"params\">txt</span>)&#123; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(txt); &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable constant_\">HTTP</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">init</span>:<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">_getIPAddress</span>:<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;<span class=\"comment\">/* 获取本地IPv4的IP地址 */</span>&#125;,</span><br><span class=\"line\">  <span class=\"attr\">_openURL</span>:<span class=\"keyword\">function</span>(<span class=\"params\">path</span>)&#123;<span class=\"comment\">/* 使用默认浏览器打开URL */</span>&#125;,</span><br><span class=\"line\">  <span class=\"attr\">_getMIME</span>:<span class=\"keyword\">function</span>(<span class=\"params\">ext</span>)&#123;<span class=\"comment\">/* 获取文件的MIME类型 */</span>&#125;,</span><br><span class=\"line\">  <span class=\"attr\">responseFile</span>:<span class=\"keyword\">function</span>(<span class=\"params\">pathName, res, ext, params</span>)&#123; <span class=\"comment\">/* 读取文件流并输出 */</span> &#125;</span><br><span class=\"line\">  <span class=\"attr\">route</span>:<span class=\"keyword\">function</span>(<span class=\"params\"> pathName, req, res </span>)&#123;<span class=\"comment\">/* 路由到指定的文件并响应输出 */</span>&#125;,</span><br><span class=\"line\">  <span class=\"attr\">createServer</span>:<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;<span class=\"comment\">/* 创建一个http服务 */</span>&#125;,</span><br><span class=\"line\">  <span class=\"attr\">_bindEvents</span>:<span class=\"keyword\">function</span>(<span class=\"params\">server</span>)&#123; <span class=\"comment\">/* 注册响应事件 */</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable constant_\">HTTP</span>.<span class=\"title function_\">init</span>();</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"建立http服务\"><a href=\"#建立http服务\" class=\"headerlink\" title=\"建立http服务\"></a>建立http服务</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> server = http.<span class=\"title function_\">createServer</span>();</span><br><span class=\"line\">server.<span class=\"title function_\">listen</span>(<span class=\"variable constant_\">CONFIG</span>.<span class=\"property\">port</span>!==<span class=\"number\">0</span> ? <span class=\"variable constant_\">CONFIG</span>.<span class=\"property\">port</span> : <span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"注册-监听端口-和-请求响应\"><a href=\"#注册-监听端口-和-请求响应\" class=\"headerlink\" title=\"注册 监听端口 和 请求响应\"></a>注册 监听端口 和 请求响应</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> self = <span class=\"variable language_\">this</span>, defaultUrl = <span class=\"variable constant_\">CONFIG</span>.<span class=\"property\">homedir</span> ? <span class=\"variable constant_\">CONFIG</span>.<span class=\"property\">homedir</span>+<span class=\"string\">&#x27;/&#x27;</span>+<span class=\"variable constant_\">CONFIG</span>.<span class=\"property\">home</span> : <span class=\"variable constant_\">CONFIG</span>.<span class=\"property\">home</span>;</span><br><span class=\"line\"><span class=\"comment\">// 注册监听端口启用事件</span></span><br><span class=\"line\">server.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;listening&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\">  <span class=\"keyword\">var</span> port = server.<span class=\"title function_\">address</span>().<span class=\"property\">port</span>;</span><br><span class=\"line\">  <span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Server running at &#x27;</span>+ port);</span><br><span class=\"line\">  <span class=\"variable constant_\">CONFIG</span>.<span class=\"property\">browser</span> &amp;&amp; self.<span class=\"title function_\">_openURL</span>(<span class=\"string\">&#x27;http://&#x27;</span>+self.<span class=\"title function_\">_getIPAddress</span>()+<span class=\"string\">&#x27;:&#x27;</span>+port+<span class=\"string\">&#x27;/&#x27;</span>+defaultUrl);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"注册请求处理事件\"><a href=\"#注册请求处理事件\" class=\"headerlink\" title=\"注册请求处理事件\"></a>注册请求处理事件</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;request&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">request, response</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 解析请求的URL</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> oURL = url.<span class=\"title function_\">parse</span>(request.<span class=\"property\">url</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> pathName = oURL.<span class=\"property\">pathname</span>.<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!pathName) pathName = defaultUrl;</span><br><span class=\"line\">    self.<span class=\"property\">route</span>.<span class=\"title function_\">bind</span>(self)(pathName, request, response);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"路由处理\"><a href=\"#路由处理\" class=\"headerlink\" title=\"路由处理\"></a>路由处理</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">responseFile</span>:<span class=\"keyword\">function</span>(<span class=\"params\">pathName, res, ext, params</span>)&#123; <span class=\"comment\">/* 读取文件流并输出 */</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> self = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> raw = fs.<span class=\"title function_\">createReadStream</span>(pathName);</span><br><span class=\"line\">  <span class=\"comment\">// 允许跨域调用</span></span><br><span class=\"line\">  res.<span class=\"title function_\">setHeader</span>(<span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>, <span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">  res.<span class=\"title function_\">setHeader</span>(<span class=\"string\">&quot;Content-Type&quot;</span>, self.<span class=\"title function_\">_getMIME</span>(ext));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(ext == <span class=\"string\">&#x27;json&#x27;</span> &amp;&amp; params.<span class=\"property\">delay</span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">      res.<span class=\"title function_\">writeHead</span>(<span class=\"number\">200</span>, <span class=\"string\">&quot;Ok&quot;</span>);</span><br><span class=\"line\">      raw.<span class=\"title function_\">pipe</span>(res);</span><br><span class=\"line\">    &#125;,params.<span class=\"property\">delay</span>);</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    res.<span class=\"title function_\">writeHead</span>(<span class=\"number\">200</span>, <span class=\"string\">&quot;Ok&quot;</span>);</span><br><span class=\"line\">    raw.<span class=\"title function_\">pipe</span>(res);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">route</span>:<span class=\"keyword\">function</span>(<span class=\"params\"> pathName, req, res </span>)&#123;<span class=\"comment\">/* 路由到指定的文件并响应输出 */</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> self = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">  fs.<span class=\"title function_\">stat</span>(pathName, <span class=\"keyword\">function</span>(<span class=\"params\">err, stats</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(err)&#123;</span><br><span class=\"line\">      res.<span class=\"title function_\">writeHead</span>(<span class=\"number\">404</span>, <span class=\"string\">&quot;Not Found&quot;</span>, &#123;<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;text/plain&#x27;</span>&#125;);</span><br><span class=\"line\">      res.<span class=\"title function_\">write</span>(<span class=\"string\">&quot;This request URL &quot;</span> + pathName + <span class=\"string\">&quot; was not found on this server.&quot;</span>);</span><br><span class=\"line\">      res.<span class=\"title function_\">end</span>();</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(stats.<span class=\"title function_\">isDirectory</span>())&#123;</span><br><span class=\"line\">        pathName = path.<span class=\"title function_\">join</span>(pathName, <span class=\"string\">&#x27;/&#x27;</span>, <span class=\"variable constant_\">CONFIG</span>.<span class=\"property\">home</span>);</span><br><span class=\"line\">        self.<span class=\"title function_\">route</span>(pathName, req, res);</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> method = req.<span class=\"property\">method</span>,</span><br><span class=\"line\">            ext = path.<span class=\"title function_\">extname</span>(pathName), </span><br><span class=\"line\">            params=<span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"title function_\">log</span>(method+<span class=\"string\">&#x27;: &#x27;</span>+pathName);<span class=\"comment\">// 打印请求日志</span></span><br><span class=\"line\"></span><br><span class=\"line\">        ext = ext ? ext.<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>) : <span class=\"string\">&#x27;unknown&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 如果是get请求，且url结尾为&#x27;/&#x27;，那么就返回 home 页</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(method==<span class=\"string\">&#x27;GET&#x27;</span>)&#123;</span><br><span class=\"line\">          pathName.<span class=\"title function_\">slice</span>(-<span class=\"number\">1</span>) === <span class=\"string\">&#x27;/&#x27;</span> &amp;&amp;  (pathName = path.<span class=\"title function_\">normalize</span>(pathName + <span class=\"string\">&#x27;/&#x27;</span> +<span class=\"variable constant_\">CONFIG</span>.<span class=\"property\">home</span>));</span><br><span class=\"line\">          params = url.<span class=\"title function_\">parse</span>(req.<span class=\"property\">url</span>, <span class=\"literal\">true</span>).<span class=\"property\">query</span>;</span><br><span class=\"line\">          self.<span class=\"property\">responseFile</span>.<span class=\"title function_\">bind</span>(self)(pathName, res, ext, params);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(method == <span class=\"string\">&#x27;POST&#x27;</span>)&#123;</span><br><span class=\"line\">          <span class=\"keyword\">var</span> _postData = <span class=\"string\">&quot;&quot;</span>, _postMap = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">          req.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;data&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">chunk</span>)&#123;</span><br><span class=\"line\">              _postData += chunk;</span><br><span class=\"line\">          &#125;).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;end&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            params = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;querystring&#x27;</span>).<span class=\"title function_\">parse</span>(_postData);</span><br><span class=\"line\">            responseFile.<span class=\"title function_\">bind</span>(self)(pathName, res, ext, params);</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">          self.<span class=\"property\">responseFile</span>.<span class=\"title function_\">bind</span>(self)(pathName, res, ext, params);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>搭建简单的web服务器</p>\n<h5 id=\"服务器基本流程：\"><a href=\"#服务器基本流程：\" class=\"headerlink\" title=\"服务器基本流程：\"></a>服务器基本流程：</h5><ul>\n<li>响应url请求，对应于硬盘上的文件</li>\n<li>如果文件存在，返回200状态码，并发送文件到浏览器端</li>\n<li>如果文件不存在，返回404状态码，并发送一个404文件到浏览器端</li>\n<li>如果文件读取错误，返回500状态码，发送错误信息到浏览器端</li>\n</ul>\n<h5 id=\"需要实现的基本功能点：\"><a href=\"#需要实现的基本功能点：\" class=\"headerlink\" title=\"需要实现的基本功能点：\"></a>需要实现的基本功能点：</h5><ul>\n<li>开启web服务，加载各种web资源</li>\n<li>自动分配可用端口，也可以配置端口</li>\n<li>加载json文件并模拟网速</li>\n<li>启动时能自动打开默认浏览器浏览，方便调试</li>\n<li>支持常用文件的MIME类型</li>\n<li>允许跨域请求</li>\n<li>host默认为本地IP</li>\n<li>可配置主页</li>\n</ul>\n<h5 id=\"扩展功能\"><a href=\"#扩展功能\" class=\"headerlink\" title=\"扩展功能\"></a>扩展功能</h5><ul>\n<li>支持304缓存响应</li>\n<li>启用GZip功能对指定文件进行压缩</li>\n<li>支持断点续传</li>\n<li>使用快捷命令</li>\n</ul>\n<h3 id=\"代码编写\"><a href=\"#代码编写\" class=\"headerlink\" title=\"代码编写\"></a>代码编写</h3><h5 id=\"基本代码\"><a href=\"#基本代码\" class=\"headerlink\" title=\"基本代码\"></a>基本代码</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;http&#x27;</span>);        <span class=\"comment\">// Http服务器API</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>);            <span class=\"comment\">// 用于处理本地文件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> os = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;os&#x27;</span>);            <span class=\"comment\">//用于获取本地IP地址</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> exec = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;child_process&#x27;</span>).<span class=\"property\">exec</span>; <span class=\"comment\">//用于打开默认浏览器</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);     <span class=\"comment\">//用于处理路径和后缀</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> url = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;url&#x27;</span>);       <span class=\"comment\">//用于解析get请求所带的参数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"variable constant_\">CONFIG</span>, <span class=\"comment\">//默认配置</span></span><br><span class=\"line\">    <span class=\"variable constant_\">HTTP</span>,   <span class=\"comment\">//HTTP静态类</span></span><br><span class=\"line\">    log;    <span class=\"comment\">//日志打印</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable constant_\">CONFIG</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">homedir</span>:<span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">home</span>: <span class=\"string\">&#x27;index.html&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">port</span>: <span class=\"number\">8089</span>,</span><br><span class=\"line\">  <span class=\"attr\">browser</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">log = <span class=\"keyword\">function</span>(<span class=\"params\">txt</span>)&#123; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(txt); &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable constant_\">HTTP</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">init</span>:<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">_getIPAddress</span>:<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;<span class=\"comment\">/* 获取本地IPv4的IP地址 */</span>&#125;,</span><br><span class=\"line\">  <span class=\"attr\">_openURL</span>:<span class=\"keyword\">function</span>(<span class=\"params\">path</span>)&#123;<span class=\"comment\">/* 使用默认浏览器打开URL */</span>&#125;,</span><br><span class=\"line\">  <span class=\"attr\">_getMIME</span>:<span class=\"keyword\">function</span>(<span class=\"params\">ext</span>)&#123;<span class=\"comment\">/* 获取文件的MIME类型 */</span>&#125;,</span><br><span class=\"line\">  <span class=\"attr\">responseFile</span>:<span class=\"keyword\">function</span>(<span class=\"params\">pathName, res, ext, params</span>)&#123; <span class=\"comment\">/* 读取文件流并输出 */</span> &#125;</span><br><span class=\"line\">  <span class=\"attr\">route</span>:<span class=\"keyword\">function</span>(<span class=\"params\"> pathName, req, res </span>)&#123;<span class=\"comment\">/* 路由到指定的文件并响应输出 */</span>&#125;,</span><br><span class=\"line\">  <span class=\"attr\">createServer</span>:<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;<span class=\"comment\">/* 创建一个http服务 */</span>&#125;,</span><br><span class=\"line\">  <span class=\"attr\">_bindEvents</span>:<span class=\"keyword\">function</span>(<span class=\"params\">server</span>)&#123; <span class=\"comment\">/* 注册响应事件 */</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable constant_\">HTTP</span>.<span class=\"title function_\">init</span>();</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"建立http服务\"><a href=\"#建立http服务\" class=\"headerlink\" title=\"建立http服务\"></a>建立http服务</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> server = http.<span class=\"title function_\">createServer</span>();</span><br><span class=\"line\">server.<span class=\"title function_\">listen</span>(<span class=\"variable constant_\">CONFIG</span>.<span class=\"property\">port</span>!==<span class=\"number\">0</span> ? <span class=\"variable constant_\">CONFIG</span>.<span class=\"property\">port</span> : <span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"注册-监听端口-和-请求响应\"><a href=\"#注册-监听端口-和-请求响应\" class=\"headerlink\" title=\"注册 监听端口 和 请求响应\"></a>注册 监听端口 和 请求响应</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> self = <span class=\"variable language_\">this</span>, defaultUrl = <span class=\"variable constant_\">CONFIG</span>.<span class=\"property\">homedir</span> ? <span class=\"variable constant_\">CONFIG</span>.<span class=\"property\">homedir</span>+<span class=\"string\">&#x27;/&#x27;</span>+<span class=\"variable constant_\">CONFIG</span>.<span class=\"property\">home</span> : <span class=\"variable constant_\">CONFIG</span>.<span class=\"property\">home</span>;</span><br><span class=\"line\"><span class=\"comment\">// 注册监听端口启用事件</span></span><br><span class=\"line\">server.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;listening&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\">  <span class=\"keyword\">var</span> port = server.<span class=\"title function_\">address</span>().<span class=\"property\">port</span>;</span><br><span class=\"line\">  <span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Server running at &#x27;</span>+ port);</span><br><span class=\"line\">  <span class=\"variable constant_\">CONFIG</span>.<span class=\"property\">browser</span> &amp;&amp; self.<span class=\"title function_\">_openURL</span>(<span class=\"string\">&#x27;http://&#x27;</span>+self.<span class=\"title function_\">_getIPAddress</span>()+<span class=\"string\">&#x27;:&#x27;</span>+port+<span class=\"string\">&#x27;/&#x27;</span>+defaultUrl);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"注册请求处理事件\"><a href=\"#注册请求处理事件\" class=\"headerlink\" title=\"注册请求处理事件\"></a>注册请求处理事件</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;request&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">request, response</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 解析请求的URL</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> oURL = url.<span class=\"title function_\">parse</span>(request.<span class=\"property\">url</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> pathName = oURL.<span class=\"property\">pathname</span>.<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!pathName) pathName = defaultUrl;</span><br><span class=\"line\">    self.<span class=\"property\">route</span>.<span class=\"title function_\">bind</span>(self)(pathName, request, response);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"路由处理\"><a href=\"#路由处理\" class=\"headerlink\" title=\"路由处理\"></a>路由处理</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">responseFile</span>:<span class=\"keyword\">function</span>(<span class=\"params\">pathName, res, ext, params</span>)&#123; <span class=\"comment\">/* 读取文件流并输出 */</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> self = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> raw = fs.<span class=\"title function_\">createReadStream</span>(pathName);</span><br><span class=\"line\">  <span class=\"comment\">// 允许跨域调用</span></span><br><span class=\"line\">  res.<span class=\"title function_\">setHeader</span>(<span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>, <span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">  res.<span class=\"title function_\">setHeader</span>(<span class=\"string\">&quot;Content-Type&quot;</span>, self.<span class=\"title function_\">_getMIME</span>(ext));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(ext == <span class=\"string\">&#x27;json&#x27;</span> &amp;&amp; params.<span class=\"property\">delay</span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">      res.<span class=\"title function_\">writeHead</span>(<span class=\"number\">200</span>, <span class=\"string\">&quot;Ok&quot;</span>);</span><br><span class=\"line\">      raw.<span class=\"title function_\">pipe</span>(res);</span><br><span class=\"line\">    &#125;,params.<span class=\"property\">delay</span>);</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    res.<span class=\"title function_\">writeHead</span>(<span class=\"number\">200</span>, <span class=\"string\">&quot;Ok&quot;</span>);</span><br><span class=\"line\">    raw.<span class=\"title function_\">pipe</span>(res);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">route</span>:<span class=\"keyword\">function</span>(<span class=\"params\"> pathName, req, res </span>)&#123;<span class=\"comment\">/* 路由到指定的文件并响应输出 */</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> self = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">  fs.<span class=\"title function_\">stat</span>(pathName, <span class=\"keyword\">function</span>(<span class=\"params\">err, stats</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(err)&#123;</span><br><span class=\"line\">      res.<span class=\"title function_\">writeHead</span>(<span class=\"number\">404</span>, <span class=\"string\">&quot;Not Found&quot;</span>, &#123;<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;text/plain&#x27;</span>&#125;);</span><br><span class=\"line\">      res.<span class=\"title function_\">write</span>(<span class=\"string\">&quot;This request URL &quot;</span> + pathName + <span class=\"string\">&quot; was not found on this server.&quot;</span>);</span><br><span class=\"line\">      res.<span class=\"title function_\">end</span>();</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(stats.<span class=\"title function_\">isDirectory</span>())&#123;</span><br><span class=\"line\">        pathName = path.<span class=\"title function_\">join</span>(pathName, <span class=\"string\">&#x27;/&#x27;</span>, <span class=\"variable constant_\">CONFIG</span>.<span class=\"property\">home</span>);</span><br><span class=\"line\">        self.<span class=\"title function_\">route</span>(pathName, req, res);</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> method = req.<span class=\"property\">method</span>,</span><br><span class=\"line\">            ext = path.<span class=\"title function_\">extname</span>(pathName), </span><br><span class=\"line\">            params=<span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"title function_\">log</span>(method+<span class=\"string\">&#x27;: &#x27;</span>+pathName);<span class=\"comment\">// 打印请求日志</span></span><br><span class=\"line\"></span><br><span class=\"line\">        ext = ext ? ext.<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>) : <span class=\"string\">&#x27;unknown&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 如果是get请求，且url结尾为&#x27;/&#x27;，那么就返回 home 页</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(method==<span class=\"string\">&#x27;GET&#x27;</span>)&#123;</span><br><span class=\"line\">          pathName.<span class=\"title function_\">slice</span>(-<span class=\"number\">1</span>) === <span class=\"string\">&#x27;/&#x27;</span> &amp;&amp;  (pathName = path.<span class=\"title function_\">normalize</span>(pathName + <span class=\"string\">&#x27;/&#x27;</span> +<span class=\"variable constant_\">CONFIG</span>.<span class=\"property\">home</span>));</span><br><span class=\"line\">          params = url.<span class=\"title function_\">parse</span>(req.<span class=\"property\">url</span>, <span class=\"literal\">true</span>).<span class=\"property\">query</span>;</span><br><span class=\"line\">          self.<span class=\"property\">responseFile</span>.<span class=\"title function_\">bind</span>(self)(pathName, res, ext, params);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(method == <span class=\"string\">&#x27;POST&#x27;</span>)&#123;</span><br><span class=\"line\">          <span class=\"keyword\">var</span> _postData = <span class=\"string\">&quot;&quot;</span>, _postMap = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">          req.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;data&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">chunk</span>)&#123;</span><br><span class=\"line\">              _postData += chunk;</span><br><span class=\"line\">          &#125;).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;end&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            params = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;querystring&#x27;</span>).<span class=\"title function_\">parse</span>(_postData);</span><br><span class=\"line\">            responseFile.<span class=\"title function_\">bind</span>(self)(pathName, res, ext, params);</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">          self.<span class=\"property\">responseFile</span>.<span class=\"title function_\">bind</span>(self)(pathName, res, ext, params);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"前端工程师技能checklist","date":"2018-10-23T08:59:18.000Z","_content":"\n## 一、JavaScript\n- [ ] 变量与类型\n- [ ] 原型和原型链\n- [ ] 作用域和闭包\n- [ ] 异步与性能\n- [ ] ES6\n\n## 二、前端框架\n- [ ] Vue.js\n- [ ] React\n- [ ] Mobx\n- [ ] Redux\n- [ ] Rx.js\n\n## 三、Css\n- [ ] 盒模型\n- [ ] BFC\n- [ ] Css预处理器\n- [ ] Css module\n- [ ] Css 动画\n- [ ] 响应式\n\n## 四、Node.js\n- [ ] 全局变量\n- [ ] 文件系统\n- [ ] 网络\n- [ ] Events\n- [ ] Buffer\n- [ ] Stream\n- [ ] 子进程与多进程\n- [ ] 异常处理\n- [ ] 上线运维\n- [ ] 性能优化实践\n- [ ] Express与Koa\n\n## 五、TypeScript\n- [ ] interface\n- [ ] 泛型\n- [ ] 语法\n\n## 六、前端工程\n- [ ] 搭建监控系统\n- [ ] 前端性能优化\n- [ ] 前端安全\n- [ ] 自定义项目脚手架\n- [ ] 大型项目的前端构建\n- [ ] 前端持续集成与版本控制\n- [ ] Nginx\n- [ ] Docker\n\n## 七、测试\n- [ ] 单元测试\n- [ ] e2e测试\n\n## 八、算法与数据结构\n#### 8.1 排序\n- [ ] 插入排序\n- [ ] 归并排序\n- [ ] 冒泡排序\n- [ ] 选择排序\n- [ ] 快速排序\n\n#### 8.2 分治\n- [ ] 最大子数组\n- [ ] n * n 矩阵乘法 Strassen算法\n\n#### 8.3 数据结构\n- [ ] 栈\n- [ ] 队列\n- [ ] 优先队列\n- [ ] 链表\n- [ ] 散列表\n- [ ] 二叉搜索树\n  - [ ] 插入\n  - [ ] 查找\n  - [ ] 更新\n  - [ ] 删除\n  - [ ] 遍历\n    - [ ] 前序遍历\n    - [ ] 中序遍历\n    - [ ] 后序遍历\n    - [ ] 层级遍历\n    - [ ] 深度优先遍历\n    - [ ] 广度优先遍历\n- [ ] 图\n\n#### 8.4 贪心\n\n#### 8.5 最短路径\n\n#### 8.6 算法习题\n- [ ] 剑指offer习题\n- [ ] leetcode习题\n\n## 九、编译原理\n- [ ] AST\n- [ ] Babel\n\n## 十、设计模式\n- [ ] 单例模式\n- [ ] 工厂模式\n- [ ] 发布/订阅\n- [ ] 观察者模式\n- [ ] 装饰器模式\n\n## 十一、网络\n- [ ] Http协议，Http 1.0，Http 2.0\n- [ ] DNS\n- [ ] CDN原理\n- [ ] WebSocket","source":"_posts/前端工程师技能checklist.md","raw":"---\ntitle: 前端工程师技能checklist\ndate: 2018-10-23 16:59:18\ntags: 前端技能\ncategories: 前端\n---\n\n## 一、JavaScript\n- [ ] 变量与类型\n- [ ] 原型和原型链\n- [ ] 作用域和闭包\n- [ ] 异步与性能\n- [ ] ES6\n\n## 二、前端框架\n- [ ] Vue.js\n- [ ] React\n- [ ] Mobx\n- [ ] Redux\n- [ ] Rx.js\n\n## 三、Css\n- [ ] 盒模型\n- [ ] BFC\n- [ ] Css预处理器\n- [ ] Css module\n- [ ] Css 动画\n- [ ] 响应式\n\n## 四、Node.js\n- [ ] 全局变量\n- [ ] 文件系统\n- [ ] 网络\n- [ ] Events\n- [ ] Buffer\n- [ ] Stream\n- [ ] 子进程与多进程\n- [ ] 异常处理\n- [ ] 上线运维\n- [ ] 性能优化实践\n- [ ] Express与Koa\n\n## 五、TypeScript\n- [ ] interface\n- [ ] 泛型\n- [ ] 语法\n\n## 六、前端工程\n- [ ] 搭建监控系统\n- [ ] 前端性能优化\n- [ ] 前端安全\n- [ ] 自定义项目脚手架\n- [ ] 大型项目的前端构建\n- [ ] 前端持续集成与版本控制\n- [ ] Nginx\n- [ ] Docker\n\n## 七、测试\n- [ ] 单元测试\n- [ ] e2e测试\n\n## 八、算法与数据结构\n#### 8.1 排序\n- [ ] 插入排序\n- [ ] 归并排序\n- [ ] 冒泡排序\n- [ ] 选择排序\n- [ ] 快速排序\n\n#### 8.2 分治\n- [ ] 最大子数组\n- [ ] n * n 矩阵乘法 Strassen算法\n\n#### 8.3 数据结构\n- [ ] 栈\n- [ ] 队列\n- [ ] 优先队列\n- [ ] 链表\n- [ ] 散列表\n- [ ] 二叉搜索树\n  - [ ] 插入\n  - [ ] 查找\n  - [ ] 更新\n  - [ ] 删除\n  - [ ] 遍历\n    - [ ] 前序遍历\n    - [ ] 中序遍历\n    - [ ] 后序遍历\n    - [ ] 层级遍历\n    - [ ] 深度优先遍历\n    - [ ] 广度优先遍历\n- [ ] 图\n\n#### 8.4 贪心\n\n#### 8.5 最短路径\n\n#### 8.6 算法习题\n- [ ] 剑指offer习题\n- [ ] leetcode习题\n\n## 九、编译原理\n- [ ] AST\n- [ ] Babel\n\n## 十、设计模式\n- [ ] 单例模式\n- [ ] 工厂模式\n- [ ] 发布/订阅\n- [ ] 观察者模式\n- [ ] 装饰器模式\n\n## 十一、网络\n- [ ] Http协议，Http 1.0，Http 2.0\n- [ ] DNS\n- [ ] CDN原理\n- [ ] WebSocket","slug":"前端工程师技能checklist","published":1,"updated":"2022-09-08T14:51:06.971Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krqk0029kp001j4f8s5d","content":"<h2 id=\"一、JavaScript\"><a href=\"#一、JavaScript\" class=\"headerlink\" title=\"一、JavaScript\"></a>一、JavaScript</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 变量与类型</li>\n<li><input disabled=\"\" type=\"checkbox\"> 原型和原型链</li>\n<li><input disabled=\"\" type=\"checkbox\"> 作用域和闭包</li>\n<li><input disabled=\"\" type=\"checkbox\"> 异步与性能</li>\n<li><input disabled=\"\" type=\"checkbox\"> ES6</li>\n</ul>\n<h2 id=\"二、前端框架\"><a href=\"#二、前端框架\" class=\"headerlink\" title=\"二、前端框架\"></a>二、前端框架</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> Vue.js</li>\n<li><input disabled=\"\" type=\"checkbox\"> React</li>\n<li><input disabled=\"\" type=\"checkbox\"> Mobx</li>\n<li><input disabled=\"\" type=\"checkbox\"> Redux</li>\n<li><input disabled=\"\" type=\"checkbox\"> Rx.js</li>\n</ul>\n<h2 id=\"三、Css\"><a href=\"#三、Css\" class=\"headerlink\" title=\"三、Css\"></a>三、Css</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 盒模型</li>\n<li><input disabled=\"\" type=\"checkbox\"> BFC</li>\n<li><input disabled=\"\" type=\"checkbox\"> Css预处理器</li>\n<li><input disabled=\"\" type=\"checkbox\"> Css module</li>\n<li><input disabled=\"\" type=\"checkbox\"> Css 动画</li>\n<li><input disabled=\"\" type=\"checkbox\"> 响应式</li>\n</ul>\n<h2 id=\"四、Node-js\"><a href=\"#四、Node-js\" class=\"headerlink\" title=\"四、Node.js\"></a>四、Node.js</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 全局变量</li>\n<li><input disabled=\"\" type=\"checkbox\"> 文件系统</li>\n<li><input disabled=\"\" type=\"checkbox\"> 网络</li>\n<li><input disabled=\"\" type=\"checkbox\"> Events</li>\n<li><input disabled=\"\" type=\"checkbox\"> Buffer</li>\n<li><input disabled=\"\" type=\"checkbox\"> Stream</li>\n<li><input disabled=\"\" type=\"checkbox\"> 子进程与多进程</li>\n<li><input disabled=\"\" type=\"checkbox\"> 异常处理</li>\n<li><input disabled=\"\" type=\"checkbox\"> 上线运维</li>\n<li><input disabled=\"\" type=\"checkbox\"> 性能优化实践</li>\n<li><input disabled=\"\" type=\"checkbox\"> Express与Koa</li>\n</ul>\n<h2 id=\"五、TypeScript\"><a href=\"#五、TypeScript\" class=\"headerlink\" title=\"五、TypeScript\"></a>五、TypeScript</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> interface</li>\n<li><input disabled=\"\" type=\"checkbox\"> 泛型</li>\n<li><input disabled=\"\" type=\"checkbox\"> 语法</li>\n</ul>\n<h2 id=\"六、前端工程\"><a href=\"#六、前端工程\" class=\"headerlink\" title=\"六、前端工程\"></a>六、前端工程</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 搭建监控系统</li>\n<li><input disabled=\"\" type=\"checkbox\"> 前端性能优化</li>\n<li><input disabled=\"\" type=\"checkbox\"> 前端安全</li>\n<li><input disabled=\"\" type=\"checkbox\"> 自定义项目脚手架</li>\n<li><input disabled=\"\" type=\"checkbox\"> 大型项目的前端构建</li>\n<li><input disabled=\"\" type=\"checkbox\"> 前端持续集成与版本控制</li>\n<li><input disabled=\"\" type=\"checkbox\"> Nginx</li>\n<li><input disabled=\"\" type=\"checkbox\"> Docker</li>\n</ul>\n<h2 id=\"七、测试\"><a href=\"#七、测试\" class=\"headerlink\" title=\"七、测试\"></a>七、测试</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 单元测试</li>\n<li><input disabled=\"\" type=\"checkbox\"> e2e测试</li>\n</ul>\n<h2 id=\"八、算法与数据结构\"><a href=\"#八、算法与数据结构\" class=\"headerlink\" title=\"八、算法与数据结构\"></a>八、算法与数据结构</h2><h4 id=\"8-1-排序\"><a href=\"#8-1-排序\" class=\"headerlink\" title=\"8.1 排序\"></a>8.1 排序</h4><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 插入排序</li>\n<li><input disabled=\"\" type=\"checkbox\"> 归并排序</li>\n<li><input disabled=\"\" type=\"checkbox\"> 冒泡排序</li>\n<li><input disabled=\"\" type=\"checkbox\"> 选择排序</li>\n<li><input disabled=\"\" type=\"checkbox\"> 快速排序</li>\n</ul>\n<h4 id=\"8-2-分治\"><a href=\"#8-2-分治\" class=\"headerlink\" title=\"8.2 分治\"></a>8.2 分治</h4><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 最大子数组</li>\n<li><input disabled=\"\" type=\"checkbox\"> n * n 矩阵乘法 Strassen算法</li>\n</ul>\n<h4 id=\"8-3-数据结构\"><a href=\"#8-3-数据结构\" class=\"headerlink\" title=\"8.3 数据结构\"></a>8.3 数据结构</h4><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 栈</li>\n<li><input disabled=\"\" type=\"checkbox\"> 队列</li>\n<li><input disabled=\"\" type=\"checkbox\"> 优先队列</li>\n<li><input disabled=\"\" type=\"checkbox\"> 链表</li>\n<li><input disabled=\"\" type=\"checkbox\"> 散列表</li>\n<li><input disabled=\"\" type=\"checkbox\"> 二叉搜索树<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 插入</li>\n<li><input disabled=\"\" type=\"checkbox\"> 查找</li>\n<li><input disabled=\"\" type=\"checkbox\"> 更新</li>\n<li><input disabled=\"\" type=\"checkbox\"> 删除</li>\n<li><input disabled=\"\" type=\"checkbox\"> 遍历<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 前序遍历</li>\n<li><input disabled=\"\" type=\"checkbox\"> 中序遍历</li>\n<li><input disabled=\"\" type=\"checkbox\"> 后序遍历</li>\n<li><input disabled=\"\" type=\"checkbox\"> 层级遍历</li>\n<li><input disabled=\"\" type=\"checkbox\"> 深度优先遍历</li>\n<li><input disabled=\"\" type=\"checkbox\"> 广度优先遍历</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> 图</li>\n</ul>\n<h4 id=\"8-4-贪心\"><a href=\"#8-4-贪心\" class=\"headerlink\" title=\"8.4 贪心\"></a>8.4 贪心</h4><h4 id=\"8-5-最短路径\"><a href=\"#8-5-最短路径\" class=\"headerlink\" title=\"8.5 最短路径\"></a>8.5 最短路径</h4><h4 id=\"8-6-算法习题\"><a href=\"#8-6-算法习题\" class=\"headerlink\" title=\"8.6 算法习题\"></a>8.6 算法习题</h4><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 剑指offer习题</li>\n<li><input disabled=\"\" type=\"checkbox\"> leetcode习题</li>\n</ul>\n<h2 id=\"九、编译原理\"><a href=\"#九、编译原理\" class=\"headerlink\" title=\"九、编译原理\"></a>九、编译原理</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> AST</li>\n<li><input disabled=\"\" type=\"checkbox\"> Babel</li>\n</ul>\n<h2 id=\"十、设计模式\"><a href=\"#十、设计模式\" class=\"headerlink\" title=\"十、设计模式\"></a>十、设计模式</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 单例模式</li>\n<li><input disabled=\"\" type=\"checkbox\"> 工厂模式</li>\n<li><input disabled=\"\" type=\"checkbox\"> 发布&#x2F;订阅</li>\n<li><input disabled=\"\" type=\"checkbox\"> 观察者模式</li>\n<li><input disabled=\"\" type=\"checkbox\"> 装饰器模式</li>\n</ul>\n<h2 id=\"十一、网络\"><a href=\"#十一、网络\" class=\"headerlink\" title=\"十一、网络\"></a>十一、网络</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> Http协议，Http 1.0，Http 2.0</li>\n<li><input disabled=\"\" type=\"checkbox\"> DNS</li>\n<li><input disabled=\"\" type=\"checkbox\"> CDN原理</li>\n<li><input disabled=\"\" type=\"checkbox\"> WebSocket</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"一、JavaScript\"><a href=\"#一、JavaScript\" class=\"headerlink\" title=\"一、JavaScript\"></a>一、JavaScript</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 变量与类型</li>\n<li><input disabled=\"\" type=\"checkbox\"> 原型和原型链</li>\n<li><input disabled=\"\" type=\"checkbox\"> 作用域和闭包</li>\n<li><input disabled=\"\" type=\"checkbox\"> 异步与性能</li>\n<li><input disabled=\"\" type=\"checkbox\"> ES6</li>\n</ul>\n<h2 id=\"二、前端框架\"><a href=\"#二、前端框架\" class=\"headerlink\" title=\"二、前端框架\"></a>二、前端框架</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> Vue.js</li>\n<li><input disabled=\"\" type=\"checkbox\"> React</li>\n<li><input disabled=\"\" type=\"checkbox\"> Mobx</li>\n<li><input disabled=\"\" type=\"checkbox\"> Redux</li>\n<li><input disabled=\"\" type=\"checkbox\"> Rx.js</li>\n</ul>\n<h2 id=\"三、Css\"><a href=\"#三、Css\" class=\"headerlink\" title=\"三、Css\"></a>三、Css</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 盒模型</li>\n<li><input disabled=\"\" type=\"checkbox\"> BFC</li>\n<li><input disabled=\"\" type=\"checkbox\"> Css预处理器</li>\n<li><input disabled=\"\" type=\"checkbox\"> Css module</li>\n<li><input disabled=\"\" type=\"checkbox\"> Css 动画</li>\n<li><input disabled=\"\" type=\"checkbox\"> 响应式</li>\n</ul>\n<h2 id=\"四、Node-js\"><a href=\"#四、Node-js\" class=\"headerlink\" title=\"四、Node.js\"></a>四、Node.js</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 全局变量</li>\n<li><input disabled=\"\" type=\"checkbox\"> 文件系统</li>\n<li><input disabled=\"\" type=\"checkbox\"> 网络</li>\n<li><input disabled=\"\" type=\"checkbox\"> Events</li>\n<li><input disabled=\"\" type=\"checkbox\"> Buffer</li>\n<li><input disabled=\"\" type=\"checkbox\"> Stream</li>\n<li><input disabled=\"\" type=\"checkbox\"> 子进程与多进程</li>\n<li><input disabled=\"\" type=\"checkbox\"> 异常处理</li>\n<li><input disabled=\"\" type=\"checkbox\"> 上线运维</li>\n<li><input disabled=\"\" type=\"checkbox\"> 性能优化实践</li>\n<li><input disabled=\"\" type=\"checkbox\"> Express与Koa</li>\n</ul>\n<h2 id=\"五、TypeScript\"><a href=\"#五、TypeScript\" class=\"headerlink\" title=\"五、TypeScript\"></a>五、TypeScript</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> interface</li>\n<li><input disabled=\"\" type=\"checkbox\"> 泛型</li>\n<li><input disabled=\"\" type=\"checkbox\"> 语法</li>\n</ul>\n<h2 id=\"六、前端工程\"><a href=\"#六、前端工程\" class=\"headerlink\" title=\"六、前端工程\"></a>六、前端工程</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 搭建监控系统</li>\n<li><input disabled=\"\" type=\"checkbox\"> 前端性能优化</li>\n<li><input disabled=\"\" type=\"checkbox\"> 前端安全</li>\n<li><input disabled=\"\" type=\"checkbox\"> 自定义项目脚手架</li>\n<li><input disabled=\"\" type=\"checkbox\"> 大型项目的前端构建</li>\n<li><input disabled=\"\" type=\"checkbox\"> 前端持续集成与版本控制</li>\n<li><input disabled=\"\" type=\"checkbox\"> Nginx</li>\n<li><input disabled=\"\" type=\"checkbox\"> Docker</li>\n</ul>\n<h2 id=\"七、测试\"><a href=\"#七、测试\" class=\"headerlink\" title=\"七、测试\"></a>七、测试</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 单元测试</li>\n<li><input disabled=\"\" type=\"checkbox\"> e2e测试</li>\n</ul>\n<h2 id=\"八、算法与数据结构\"><a href=\"#八、算法与数据结构\" class=\"headerlink\" title=\"八、算法与数据结构\"></a>八、算法与数据结构</h2><h4 id=\"8-1-排序\"><a href=\"#8-1-排序\" class=\"headerlink\" title=\"8.1 排序\"></a>8.1 排序</h4><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 插入排序</li>\n<li><input disabled=\"\" type=\"checkbox\"> 归并排序</li>\n<li><input disabled=\"\" type=\"checkbox\"> 冒泡排序</li>\n<li><input disabled=\"\" type=\"checkbox\"> 选择排序</li>\n<li><input disabled=\"\" type=\"checkbox\"> 快速排序</li>\n</ul>\n<h4 id=\"8-2-分治\"><a href=\"#8-2-分治\" class=\"headerlink\" title=\"8.2 分治\"></a>8.2 分治</h4><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 最大子数组</li>\n<li><input disabled=\"\" type=\"checkbox\"> n * n 矩阵乘法 Strassen算法</li>\n</ul>\n<h4 id=\"8-3-数据结构\"><a href=\"#8-3-数据结构\" class=\"headerlink\" title=\"8.3 数据结构\"></a>8.3 数据结构</h4><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 栈</li>\n<li><input disabled=\"\" type=\"checkbox\"> 队列</li>\n<li><input disabled=\"\" type=\"checkbox\"> 优先队列</li>\n<li><input disabled=\"\" type=\"checkbox\"> 链表</li>\n<li><input disabled=\"\" type=\"checkbox\"> 散列表</li>\n<li><input disabled=\"\" type=\"checkbox\"> 二叉搜索树<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 插入</li>\n<li><input disabled=\"\" type=\"checkbox\"> 查找</li>\n<li><input disabled=\"\" type=\"checkbox\"> 更新</li>\n<li><input disabled=\"\" type=\"checkbox\"> 删除</li>\n<li><input disabled=\"\" type=\"checkbox\"> 遍历<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 前序遍历</li>\n<li><input disabled=\"\" type=\"checkbox\"> 中序遍历</li>\n<li><input disabled=\"\" type=\"checkbox\"> 后序遍历</li>\n<li><input disabled=\"\" type=\"checkbox\"> 层级遍历</li>\n<li><input disabled=\"\" type=\"checkbox\"> 深度优先遍历</li>\n<li><input disabled=\"\" type=\"checkbox\"> 广度优先遍历</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> 图</li>\n</ul>\n<h4 id=\"8-4-贪心\"><a href=\"#8-4-贪心\" class=\"headerlink\" title=\"8.4 贪心\"></a>8.4 贪心</h4><h4 id=\"8-5-最短路径\"><a href=\"#8-5-最短路径\" class=\"headerlink\" title=\"8.5 最短路径\"></a>8.5 最短路径</h4><h4 id=\"8-6-算法习题\"><a href=\"#8-6-算法习题\" class=\"headerlink\" title=\"8.6 算法习题\"></a>8.6 算法习题</h4><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 剑指offer习题</li>\n<li><input disabled=\"\" type=\"checkbox\"> leetcode习题</li>\n</ul>\n<h2 id=\"九、编译原理\"><a href=\"#九、编译原理\" class=\"headerlink\" title=\"九、编译原理\"></a>九、编译原理</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> AST</li>\n<li><input disabled=\"\" type=\"checkbox\"> Babel</li>\n</ul>\n<h2 id=\"十、设计模式\"><a href=\"#十、设计模式\" class=\"headerlink\" title=\"十、设计模式\"></a>十、设计模式</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 单例模式</li>\n<li><input disabled=\"\" type=\"checkbox\"> 工厂模式</li>\n<li><input disabled=\"\" type=\"checkbox\"> 发布&#x2F;订阅</li>\n<li><input disabled=\"\" type=\"checkbox\"> 观察者模式</li>\n<li><input disabled=\"\" type=\"checkbox\"> 装饰器模式</li>\n</ul>\n<h2 id=\"十一、网络\"><a href=\"#十一、网络\" class=\"headerlink\" title=\"十一、网络\"></a>十一、网络</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> Http协议，Http 1.0，Http 2.0</li>\n<li><input disabled=\"\" type=\"checkbox\"> DNS</li>\n<li><input disabled=\"\" type=\"checkbox\"> CDN原理</li>\n<li><input disabled=\"\" type=\"checkbox\"> WebSocket</li>\n</ul>\n"},{"title":"前端项目接入代码测试覆盖率","date":"2019-06-28T10:38:20.000Z","_content":"\n[Cypress文档](https://docs.cypress.io/)\n\n# e2e测试覆盖率demo\n[code-coverage](https://github.com/xieQin/code-coverage)\n\n# 接入流程\n测试框架：Cypress\n\n框架文档地址：(https://www.cypress.io/)\n\n引入Cypress\n新项目：使用vue-cli3 创建项目，创建时勾选e2e测试，测试框架选择Cypress\n已有项目： \n```bash\nnpm install cypress --save-dev\n```\n添加测试覆盖率：\n安装npm模块：\n```json\n@cypress/code-coverage\nistanbul-instrumenter-loader\nistanbul-lib-coverage\nnyc\nbabel-plugin-istanbul\n```\n增加.nycrc 文件，文件内容如下：\n```\n{\n\"extension\": [\".js\", \".vue\"]\n}\n```\n增加cypress.json, 文件内容如下：\n```json\n{\n  \"pluginsFile\": \"tests/e2e/plugins/index.js\",\n  \"fixturesFolder\": \"tests/e2e/fixtures\",\n  \"integrationFolder\": \"tests/e2e/integration\",\n  \"screenshotsFolder\": \"tests/e2e/screenshots\",\n  \"videosFolder\": \"tests/e2e/videos\",\n  \"supportFile\": \"tests/e2e/support/index.js\",\n  \"baseUrl\": \"http://localhost:8081\",\n  \"viewportHeight\": 666,\n  \"viewportWidth\": 375\n}\n```\ntests/e2e/plugins/index.js 添加 \n```js\non('task', require('@cypress/code-coverage/task'))\n```\ntests/e2e/support/index.js 添加\n```js\nimport '@cypress/code-coverage/support'\n```\nCypress文件目录\ntests/e2e/fixtures/：测试辅助文件目录\ntests/e2e/integration/ : 测试用例文件目录\ntests/e2e/plugins/：插件目录\ntests/e2e/support/：\n  tests/e2e/support/command.js\n  tests/e2e/support/index.js\ncypress.json: cypress配置\n","source":"_posts/前端项目接入代码测试覆盖率.md","raw":"---\ntitle: 前端项目接入代码测试覆盖率\ndate: 2019-06-28 18:38:20\ntags: Cypress\ncategories: Test\n---\n\n[Cypress文档](https://docs.cypress.io/)\n\n# e2e测试覆盖率demo\n[code-coverage](https://github.com/xieQin/code-coverage)\n\n# 接入流程\n测试框架：Cypress\n\n框架文档地址：(https://www.cypress.io/)\n\n引入Cypress\n新项目：使用vue-cli3 创建项目，创建时勾选e2e测试，测试框架选择Cypress\n已有项目： \n```bash\nnpm install cypress --save-dev\n```\n添加测试覆盖率：\n安装npm模块：\n```json\n@cypress/code-coverage\nistanbul-instrumenter-loader\nistanbul-lib-coverage\nnyc\nbabel-plugin-istanbul\n```\n增加.nycrc 文件，文件内容如下：\n```\n{\n\"extension\": [\".js\", \".vue\"]\n}\n```\n增加cypress.json, 文件内容如下：\n```json\n{\n  \"pluginsFile\": \"tests/e2e/plugins/index.js\",\n  \"fixturesFolder\": \"tests/e2e/fixtures\",\n  \"integrationFolder\": \"tests/e2e/integration\",\n  \"screenshotsFolder\": \"tests/e2e/screenshots\",\n  \"videosFolder\": \"tests/e2e/videos\",\n  \"supportFile\": \"tests/e2e/support/index.js\",\n  \"baseUrl\": \"http://localhost:8081\",\n  \"viewportHeight\": 666,\n  \"viewportWidth\": 375\n}\n```\ntests/e2e/plugins/index.js 添加 \n```js\non('task', require('@cypress/code-coverage/task'))\n```\ntests/e2e/support/index.js 添加\n```js\nimport '@cypress/code-coverage/support'\n```\nCypress文件目录\ntests/e2e/fixtures/：测试辅助文件目录\ntests/e2e/integration/ : 测试用例文件目录\ntests/e2e/plugins/：插件目录\ntests/e2e/support/：\n  tests/e2e/support/command.js\n  tests/e2e/support/index.js\ncypress.json: cypress配置\n","slug":"前端项目接入代码测试覆盖率","published":1,"updated":"2022-09-08T14:51:06.971Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krqn002ckp006bmuh1vw","content":"<p><a href=\"https://docs.cypress.io/\">Cypress文档</a></p>\n<h1 id=\"e2e测试覆盖率demo\"><a href=\"#e2e测试覆盖率demo\" class=\"headerlink\" title=\"e2e测试覆盖率demo\"></a>e2e测试覆盖率demo</h1><p><a href=\"https://github.com/xieQin/code-coverage\">code-coverage</a></p>\n<h1 id=\"接入流程\"><a href=\"#接入流程\" class=\"headerlink\" title=\"接入流程\"></a>接入流程</h1><p>测试框架：Cypress</p>\n<p>框架文档地址：(<a href=\"https://www.cypress.io/\">https://www.cypress.io/</a>)</p>\n<p>引入Cypress<br>新项目：使用vue-cli3 创建项目，创建时勾选e2e测试，测试框架选择Cypress<br>已有项目： </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install cypress --save-dev</span><br></pre></td></tr></table></figure>\n<p>添加测试覆盖率：<br>安装npm模块：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@cypress/code-coverage</span><br><span class=\"line\">istanbul-instrumenter-loader</span><br><span class=\"line\">istanbul-lib-coverage</span><br><span class=\"line\">nyc</span><br><span class=\"line\">babel-plugin-istanbul</span><br></pre></td></tr></table></figure>\n<p>增加.nycrc 文件，文件内容如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">&quot;extension&quot;: [&quot;.js&quot;, &quot;.vue&quot;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>增加cypress.json, 文件内容如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;pluginsFile&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tests/e2e/plugins/index.js&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;fixturesFolder&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tests/e2e/fixtures&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;integrationFolder&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tests/e2e/integration&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;screenshotsFolder&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tests/e2e/screenshots&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;videosFolder&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tests/e2e/videos&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;supportFile&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tests/e2e/support/index.js&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;baseUrl&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;http://localhost:8081&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;viewportHeight&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">666</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;viewportWidth&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">375</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>tests&#x2F;e2e&#x2F;plugins&#x2F;index.js 添加 </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">on</span>(<span class=\"string\">&#x27;task&#x27;</span>, <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;@cypress/code-coverage/task&#x27;</span>))</span><br></pre></td></tr></table></figure>\n<p>tests&#x2F;e2e&#x2F;support&#x2F;index.js 添加</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;@cypress/code-coverage/support&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>Cypress文件目录<br>tests&#x2F;e2e&#x2F;fixtures&#x2F;：测试辅助文件目录<br>tests&#x2F;e2e&#x2F;integration&#x2F; : 测试用例文件目录<br>tests&#x2F;e2e&#x2F;plugins&#x2F;：插件目录<br>tests&#x2F;e2e&#x2F;support&#x2F;：<br>  tests&#x2F;e2e&#x2F;support&#x2F;command.js<br>  tests&#x2F;e2e&#x2F;support&#x2F;index.js<br>cypress.json: cypress配置</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://docs.cypress.io/\">Cypress文档</a></p>\n<h1 id=\"e2e测试覆盖率demo\"><a href=\"#e2e测试覆盖率demo\" class=\"headerlink\" title=\"e2e测试覆盖率demo\"></a>e2e测试覆盖率demo</h1><p><a href=\"https://github.com/xieQin/code-coverage\">code-coverage</a></p>\n<h1 id=\"接入流程\"><a href=\"#接入流程\" class=\"headerlink\" title=\"接入流程\"></a>接入流程</h1><p>测试框架：Cypress</p>\n<p>框架文档地址：(<a href=\"https://www.cypress.io/\">https://www.cypress.io/</a>)</p>\n<p>引入Cypress<br>新项目：使用vue-cli3 创建项目，创建时勾选e2e测试，测试框架选择Cypress<br>已有项目： </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install cypress --save-dev</span><br></pre></td></tr></table></figure>\n<p>添加测试覆盖率：<br>安装npm模块：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@cypress/code-coverage</span><br><span class=\"line\">istanbul-instrumenter-loader</span><br><span class=\"line\">istanbul-lib-coverage</span><br><span class=\"line\">nyc</span><br><span class=\"line\">babel-plugin-istanbul</span><br></pre></td></tr></table></figure>\n<p>增加.nycrc 文件，文件内容如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">&quot;extension&quot;: [&quot;.js&quot;, &quot;.vue&quot;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>增加cypress.json, 文件内容如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;pluginsFile&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tests/e2e/plugins/index.js&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;fixturesFolder&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tests/e2e/fixtures&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;integrationFolder&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tests/e2e/integration&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;screenshotsFolder&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tests/e2e/screenshots&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;videosFolder&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tests/e2e/videos&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;supportFile&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tests/e2e/support/index.js&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;baseUrl&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;http://localhost:8081&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;viewportHeight&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">666</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;viewportWidth&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">375</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>tests&#x2F;e2e&#x2F;plugins&#x2F;index.js 添加 </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">on</span>(<span class=\"string\">&#x27;task&#x27;</span>, <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;@cypress/code-coverage/task&#x27;</span>))</span><br></pre></td></tr></table></figure>\n<p>tests&#x2F;e2e&#x2F;support&#x2F;index.js 添加</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;@cypress/code-coverage/support&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>Cypress文件目录<br>tests&#x2F;e2e&#x2F;fixtures&#x2F;：测试辅助文件目录<br>tests&#x2F;e2e&#x2F;integration&#x2F; : 测试用例文件目录<br>tests&#x2F;e2e&#x2F;plugins&#x2F;：插件目录<br>tests&#x2F;e2e&#x2F;support&#x2F;：<br>  tests&#x2F;e2e&#x2F;support&#x2F;command.js<br>  tests&#x2F;e2e&#x2F;support&#x2F;index.js<br>cypress.json: cypress配置</p>\n"},{"title":"客户端检测","date":"2015-06-04T05:36:19.000Z","_content":"\n# 客户端检测\n-----------\n\n### 能力检测（特性检测）\n>识别客户端浏览器的能力\n\n### 怪癖检测\n>识别浏览器的特殊行为\n\n### 用户代理检测\n通过检测用户代理字符串来确定实际使用的浏览器\n\n- 识别呈现引擎\nIE、Gecko、Webkit、KHTML、Opera\n- 识别浏览器\n- 识别平台\n- 识别Windows操作系统\n- 识别移动设备\n- 识别游戏主机系统\n\n```js\nvar client = function () {\n  //呈现引擎\n  var engine = {\n    ie: 0,\n    gecko: 0,\n    webkit: 0,\n    kthml: 0,\n    opera: 0,\n\n    //版本号\n    ver: null\n  }\n\n  //浏览器\n  var browser = {\n    //主要浏览器\n    ie: 0,\n    firefox: 0,\n    safari: 0,\n    opera: 0,\n    chrome: 0,\n\n    //版本号\n    ver: null\n  }\n\n  //平台、设备、主机\n  var system = {\n    win: false,\n    mac: false,\n    x11: false,\n\n    //移动设备\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    ios: false,\n    android: false,\n    nokiaN: false,\n    winMobile: false,\n\n    //主机\n    wii: false,\n    ps: false\n  }\n\n  //检测呈现引擎和浏览器\n  var ua = navigator.userAgent\n  if (window.opera) {\n    engine.ver = browser.ver = window.opera.version()\n    engine.opera = browser.opera = parseFloat(engine.ver)\n  } else if (/AppleWebkit\\/(\\S+)/.test(ua)) {\n    engine.ver = RegExp[\"$1\"]\n    engine.webkit = parseFloat(engine.ver)\n\n    //确定是Chrome还是Safari\n    if (/Chrome\\/(\\S+)/.test(ua)) {\n      browser.ver = RegExp[\"$1\"]\n      browser.chrome = parseFloat(browser.ver)\n    } else if (/Version\\/(\\S+)/.test(ua)) {\n      browser.ver = RegExp[\"$1\"]\n      browser.safari = parseFloat(browser.ver)\n    } else {\n      //近似确定版本号\n      var safariVersion = 1\n      if(engine.webkit < 100) {\n        safariVersion = 1\n      } else if (engine.webkit < 312) {\n        safariVersion = 1.2\n      } else if (engine.webkit < 412) {\n        safariVersion = 1.3\n      } else {\n        safariVersion = 2\n      }\n\n      browser.safari = browser.ver = safariVersion\n    }\n  } else if (/KHTML\\/(\\S+)/.test(ua) || /Konqueror\\/([^;]+)/.test(ua)) {\n    engine.ver = browser.ver = RegExp[\"$1\"]\n    engine.khtml = browser.konq = parseFloat(engine.ver)\n  } else if (/rv:([^\\)]+)\\) Gecko\\/d{8}/.test(ua)) {\n    engine.ver = RegExp[\"$1\"]\n    engine.gecko = parseFloat(engine.ver)\n\n    //确定是不是Firefox\n    if (/Firefox\\/(\\S+)/.test(ua)) {\n      browser.ver = RegExp[\"$1\"]\n      browser.firefox = parseFloat(browser.ver)\n    }\n  } else if (/MSIE ([^;]+)/.test(ua)) {\n    engine.ver = browser.ver = RegExp[\"$1\"]\n    engine.ie = browser.ie = parseFloat(engine.ver)\n  }\n\n  //检测浏览器\n  browser.ie = engine.ie\n  browser.opera= engine.opera\n\n  //检测平台\n  var p = navigator.platform\n  system.win = p.indexOf(\"Win\") == 0\n  system.mac = p.indexOf(\"Mac\") == 0\n  system.x11 = (p == \"X11\") || (p.indexOf(\"Linux\") == 0)\n\n  //检测Windows操作系统\n  if (system.win) {\n    if (/Win(?:dows)?([^do]{2})\\s?(\\d+\\.\\d+)?/.test(ua)) {\n      if (RegExp[\"$1\"] == \"NT\") {\n        switch (RegExp[\"$2\"]) {\n          case \"5.0\":\n            system.win = \"2000\"\n            break;\n          case \"5.1\":\n            system.win = \"XP\"\n            break;\n          case \"6.0\":\n            system.win = \"Vista\"\n            break;\n          case \"6.1\":\n            system.win = \"7\"\n            break;\n          default:\n            system.win = \"NT\"\n            break;\n        }\n      } else if (RegExp[\"$1\"] == \"9x\") {\n        system.win = \"ME\"\n      } else {\n        system.win = RegExp[\"$1\"]\n      }\n    }\n  }\n\n  //移动设备\n  system.iphone = ua.indexOf(\"iPhone\") > -1\n  system.ipod = ua.indexOf(\"iPod\") > -1\n  system.ipad = ua.indexOf(\"iPad\") > -1\n  system.nokiaN = ua.indexOf(\"NokiaN\") > -1\n\n  //windows mobile\n  if (system.win == \"CE\") {\n    system.winMbile = system.win\n  } else if (system.win == \"Ph\") {\n    if (/Windows Phone OS (\\d+.\\d+)/.test(ua)) {\n      system.win = \"Phone\"\n      system.winMobile = parseFloat(RegExp([\"$1\"]))\n    }\n  }\n\n  //检测iOS版本\n  if (system.mac && ua.indexOf(\"Mobile\") > -1) {\n    if(/CPU (?:iPhone )?OS (\\d+\\.\\d+)/.test(ua)) {\n      system.ios = parseFloat(RegExp.$1.replace(\"_\", \".\"))\n    } else {\n      system.ios = 2\n    }\n  }\n\n  //检测Android版本\n  if (/Android (\\d+\\.\\d+)/.test(ua)) {\n    system.android = parseFloat(RegExp.$1)\n  }\n  //主机游戏系统\n  system.wii = ua.indexOf(\"Wii\") > -1\n  system.ps = /playstation/i.test(ua)\n\n  //返回\n  return {\n    engine: engine,\n    browser: browser,\n    system: system\n  }\n}\n```","source":"_posts/客户端检测.md","raw":"---\ntitle: 客户端检测\ndate: 2015-06-04 13:36:19\ntags: Javascript\ncategories: 编程\n---\n\n# 客户端检测\n-----------\n\n### 能力检测（特性检测）\n>识别客户端浏览器的能力\n\n### 怪癖检测\n>识别浏览器的特殊行为\n\n### 用户代理检测\n通过检测用户代理字符串来确定实际使用的浏览器\n\n- 识别呈现引擎\nIE、Gecko、Webkit、KHTML、Opera\n- 识别浏览器\n- 识别平台\n- 识别Windows操作系统\n- 识别移动设备\n- 识别游戏主机系统\n\n```js\nvar client = function () {\n  //呈现引擎\n  var engine = {\n    ie: 0,\n    gecko: 0,\n    webkit: 0,\n    kthml: 0,\n    opera: 0,\n\n    //版本号\n    ver: null\n  }\n\n  //浏览器\n  var browser = {\n    //主要浏览器\n    ie: 0,\n    firefox: 0,\n    safari: 0,\n    opera: 0,\n    chrome: 0,\n\n    //版本号\n    ver: null\n  }\n\n  //平台、设备、主机\n  var system = {\n    win: false,\n    mac: false,\n    x11: false,\n\n    //移动设备\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    ios: false,\n    android: false,\n    nokiaN: false,\n    winMobile: false,\n\n    //主机\n    wii: false,\n    ps: false\n  }\n\n  //检测呈现引擎和浏览器\n  var ua = navigator.userAgent\n  if (window.opera) {\n    engine.ver = browser.ver = window.opera.version()\n    engine.opera = browser.opera = parseFloat(engine.ver)\n  } else if (/AppleWebkit\\/(\\S+)/.test(ua)) {\n    engine.ver = RegExp[\"$1\"]\n    engine.webkit = parseFloat(engine.ver)\n\n    //确定是Chrome还是Safari\n    if (/Chrome\\/(\\S+)/.test(ua)) {\n      browser.ver = RegExp[\"$1\"]\n      browser.chrome = parseFloat(browser.ver)\n    } else if (/Version\\/(\\S+)/.test(ua)) {\n      browser.ver = RegExp[\"$1\"]\n      browser.safari = parseFloat(browser.ver)\n    } else {\n      //近似确定版本号\n      var safariVersion = 1\n      if(engine.webkit < 100) {\n        safariVersion = 1\n      } else if (engine.webkit < 312) {\n        safariVersion = 1.2\n      } else if (engine.webkit < 412) {\n        safariVersion = 1.3\n      } else {\n        safariVersion = 2\n      }\n\n      browser.safari = browser.ver = safariVersion\n    }\n  } else if (/KHTML\\/(\\S+)/.test(ua) || /Konqueror\\/([^;]+)/.test(ua)) {\n    engine.ver = browser.ver = RegExp[\"$1\"]\n    engine.khtml = browser.konq = parseFloat(engine.ver)\n  } else if (/rv:([^\\)]+)\\) Gecko\\/d{8}/.test(ua)) {\n    engine.ver = RegExp[\"$1\"]\n    engine.gecko = parseFloat(engine.ver)\n\n    //确定是不是Firefox\n    if (/Firefox\\/(\\S+)/.test(ua)) {\n      browser.ver = RegExp[\"$1\"]\n      browser.firefox = parseFloat(browser.ver)\n    }\n  } else if (/MSIE ([^;]+)/.test(ua)) {\n    engine.ver = browser.ver = RegExp[\"$1\"]\n    engine.ie = browser.ie = parseFloat(engine.ver)\n  }\n\n  //检测浏览器\n  browser.ie = engine.ie\n  browser.opera= engine.opera\n\n  //检测平台\n  var p = navigator.platform\n  system.win = p.indexOf(\"Win\") == 0\n  system.mac = p.indexOf(\"Mac\") == 0\n  system.x11 = (p == \"X11\") || (p.indexOf(\"Linux\") == 0)\n\n  //检测Windows操作系统\n  if (system.win) {\n    if (/Win(?:dows)?([^do]{2})\\s?(\\d+\\.\\d+)?/.test(ua)) {\n      if (RegExp[\"$1\"] == \"NT\") {\n        switch (RegExp[\"$2\"]) {\n          case \"5.0\":\n            system.win = \"2000\"\n            break;\n          case \"5.1\":\n            system.win = \"XP\"\n            break;\n          case \"6.0\":\n            system.win = \"Vista\"\n            break;\n          case \"6.1\":\n            system.win = \"7\"\n            break;\n          default:\n            system.win = \"NT\"\n            break;\n        }\n      } else if (RegExp[\"$1\"] == \"9x\") {\n        system.win = \"ME\"\n      } else {\n        system.win = RegExp[\"$1\"]\n      }\n    }\n  }\n\n  //移动设备\n  system.iphone = ua.indexOf(\"iPhone\") > -1\n  system.ipod = ua.indexOf(\"iPod\") > -1\n  system.ipad = ua.indexOf(\"iPad\") > -1\n  system.nokiaN = ua.indexOf(\"NokiaN\") > -1\n\n  //windows mobile\n  if (system.win == \"CE\") {\n    system.winMbile = system.win\n  } else if (system.win == \"Ph\") {\n    if (/Windows Phone OS (\\d+.\\d+)/.test(ua)) {\n      system.win = \"Phone\"\n      system.winMobile = parseFloat(RegExp([\"$1\"]))\n    }\n  }\n\n  //检测iOS版本\n  if (system.mac && ua.indexOf(\"Mobile\") > -1) {\n    if(/CPU (?:iPhone )?OS (\\d+\\.\\d+)/.test(ua)) {\n      system.ios = parseFloat(RegExp.$1.replace(\"_\", \".\"))\n    } else {\n      system.ios = 2\n    }\n  }\n\n  //检测Android版本\n  if (/Android (\\d+\\.\\d+)/.test(ua)) {\n    system.android = parseFloat(RegExp.$1)\n  }\n  //主机游戏系统\n  system.wii = ua.indexOf(\"Wii\") > -1\n  system.ps = /playstation/i.test(ua)\n\n  //返回\n  return {\n    engine: engine,\n    browser: browser,\n    system: system\n  }\n}\n```","slug":"客户端检测","published":1,"updated":"2022-09-08T14:51:06.972Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krqo002fkp00c65t216f","content":"<h1 id=\"客户端检测\"><a href=\"#客户端检测\" class=\"headerlink\" title=\"客户端检测\"></a>客户端检测</h1><hr>\n<h3 id=\"能力检测（特性检测）\"><a href=\"#能力检测（特性检测）\" class=\"headerlink\" title=\"能力检测（特性检测）\"></a>能力检测（特性检测）</h3><blockquote>\n<p>识别客户端浏览器的能力</p>\n</blockquote>\n<h3 id=\"怪癖检测\"><a href=\"#怪癖检测\" class=\"headerlink\" title=\"怪癖检测\"></a>怪癖检测</h3><blockquote>\n<p>识别浏览器的特殊行为</p>\n</blockquote>\n<h3 id=\"用户代理检测\"><a href=\"#用户代理检测\" class=\"headerlink\" title=\"用户代理检测\"></a>用户代理检测</h3><p>通过检测用户代理字符串来确定实际使用的浏览器</p>\n<ul>\n<li>识别呈现引擎<br>IE、Gecko、Webkit、KHTML、Opera</li>\n<li>识别浏览器</li>\n<li>识别平台</li>\n<li>识别Windows操作系统</li>\n<li>识别移动设备</li>\n<li>识别游戏主机系统</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> client = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//呈现引擎</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> engine = &#123;</span><br><span class=\"line\">    <span class=\"attr\">ie</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">gecko</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">webkit</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">kthml</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">opera</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//版本号</span></span><br><span class=\"line\">    <span class=\"attr\">ver</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//浏览器</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> browser = &#123;</span><br><span class=\"line\">    <span class=\"comment\">//主要浏览器</span></span><br><span class=\"line\">    <span class=\"attr\">ie</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">firefox</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">safari</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">opera</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">chrome</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//版本号</span></span><br><span class=\"line\">    <span class=\"attr\">ver</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//平台、设备、主机</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> system = &#123;</span><br><span class=\"line\">    <span class=\"attr\">win</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">mac</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">x11</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//移动设备</span></span><br><span class=\"line\">    <span class=\"attr\">iphone</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">ipod</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">ipad</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">ios</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">android</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">nokiaN</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">winMobile</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//主机</span></span><br><span class=\"line\">    <span class=\"attr\">wii</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">ps</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//检测呈现引擎和浏览器</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> ua = navigator.<span class=\"property\">userAgent</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">window</span>.<span class=\"property\">opera</span>) &#123;</span><br><span class=\"line\">    engine.<span class=\"property\">ver</span> = browser.<span class=\"property\">ver</span> = <span class=\"variable language_\">window</span>.<span class=\"property\">opera</span>.<span class=\"title function_\">version</span>()</span><br><span class=\"line\">    engine.<span class=\"property\">opera</span> = browser.<span class=\"property\">opera</span> = <span class=\"built_in\">parseFloat</span>(engine.<span class=\"property\">ver</span>)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"regexp\">/AppleWebkit\\/(\\S+)/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">    engine.<span class=\"property\">ver</span> = <span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$1&quot;</span>]</span><br><span class=\"line\">    engine.<span class=\"property\">webkit</span> = <span class=\"built_in\">parseFloat</span>(engine.<span class=\"property\">ver</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//确定是Chrome还是Safari</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"regexp\">/Chrome\\/(\\S+)/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">      browser.<span class=\"property\">ver</span> = <span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$1&quot;</span>]</span><br><span class=\"line\">      browser.<span class=\"property\">chrome</span> = <span class=\"built_in\">parseFloat</span>(browser.<span class=\"property\">ver</span>)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"regexp\">/Version\\/(\\S+)/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">      browser.<span class=\"property\">ver</span> = <span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$1&quot;</span>]</span><br><span class=\"line\">      browser.<span class=\"property\">safari</span> = <span class=\"built_in\">parseFloat</span>(browser.<span class=\"property\">ver</span>)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//近似确定版本号</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> safariVersion = <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(engine.<span class=\"property\">webkit</span> &lt; <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">        safariVersion = <span class=\"number\">1</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (engine.<span class=\"property\">webkit</span> &lt; <span class=\"number\">312</span>) &#123;</span><br><span class=\"line\">        safariVersion = <span class=\"number\">1.2</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (engine.<span class=\"property\">webkit</span> &lt; <span class=\"number\">412</span>) &#123;</span><br><span class=\"line\">        safariVersion = <span class=\"number\">1.3</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        safariVersion = <span class=\"number\">2</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      browser.<span class=\"property\">safari</span> = browser.<span class=\"property\">ver</span> = safariVersion</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"regexp\">/KHTML\\/(\\S+)/</span>.<span class=\"title function_\">test</span>(ua) || <span class=\"regexp\">/Konqueror\\/([^;]+)/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">    engine.<span class=\"property\">ver</span> = browser.<span class=\"property\">ver</span> = <span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$1&quot;</span>]</span><br><span class=\"line\">    engine.<span class=\"property\">khtml</span> = browser.<span class=\"property\">konq</span> = <span class=\"built_in\">parseFloat</span>(engine.<span class=\"property\">ver</span>)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"regexp\">/rv:([^\\)]+)\\) Gecko\\/d&#123;8&#125;/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">    engine.<span class=\"property\">ver</span> = <span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$1&quot;</span>]</span><br><span class=\"line\">    engine.<span class=\"property\">gecko</span> = <span class=\"built_in\">parseFloat</span>(engine.<span class=\"property\">ver</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//确定是不是Firefox</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"regexp\">/Firefox\\/(\\S+)/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">      browser.<span class=\"property\">ver</span> = <span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$1&quot;</span>]</span><br><span class=\"line\">      browser.<span class=\"property\">firefox</span> = <span class=\"built_in\">parseFloat</span>(browser.<span class=\"property\">ver</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"regexp\">/MSIE ([^;]+)/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">    engine.<span class=\"property\">ver</span> = browser.<span class=\"property\">ver</span> = <span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$1&quot;</span>]</span><br><span class=\"line\">    engine.<span class=\"property\">ie</span> = browser.<span class=\"property\">ie</span> = <span class=\"built_in\">parseFloat</span>(engine.<span class=\"property\">ver</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//检测浏览器</span></span><br><span class=\"line\">  browser.<span class=\"property\">ie</span> = engine.<span class=\"property\">ie</span></span><br><span class=\"line\">  browser.<span class=\"property\">opera</span>= engine.<span class=\"property\">opera</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//检测平台</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> p = navigator.<span class=\"property\">platform</span></span><br><span class=\"line\">  system.<span class=\"property\">win</span> = p.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;Win&quot;</span>) == <span class=\"number\">0</span></span><br><span class=\"line\">  system.<span class=\"property\">mac</span> = p.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;Mac&quot;</span>) == <span class=\"number\">0</span></span><br><span class=\"line\">  system.<span class=\"property\">x11</span> = (p == <span class=\"string\">&quot;X11&quot;</span>) || (p.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;Linux&quot;</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//检测Windows操作系统</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (system.<span class=\"property\">win</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"regexp\">/Win(?:dows)?([^do]&#123;2&#125;)\\s?(\\d+\\.\\d+)?/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$1&quot;</span>] == <span class=\"string\">&quot;NT&quot;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (<span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$2&quot;</span>]) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">case</span> <span class=\"string\">&quot;5.0&quot;</span>:</span><br><span class=\"line\">            system.<span class=\"property\">win</span> = <span class=\"string\">&quot;2000&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">          <span class=\"keyword\">case</span> <span class=\"string\">&quot;5.1&quot;</span>:</span><br><span class=\"line\">            system.<span class=\"property\">win</span> = <span class=\"string\">&quot;XP&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">          <span class=\"keyword\">case</span> <span class=\"string\">&quot;6.0&quot;</span>:</span><br><span class=\"line\">            system.<span class=\"property\">win</span> = <span class=\"string\">&quot;Vista&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">          <span class=\"keyword\">case</span> <span class=\"string\">&quot;6.1&quot;</span>:</span><br><span class=\"line\">            system.<span class=\"property\">win</span> = <span class=\"string\">&quot;7&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">          <span class=\"attr\">default</span>:</span><br><span class=\"line\">            system.<span class=\"property\">win</span> = <span class=\"string\">&quot;NT&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$1&quot;</span>] == <span class=\"string\">&quot;9x&quot;</span>) &#123;</span><br><span class=\"line\">        system.<span class=\"property\">win</span> = <span class=\"string\">&quot;ME&quot;</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        system.<span class=\"property\">win</span> = <span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$1&quot;</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//移动设备</span></span><br><span class=\"line\">  system.<span class=\"property\">iphone</span> = ua.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;iPhone&quot;</span>) &gt; -<span class=\"number\">1</span></span><br><span class=\"line\">  system.<span class=\"property\">ipod</span> = ua.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;iPod&quot;</span>) &gt; -<span class=\"number\">1</span></span><br><span class=\"line\">  system.<span class=\"property\">ipad</span> = ua.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;iPad&quot;</span>) &gt; -<span class=\"number\">1</span></span><br><span class=\"line\">  system.<span class=\"property\">nokiaN</span> = ua.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;NokiaN&quot;</span>) &gt; -<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//windows mobile</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (system.<span class=\"property\">win</span> == <span class=\"string\">&quot;CE&quot;</span>) &#123;</span><br><span class=\"line\">    system.<span class=\"property\">winMbile</span> = system.<span class=\"property\">win</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (system.<span class=\"property\">win</span> == <span class=\"string\">&quot;Ph&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"regexp\">/Windows Phone OS (\\d+.\\d+)/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">      system.<span class=\"property\">win</span> = <span class=\"string\">&quot;Phone&quot;</span></span><br><span class=\"line\">      system.<span class=\"property\">winMobile</span> = <span class=\"built_in\">parseFloat</span>(<span class=\"title class_\">RegExp</span>([<span class=\"string\">&quot;$1&quot;</span>]))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//检测iOS版本</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (system.<span class=\"property\">mac</span> &amp;&amp; ua.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;Mobile&quot;</span>) &gt; -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"regexp\">/CPU (?:iPhone )?OS (\\d+\\.\\d+)/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">      system.<span class=\"property\">ios</span> = <span class=\"built_in\">parseFloat</span>(<span class=\"title class_\">RegExp</span>.<span class=\"property\">$1</span>.<span class=\"title function_\">replace</span>(<span class=\"string\">&quot;_&quot;</span>, <span class=\"string\">&quot;.&quot;</span>))</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      system.<span class=\"property\">ios</span> = <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//检测Android版本</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"regexp\">/Android (\\d+\\.\\d+)/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">    system.<span class=\"property\">android</span> = <span class=\"built_in\">parseFloat</span>(<span class=\"title class_\">RegExp</span>.<span class=\"property\">$1</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//主机游戏系统</span></span><br><span class=\"line\">  system.<span class=\"property\">wii</span> = ua.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;Wii&quot;</span>) &gt; -<span class=\"number\">1</span></span><br><span class=\"line\">  system.<span class=\"property\">ps</span> = <span class=\"regexp\">/playstation/i</span>.<span class=\"title function_\">test</span>(ua)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//返回</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">engine</span>: engine,</span><br><span class=\"line\">    <span class=\"attr\">browser</span>: browser,</span><br><span class=\"line\">    <span class=\"attr\">system</span>: system</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"客户端检测\"><a href=\"#客户端检测\" class=\"headerlink\" title=\"客户端检测\"></a>客户端检测</h1><hr>\n<h3 id=\"能力检测（特性检测）\"><a href=\"#能力检测（特性检测）\" class=\"headerlink\" title=\"能力检测（特性检测）\"></a>能力检测（特性检测）</h3><blockquote>\n<p>识别客户端浏览器的能力</p>\n</blockquote>\n<h3 id=\"怪癖检测\"><a href=\"#怪癖检测\" class=\"headerlink\" title=\"怪癖检测\"></a>怪癖检测</h3><blockquote>\n<p>识别浏览器的特殊行为</p>\n</blockquote>\n<h3 id=\"用户代理检测\"><a href=\"#用户代理检测\" class=\"headerlink\" title=\"用户代理检测\"></a>用户代理检测</h3><p>通过检测用户代理字符串来确定实际使用的浏览器</p>\n<ul>\n<li>识别呈现引擎<br>IE、Gecko、Webkit、KHTML、Opera</li>\n<li>识别浏览器</li>\n<li>识别平台</li>\n<li>识别Windows操作系统</li>\n<li>识别移动设备</li>\n<li>识别游戏主机系统</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> client = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//呈现引擎</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> engine = &#123;</span><br><span class=\"line\">    <span class=\"attr\">ie</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">gecko</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">webkit</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">kthml</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">opera</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//版本号</span></span><br><span class=\"line\">    <span class=\"attr\">ver</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//浏览器</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> browser = &#123;</span><br><span class=\"line\">    <span class=\"comment\">//主要浏览器</span></span><br><span class=\"line\">    <span class=\"attr\">ie</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">firefox</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">safari</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">opera</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">chrome</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//版本号</span></span><br><span class=\"line\">    <span class=\"attr\">ver</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//平台、设备、主机</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> system = &#123;</span><br><span class=\"line\">    <span class=\"attr\">win</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">mac</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">x11</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//移动设备</span></span><br><span class=\"line\">    <span class=\"attr\">iphone</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">ipod</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">ipad</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">ios</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">android</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">nokiaN</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">winMobile</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//主机</span></span><br><span class=\"line\">    <span class=\"attr\">wii</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">ps</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//检测呈现引擎和浏览器</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> ua = navigator.<span class=\"property\">userAgent</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">window</span>.<span class=\"property\">opera</span>) &#123;</span><br><span class=\"line\">    engine.<span class=\"property\">ver</span> = browser.<span class=\"property\">ver</span> = <span class=\"variable language_\">window</span>.<span class=\"property\">opera</span>.<span class=\"title function_\">version</span>()</span><br><span class=\"line\">    engine.<span class=\"property\">opera</span> = browser.<span class=\"property\">opera</span> = <span class=\"built_in\">parseFloat</span>(engine.<span class=\"property\">ver</span>)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"regexp\">/AppleWebkit\\/(\\S+)/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">    engine.<span class=\"property\">ver</span> = <span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$1&quot;</span>]</span><br><span class=\"line\">    engine.<span class=\"property\">webkit</span> = <span class=\"built_in\">parseFloat</span>(engine.<span class=\"property\">ver</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//确定是Chrome还是Safari</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"regexp\">/Chrome\\/(\\S+)/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">      browser.<span class=\"property\">ver</span> = <span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$1&quot;</span>]</span><br><span class=\"line\">      browser.<span class=\"property\">chrome</span> = <span class=\"built_in\">parseFloat</span>(browser.<span class=\"property\">ver</span>)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"regexp\">/Version\\/(\\S+)/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">      browser.<span class=\"property\">ver</span> = <span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$1&quot;</span>]</span><br><span class=\"line\">      browser.<span class=\"property\">safari</span> = <span class=\"built_in\">parseFloat</span>(browser.<span class=\"property\">ver</span>)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//近似确定版本号</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> safariVersion = <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(engine.<span class=\"property\">webkit</span> &lt; <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">        safariVersion = <span class=\"number\">1</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (engine.<span class=\"property\">webkit</span> &lt; <span class=\"number\">312</span>) &#123;</span><br><span class=\"line\">        safariVersion = <span class=\"number\">1.2</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (engine.<span class=\"property\">webkit</span> &lt; <span class=\"number\">412</span>) &#123;</span><br><span class=\"line\">        safariVersion = <span class=\"number\">1.3</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        safariVersion = <span class=\"number\">2</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      browser.<span class=\"property\">safari</span> = browser.<span class=\"property\">ver</span> = safariVersion</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"regexp\">/KHTML\\/(\\S+)/</span>.<span class=\"title function_\">test</span>(ua) || <span class=\"regexp\">/Konqueror\\/([^;]+)/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">    engine.<span class=\"property\">ver</span> = browser.<span class=\"property\">ver</span> = <span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$1&quot;</span>]</span><br><span class=\"line\">    engine.<span class=\"property\">khtml</span> = browser.<span class=\"property\">konq</span> = <span class=\"built_in\">parseFloat</span>(engine.<span class=\"property\">ver</span>)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"regexp\">/rv:([^\\)]+)\\) Gecko\\/d&#123;8&#125;/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">    engine.<span class=\"property\">ver</span> = <span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$1&quot;</span>]</span><br><span class=\"line\">    engine.<span class=\"property\">gecko</span> = <span class=\"built_in\">parseFloat</span>(engine.<span class=\"property\">ver</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//确定是不是Firefox</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"regexp\">/Firefox\\/(\\S+)/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">      browser.<span class=\"property\">ver</span> = <span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$1&quot;</span>]</span><br><span class=\"line\">      browser.<span class=\"property\">firefox</span> = <span class=\"built_in\">parseFloat</span>(browser.<span class=\"property\">ver</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"regexp\">/MSIE ([^;]+)/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">    engine.<span class=\"property\">ver</span> = browser.<span class=\"property\">ver</span> = <span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$1&quot;</span>]</span><br><span class=\"line\">    engine.<span class=\"property\">ie</span> = browser.<span class=\"property\">ie</span> = <span class=\"built_in\">parseFloat</span>(engine.<span class=\"property\">ver</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//检测浏览器</span></span><br><span class=\"line\">  browser.<span class=\"property\">ie</span> = engine.<span class=\"property\">ie</span></span><br><span class=\"line\">  browser.<span class=\"property\">opera</span>= engine.<span class=\"property\">opera</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//检测平台</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> p = navigator.<span class=\"property\">platform</span></span><br><span class=\"line\">  system.<span class=\"property\">win</span> = p.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;Win&quot;</span>) == <span class=\"number\">0</span></span><br><span class=\"line\">  system.<span class=\"property\">mac</span> = p.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;Mac&quot;</span>) == <span class=\"number\">0</span></span><br><span class=\"line\">  system.<span class=\"property\">x11</span> = (p == <span class=\"string\">&quot;X11&quot;</span>) || (p.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;Linux&quot;</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//检测Windows操作系统</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (system.<span class=\"property\">win</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"regexp\">/Win(?:dows)?([^do]&#123;2&#125;)\\s?(\\d+\\.\\d+)?/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$1&quot;</span>] == <span class=\"string\">&quot;NT&quot;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (<span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$2&quot;</span>]) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">case</span> <span class=\"string\">&quot;5.0&quot;</span>:</span><br><span class=\"line\">            system.<span class=\"property\">win</span> = <span class=\"string\">&quot;2000&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">          <span class=\"keyword\">case</span> <span class=\"string\">&quot;5.1&quot;</span>:</span><br><span class=\"line\">            system.<span class=\"property\">win</span> = <span class=\"string\">&quot;XP&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">          <span class=\"keyword\">case</span> <span class=\"string\">&quot;6.0&quot;</span>:</span><br><span class=\"line\">            system.<span class=\"property\">win</span> = <span class=\"string\">&quot;Vista&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">          <span class=\"keyword\">case</span> <span class=\"string\">&quot;6.1&quot;</span>:</span><br><span class=\"line\">            system.<span class=\"property\">win</span> = <span class=\"string\">&quot;7&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">          <span class=\"attr\">default</span>:</span><br><span class=\"line\">            system.<span class=\"property\">win</span> = <span class=\"string\">&quot;NT&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$1&quot;</span>] == <span class=\"string\">&quot;9x&quot;</span>) &#123;</span><br><span class=\"line\">        system.<span class=\"property\">win</span> = <span class=\"string\">&quot;ME&quot;</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        system.<span class=\"property\">win</span> = <span class=\"title class_\">RegExp</span>[<span class=\"string\">&quot;$1&quot;</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//移动设备</span></span><br><span class=\"line\">  system.<span class=\"property\">iphone</span> = ua.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;iPhone&quot;</span>) &gt; -<span class=\"number\">1</span></span><br><span class=\"line\">  system.<span class=\"property\">ipod</span> = ua.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;iPod&quot;</span>) &gt; -<span class=\"number\">1</span></span><br><span class=\"line\">  system.<span class=\"property\">ipad</span> = ua.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;iPad&quot;</span>) &gt; -<span class=\"number\">1</span></span><br><span class=\"line\">  system.<span class=\"property\">nokiaN</span> = ua.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;NokiaN&quot;</span>) &gt; -<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//windows mobile</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (system.<span class=\"property\">win</span> == <span class=\"string\">&quot;CE&quot;</span>) &#123;</span><br><span class=\"line\">    system.<span class=\"property\">winMbile</span> = system.<span class=\"property\">win</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (system.<span class=\"property\">win</span> == <span class=\"string\">&quot;Ph&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"regexp\">/Windows Phone OS (\\d+.\\d+)/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">      system.<span class=\"property\">win</span> = <span class=\"string\">&quot;Phone&quot;</span></span><br><span class=\"line\">      system.<span class=\"property\">winMobile</span> = <span class=\"built_in\">parseFloat</span>(<span class=\"title class_\">RegExp</span>([<span class=\"string\">&quot;$1&quot;</span>]))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//检测iOS版本</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (system.<span class=\"property\">mac</span> &amp;&amp; ua.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;Mobile&quot;</span>) &gt; -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"regexp\">/CPU (?:iPhone )?OS (\\d+\\.\\d+)/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">      system.<span class=\"property\">ios</span> = <span class=\"built_in\">parseFloat</span>(<span class=\"title class_\">RegExp</span>.<span class=\"property\">$1</span>.<span class=\"title function_\">replace</span>(<span class=\"string\">&quot;_&quot;</span>, <span class=\"string\">&quot;.&quot;</span>))</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      system.<span class=\"property\">ios</span> = <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//检测Android版本</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"regexp\">/Android (\\d+\\.\\d+)/</span>.<span class=\"title function_\">test</span>(ua)) &#123;</span><br><span class=\"line\">    system.<span class=\"property\">android</span> = <span class=\"built_in\">parseFloat</span>(<span class=\"title class_\">RegExp</span>.<span class=\"property\">$1</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//主机游戏系统</span></span><br><span class=\"line\">  system.<span class=\"property\">wii</span> = ua.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;Wii&quot;</span>) &gt; -<span class=\"number\">1</span></span><br><span class=\"line\">  system.<span class=\"property\">ps</span> = <span class=\"regexp\">/playstation/i</span>.<span class=\"title function_\">test</span>(ua)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//返回</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">engine</span>: engine,</span><br><span class=\"line\">    <span class=\"attr\">browser</span>: browser,</span><br><span class=\"line\">    <span class=\"attr\">system</span>: system</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"点击事件绑定","date":"2015-03-25T10:59:53.000Z","_content":"\n网页界面中与用户的交互通常是通过各种事件来达成的；\n在各种事件之中，点击事件 往往是最常见、最通用的一种界面事件\n\n## 点击事件\n------------------------------------\n```js\nvar actionList = {\n  'action1': function () {\n    func1 ()\n  },\n  'action2': function () {\n    func2 ()\n  },\n  ...\n}\n\n$body.on('click', ['data-action'], function () {\n  var actionName = $(this).data('action')\n  var action = actionList[actionName]\n  if ($.isFunction(action)) action()\n})\n\n$.extend(actionList, {\n  'more-action': function () {\n    // ...\n  }\n})\n```\n----------------------------------\n\n\n- CSS 样式\n```css\n[data-action] {\n  cursor: pointer;\n}\n```","source":"_posts/点击事件绑定.md","raw":"---\ntitle: 点击事件绑定\ndate: 2015-03-25 18:59:53\ntags: Jquery\ncategories: 前端\n---\n\n网页界面中与用户的交互通常是通过各种事件来达成的；\n在各种事件之中，点击事件 往往是最常见、最通用的一种界面事件\n\n## 点击事件\n------------------------------------\n```js\nvar actionList = {\n  'action1': function () {\n    func1 ()\n  },\n  'action2': function () {\n    func2 ()\n  },\n  ...\n}\n\n$body.on('click', ['data-action'], function () {\n  var actionName = $(this).data('action')\n  var action = actionList[actionName]\n  if ($.isFunction(action)) action()\n})\n\n$.extend(actionList, {\n  'more-action': function () {\n    // ...\n  }\n})\n```\n----------------------------------\n\n\n- CSS 样式\n```css\n[data-action] {\n  cursor: pointer;\n}\n```","slug":"点击事件绑定","published":1,"updated":"2022-09-08T14:51:06.972Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krqo002jkp00ff5k6tqx","content":"<p>网页界面中与用户的交互通常是通过各种事件来达成的；<br>在各种事件之中，点击事件 往往是最常见、最通用的一种界面事件</p>\n<h2 id=\"点击事件\"><a href=\"#点击事件\" class=\"headerlink\" title=\"点击事件\"></a>点击事件</h2><hr>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> actionList = &#123;</span><br><span class=\"line\">  <span class=\"string\">&#x27;action1&#x27;</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    func1 ()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&#x27;action2&#x27;</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    func2 ()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$body.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;click&#x27;</span>, [<span class=\"string\">&#x27;data-action&#x27;</span>], <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> actionName = $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">data</span>(<span class=\"string\">&#x27;action&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">var</span> action = actionList[actionName]</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ($.<span class=\"title function_\">isFunction</span>(action)) <span class=\"title function_\">action</span>()</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">$.<span class=\"title function_\">extend</span>(actionList, &#123;</span><br><span class=\"line\">  <span class=\"string\">&#x27;more-action&#x27;</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>CSS 样式<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-attr\">[data-action]</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>网页界面中与用户的交互通常是通过各种事件来达成的；<br>在各种事件之中，点击事件 往往是最常见、最通用的一种界面事件</p>\n<h2 id=\"点击事件\"><a href=\"#点击事件\" class=\"headerlink\" title=\"点击事件\"></a>点击事件</h2><hr>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> actionList = &#123;</span><br><span class=\"line\">  <span class=\"string\">&#x27;action1&#x27;</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    func1 ()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&#x27;action2&#x27;</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    func2 ()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$body.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;click&#x27;</span>, [<span class=\"string\">&#x27;data-action&#x27;</span>], <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> actionName = $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">data</span>(<span class=\"string\">&#x27;action&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">var</span> action = actionList[actionName]</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ($.<span class=\"title function_\">isFunction</span>(action)) <span class=\"title function_\">action</span>()</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">$.<span class=\"title function_\">extend</span>(actionList, &#123;</span><br><span class=\"line\">  <span class=\"string\">&#x27;more-action&#x27;</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>CSS 样式<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-attr\">[data-action]</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"用generator实现异步操作","date":"2017-04-16T10:28:23.000Z","_content":"\n实现一个co函数，接收一个generator，实现自动执行\n\n示例代码\n```js\nfunction* generator() {\n  console.log('generator start')\n  yield new Promise((resolve, reject) => {\n    resolve(1)\n  })\n  console.log('generator 1')\n  yield new Promise((resolve, reject) => {\n    console.log('generator 2')\n    resolve(2)\n  })\n}\n\nfunction co(gen) {\n  const iterator = gen();\n\n  function autoRun(iteration) {\n    if (iteration.done) {\n      return iteration.value;\n    }\n    const anotherPromise = iteration.value;\n    anotherPromise.then(x => {\n      return autoRun(iterator.next(x));\n    })\n  }\n\n  return autoRun(iterator.next());\n}\n\nco(generator)\n// generator start\n// generator 1\n// generator 2\n```\n\nco函数的流程如下:\n- co传入一个genetor并运行，获得一个iterator(generator())\n- 调用next()方法，获取到iteration,iteration的value是异步流程的结果，也即一个Promise。\n- yield返回出的任务，由外部执行和处理，结束后在返回,于是使用then方法。\n- 处理后的结果为x，调用iterator.next(x)把x返回的同时，拿到了下一个yield的抛出的任务。\n- 处理任务，得到result，并通过next(result)返回给genetor。\n","source":"_posts/用generator实现异步操作.md","raw":"---\ntitle: 用generator实现异步操作\ndate: 2017-04-16 18:28:23\ntags: Javascript\ncategories: 编程\n---\n\n实现一个co函数，接收一个generator，实现自动执行\n\n示例代码\n```js\nfunction* generator() {\n  console.log('generator start')\n  yield new Promise((resolve, reject) => {\n    resolve(1)\n  })\n  console.log('generator 1')\n  yield new Promise((resolve, reject) => {\n    console.log('generator 2')\n    resolve(2)\n  })\n}\n\nfunction co(gen) {\n  const iterator = gen();\n\n  function autoRun(iteration) {\n    if (iteration.done) {\n      return iteration.value;\n    }\n    const anotherPromise = iteration.value;\n    anotherPromise.then(x => {\n      return autoRun(iterator.next(x));\n    })\n  }\n\n  return autoRun(iterator.next());\n}\n\nco(generator)\n// generator start\n// generator 1\n// generator 2\n```\n\nco函数的流程如下:\n- co传入一个genetor并运行，获得一个iterator(generator())\n- 调用next()方法，获取到iteration,iteration的value是异步流程的结果，也即一个Promise。\n- yield返回出的任务，由外部执行和处理，结束后在返回,于是使用then方法。\n- 处理后的结果为x，调用iterator.next(x)把x返回的同时，拿到了下一个yield的抛出的任务。\n- 处理任务，得到result，并通过next(result)返回给genetor。\n","slug":"用generator实现异步操作","published":1,"updated":"2022-09-08T14:51:06.973Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krqp002mkp003rngbiyp","content":"<p>实现一个co函数，接收一个generator，实现自动执行</p>\n<p>示例代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span>* <span class=\"title function_\">generator</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;generator start&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">yield</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">resolve</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;generator 1&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">yield</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;generator 2&#x27;</span>)</span><br><span class=\"line\">    <span class=\"title function_\">resolve</span>(<span class=\"number\">2</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">co</span>(<span class=\"params\">gen</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> iterator = <span class=\"title function_\">gen</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">autoRun</span>(<span class=\"params\">iteration</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (iteration.<span class=\"property\">done</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> iteration.<span class=\"property\">value</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> anotherPromise = iteration.<span class=\"property\">value</span>;</span><br><span class=\"line\">    anotherPromise.<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title function_\">autoRun</span>(iterator.<span class=\"title function_\">next</span>(x));</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">autoRun</span>(iterator.<span class=\"title function_\">next</span>());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">co</span>(generator)</span><br><span class=\"line\"><span class=\"comment\">// generator start</span></span><br><span class=\"line\"><span class=\"comment\">// generator 1</span></span><br><span class=\"line\"><span class=\"comment\">// generator 2</span></span><br></pre></td></tr></table></figure>\n\n<p>co函数的流程如下:</p>\n<ul>\n<li>co传入一个genetor并运行，获得一个iterator(generator())</li>\n<li>调用next()方法，获取到iteration,iteration的value是异步流程的结果，也即一个Promise。</li>\n<li>yield返回出的任务，由外部执行和处理，结束后在返回,于是使用then方法。</li>\n<li>处理后的结果为x，调用iterator.next(x)把x返回的同时，拿到了下一个yield的抛出的任务。</li>\n<li>处理任务，得到result，并通过next(result)返回给genetor。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>实现一个co函数，接收一个generator，实现自动执行</p>\n<p>示例代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span>* <span class=\"title function_\">generator</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;generator start&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">yield</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">resolve</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;generator 1&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">yield</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;generator 2&#x27;</span>)</span><br><span class=\"line\">    <span class=\"title function_\">resolve</span>(<span class=\"number\">2</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">co</span>(<span class=\"params\">gen</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> iterator = <span class=\"title function_\">gen</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">autoRun</span>(<span class=\"params\">iteration</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (iteration.<span class=\"property\">done</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> iteration.<span class=\"property\">value</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> anotherPromise = iteration.<span class=\"property\">value</span>;</span><br><span class=\"line\">    anotherPromise.<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title function_\">autoRun</span>(iterator.<span class=\"title function_\">next</span>(x));</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">autoRun</span>(iterator.<span class=\"title function_\">next</span>());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">co</span>(generator)</span><br><span class=\"line\"><span class=\"comment\">// generator start</span></span><br><span class=\"line\"><span class=\"comment\">// generator 1</span></span><br><span class=\"line\"><span class=\"comment\">// generator 2</span></span><br></pre></td></tr></table></figure>\n\n<p>co函数的流程如下:</p>\n<ul>\n<li>co传入一个genetor并运行，获得一个iterator(generator())</li>\n<li>调用next()方法，获取到iteration,iteration的value是异步流程的结果，也即一个Promise。</li>\n<li>yield返回出的任务，由外部执行和处理，结束后在返回,于是使用then方法。</li>\n<li>处理后的结果为x，调用iterator.next(x)把x返回的同时，拿到了下一个yield的抛出的任务。</li>\n<li>处理任务，得到result，并通过next(result)返回给genetor。</li>\n</ul>\n"},{"title":"由Babel了解编译原理","date":"2017-12-30T10:59:53.000Z","_content":"\nBabel编译流程：词法分析、语法分析、语义分析、中间代码生成、中间代码优化、目标代码生成\n\nBabel使用的语法解析器是Babylon，抽象语法树的类型定义参考了Mozilla JS 引擎 SpiderMonkey，同时支持对 Flow、JSX、TypeScript 语法的解析\nBabylon 实现了编译器中两个部分，词法分析和语法分析\n\n### 词法分析\n词法分析的主要任务是扫描输入字符，转换为词法单元（Token）序列，传递给语法分析器进行语法分析。\nToken 是一个不可分割的最小单元。例如 var 这三个字符，它只能作为一个整体，语义上不能再被分解，因此它是一个 Token，每个 Token 对象都有能够被单独识别的类型属性和其它附加属性（操作符优先级、行列号等）。在 Babylon 词法分析器里，每个关键字是一个 Token ，每个标识符是一个 Token，每个操作符是一个 Token，每个标点符号也都是一个 Token。除此之外，还会过滤掉源程序中的注释和空白字符（换行符、空格、制表符等）。\n\n### 语法分析\n语法分析是词法分析的下一步，主要任务是扫描来自词法分析器产生的 Token 序列，根据文法和结点类型定义构造出一棵 AST，传递给编译器前端余下部分。文法描述了程序设计语言的构造规则，用于指导整个语法分析的过程。它由四个部分组成，一组终结符号（也称 Token）、一组非终结符号、一组产生式和一个开始符号。\n![函数声明语句的产生式表示形式](http://chuantu.xyz/t6/702/1564565524x1033347913.jpg)\n\n根据文法，语法分析器将 Token 逐个读入，不断替换文法产生式体的非终结符号，直至全部将非终结符号替换为终结符号，这个过程被称为推导。推导又分为两种方式，最左推导和最右推导。如果总是优先替换产生式体最左侧的非终结符号，被称为最左推导，如果总是优先替换产生式体最右侧的非终结符号，被称为最右推导。\n\n语法分析器按照工作方式来划分，分为自顶向下分析法和自底向上分析法。自顶向下分析法要求通过最左推导从顶部 ( 根结点 ) 开始构造 AST，常用的分析器有递归下降语法分析器、 LL 语法分析器。而自底向上分析法要求通过最右推导从底部 ( 叶子结点 ) 开始构造 AST，常用的分析器有 LR 语法分析器、SLR 语法分析器、LALR 语法分析器。这两种分析方式在 Babylon 中都有所实践。\n\n首先是自顶向下分析法，例如变量声明语句：\n```js\nvar foo = \"bar\";\n```\n经由词法分析器处理后，会生成 Token 序列：\n```js\nToken('var')\nToken('foo')\nToken('=')\nToken('\"bar\"')\nToken(';')\n```\n由 LL(1) 语法分析器进行递归下降分析，每次向前查看一个输入 Token，来决定该用哪种产生式展开。对于变量声明语句的 FIRST 集合（推导结果的首个 Token 集合），只需检查输入 Token 为 Token('var')、Token('let')、Token('const') 三者其中之一，那么就使用该产生式展开。首先构造 AST 最顶层结点 VariableDeclaration，把 Token('var') 的值加入到该结点属性中， 接着逐个读入其余 Token，根据产生式的非终结符号从左到右的顺序，依次构造它的子结点，不断递归下降分析，直至所有 Token 读入完毕。最后生成的一棵 AST 如图所示：\n![生成的AST树](http://chuantu.xyz/t6/702/1564565441x1033347913.jpg)\n\n### 生成代码\n工业级别的语言编译器，通常还会有语义分析阶段，检查程序上下文是否和语言所定义的语义一致，比如类型检查，作用域检查，另一个则是生成中间代码，比如三地址代码，用地址和指令来线性描述程序。但由于 Babel 的定位仅仅是对 ES 语法的转换，这一部分工作可以交给 JS 解释器引擎来处理。而 Babel 最为特色的部分是它的插件机制，针对不同的浏览器版本环境，调用不同的 Babel 插件。通过访问者模式（一种设计模式）的接口定义，对 AST 进行一遍深度优先遍历，对指定的匹配到的结点进行修改、删除、新增、移位，使原先的 AST 转换为另一棵经过修改的 AST。","source":"_posts/由Babel了解编译原理.md","raw":"---\ntitle: 由Babel了解编译原理\ndate: 2017-12-30 18:59:53\ntags: Babel\ncategories: 编译原理\n---\n\nBabel编译流程：词法分析、语法分析、语义分析、中间代码生成、中间代码优化、目标代码生成\n\nBabel使用的语法解析器是Babylon，抽象语法树的类型定义参考了Mozilla JS 引擎 SpiderMonkey，同时支持对 Flow、JSX、TypeScript 语法的解析\nBabylon 实现了编译器中两个部分，词法分析和语法分析\n\n### 词法分析\n词法分析的主要任务是扫描输入字符，转换为词法单元（Token）序列，传递给语法分析器进行语法分析。\nToken 是一个不可分割的最小单元。例如 var 这三个字符，它只能作为一个整体，语义上不能再被分解，因此它是一个 Token，每个 Token 对象都有能够被单独识别的类型属性和其它附加属性（操作符优先级、行列号等）。在 Babylon 词法分析器里，每个关键字是一个 Token ，每个标识符是一个 Token，每个操作符是一个 Token，每个标点符号也都是一个 Token。除此之外，还会过滤掉源程序中的注释和空白字符（换行符、空格、制表符等）。\n\n### 语法分析\n语法分析是词法分析的下一步，主要任务是扫描来自词法分析器产生的 Token 序列，根据文法和结点类型定义构造出一棵 AST，传递给编译器前端余下部分。文法描述了程序设计语言的构造规则，用于指导整个语法分析的过程。它由四个部分组成，一组终结符号（也称 Token）、一组非终结符号、一组产生式和一个开始符号。\n![函数声明语句的产生式表示形式](http://chuantu.xyz/t6/702/1564565524x1033347913.jpg)\n\n根据文法，语法分析器将 Token 逐个读入，不断替换文法产生式体的非终结符号，直至全部将非终结符号替换为终结符号，这个过程被称为推导。推导又分为两种方式，最左推导和最右推导。如果总是优先替换产生式体最左侧的非终结符号，被称为最左推导，如果总是优先替换产生式体最右侧的非终结符号，被称为最右推导。\n\n语法分析器按照工作方式来划分，分为自顶向下分析法和自底向上分析法。自顶向下分析法要求通过最左推导从顶部 ( 根结点 ) 开始构造 AST，常用的分析器有递归下降语法分析器、 LL 语法分析器。而自底向上分析法要求通过最右推导从底部 ( 叶子结点 ) 开始构造 AST，常用的分析器有 LR 语法分析器、SLR 语法分析器、LALR 语法分析器。这两种分析方式在 Babylon 中都有所实践。\n\n首先是自顶向下分析法，例如变量声明语句：\n```js\nvar foo = \"bar\";\n```\n经由词法分析器处理后，会生成 Token 序列：\n```js\nToken('var')\nToken('foo')\nToken('=')\nToken('\"bar\"')\nToken(';')\n```\n由 LL(1) 语法分析器进行递归下降分析，每次向前查看一个输入 Token，来决定该用哪种产生式展开。对于变量声明语句的 FIRST 集合（推导结果的首个 Token 集合），只需检查输入 Token 为 Token('var')、Token('let')、Token('const') 三者其中之一，那么就使用该产生式展开。首先构造 AST 最顶层结点 VariableDeclaration，把 Token('var') 的值加入到该结点属性中， 接着逐个读入其余 Token，根据产生式的非终结符号从左到右的顺序，依次构造它的子结点，不断递归下降分析，直至所有 Token 读入完毕。最后生成的一棵 AST 如图所示：\n![生成的AST树](http://chuantu.xyz/t6/702/1564565441x1033347913.jpg)\n\n### 生成代码\n工业级别的语言编译器，通常还会有语义分析阶段，检查程序上下文是否和语言所定义的语义一致，比如类型检查，作用域检查，另一个则是生成中间代码，比如三地址代码，用地址和指令来线性描述程序。但由于 Babel 的定位仅仅是对 ES 语法的转换，这一部分工作可以交给 JS 解释器引擎来处理。而 Babel 最为特色的部分是它的插件机制，针对不同的浏览器版本环境，调用不同的 Babel 插件。通过访问者模式（一种设计模式）的接口定义，对 AST 进行一遍深度优先遍历，对指定的匹配到的结点进行修改、删除、新增、移位，使原先的 AST 转换为另一棵经过修改的 AST。","slug":"由Babel了解编译原理","published":1,"updated":"2022-09-08T14:51:06.973Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krqq002rkp00fkzt0mpc","content":"<p>Babel编译流程：词法分析、语法分析、语义分析、中间代码生成、中间代码优化、目标代码生成</p>\n<p>Babel使用的语法解析器是Babylon，抽象语法树的类型定义参考了Mozilla JS 引擎 SpiderMonkey，同时支持对 Flow、JSX、TypeScript 语法的解析<br>Babylon 实现了编译器中两个部分，词法分析和语法分析</p>\n<h3 id=\"词法分析\"><a href=\"#词法分析\" class=\"headerlink\" title=\"词法分析\"></a>词法分析</h3><p>词法分析的主要任务是扫描输入字符，转换为词法单元（Token）序列，传递给语法分析器进行语法分析。<br>Token 是一个不可分割的最小单元。例如 var 这三个字符，它只能作为一个整体，语义上不能再被分解，因此它是一个 Token，每个 Token 对象都有能够被单独识别的类型属性和其它附加属性（操作符优先级、行列号等）。在 Babylon 词法分析器里，每个关键字是一个 Token ，每个标识符是一个 Token，每个操作符是一个 Token，每个标点符号也都是一个 Token。除此之外，还会过滤掉源程序中的注释和空白字符（换行符、空格、制表符等）。</p>\n<h3 id=\"语法分析\"><a href=\"#语法分析\" class=\"headerlink\" title=\"语法分析\"></a>语法分析</h3><p>语法分析是词法分析的下一步，主要任务是扫描来自词法分析器产生的 Token 序列，根据文法和结点类型定义构造出一棵 AST，传递给编译器前端余下部分。文法描述了程序设计语言的构造规则，用于指导整个语法分析的过程。它由四个部分组成，一组终结符号（也称 Token）、一组非终结符号、一组产生式和一个开始符号。<br><img src=\"http://chuantu.xyz/t6/702/1564565524x1033347913.jpg\" alt=\"函数声明语句的产生式表示形式\"></p>\n<p>根据文法，语法分析器将 Token 逐个读入，不断替换文法产生式体的非终结符号，直至全部将非终结符号替换为终结符号，这个过程被称为推导。推导又分为两种方式，最左推导和最右推导。如果总是优先替换产生式体最左侧的非终结符号，被称为最左推导，如果总是优先替换产生式体最右侧的非终结符号，被称为最右推导。</p>\n<p>语法分析器按照工作方式来划分，分为自顶向下分析法和自底向上分析法。自顶向下分析法要求通过最左推导从顶部 ( 根结点 ) 开始构造 AST，常用的分析器有递归下降语法分析器、 LL 语法分析器。而自底向上分析法要求通过最右推导从底部 ( 叶子结点 ) 开始构造 AST，常用的分析器有 LR 语法分析器、SLR 语法分析器、LALR 语法分析器。这两种分析方式在 Babylon 中都有所实践。</p>\n<p>首先是自顶向下分析法，例如变量声明语句：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"string\">&quot;bar&quot;</span>;</span><br></pre></td></tr></table></figure>\n<p>经由词法分析器处理后，会生成 Token 序列：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Token</span>(<span class=\"string\">&#x27;var&#x27;</span>)</span><br><span class=\"line\"><span class=\"title class_\">Token</span>(<span class=\"string\">&#x27;foo&#x27;</span>)</span><br><span class=\"line\"><span class=\"title class_\">Token</span>(<span class=\"string\">&#x27;=&#x27;</span>)</span><br><span class=\"line\"><span class=\"title class_\">Token</span>(<span class=\"string\">&#x27;&quot;bar&quot;&#x27;</span>)</span><br><span class=\"line\"><span class=\"title class_\">Token</span>(<span class=\"string\">&#x27;;&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>由 LL(1) 语法分析器进行递归下降分析，每次向前查看一个输入 Token，来决定该用哪种产生式展开。对于变量声明语句的 FIRST 集合（推导结果的首个 Token 集合），只需检查输入 Token 为 Token(‘var’)、Token(‘let’)、Token(‘const’) 三者其中之一，那么就使用该产生式展开。首先构造 AST 最顶层结点 VariableDeclaration，把 Token(‘var’) 的值加入到该结点属性中， 接着逐个读入其余 Token，根据产生式的非终结符号从左到右的顺序，依次构造它的子结点，不断递归下降分析，直至所有 Token 读入完毕。最后生成的一棵 AST 如图所示：<br><img src=\"http://chuantu.xyz/t6/702/1564565441x1033347913.jpg\" alt=\"生成的AST树\"></p>\n<h3 id=\"生成代码\"><a href=\"#生成代码\" class=\"headerlink\" title=\"生成代码\"></a>生成代码</h3><p>工业级别的语言编译器，通常还会有语义分析阶段，检查程序上下文是否和语言所定义的语义一致，比如类型检查，作用域检查，另一个则是生成中间代码，比如三地址代码，用地址和指令来线性描述程序。但由于 Babel 的定位仅仅是对 ES 语法的转换，这一部分工作可以交给 JS 解释器引擎来处理。而 Babel 最为特色的部分是它的插件机制，针对不同的浏览器版本环境，调用不同的 Babel 插件。通过访问者模式（一种设计模式）的接口定义，对 AST 进行一遍深度优先遍历，对指定的匹配到的结点进行修改、删除、新增、移位，使原先的 AST 转换为另一棵经过修改的 AST。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Babel编译流程：词法分析、语法分析、语义分析、中间代码生成、中间代码优化、目标代码生成</p>\n<p>Babel使用的语法解析器是Babylon，抽象语法树的类型定义参考了Mozilla JS 引擎 SpiderMonkey，同时支持对 Flow、JSX、TypeScript 语法的解析<br>Babylon 实现了编译器中两个部分，词法分析和语法分析</p>\n<h3 id=\"词法分析\"><a href=\"#词法分析\" class=\"headerlink\" title=\"词法分析\"></a>词法分析</h3><p>词法分析的主要任务是扫描输入字符，转换为词法单元（Token）序列，传递给语法分析器进行语法分析。<br>Token 是一个不可分割的最小单元。例如 var 这三个字符，它只能作为一个整体，语义上不能再被分解，因此它是一个 Token，每个 Token 对象都有能够被单独识别的类型属性和其它附加属性（操作符优先级、行列号等）。在 Babylon 词法分析器里，每个关键字是一个 Token ，每个标识符是一个 Token，每个操作符是一个 Token，每个标点符号也都是一个 Token。除此之外，还会过滤掉源程序中的注释和空白字符（换行符、空格、制表符等）。</p>\n<h3 id=\"语法分析\"><a href=\"#语法分析\" class=\"headerlink\" title=\"语法分析\"></a>语法分析</h3><p>语法分析是词法分析的下一步，主要任务是扫描来自词法分析器产生的 Token 序列，根据文法和结点类型定义构造出一棵 AST，传递给编译器前端余下部分。文法描述了程序设计语言的构造规则，用于指导整个语法分析的过程。它由四个部分组成，一组终结符号（也称 Token）、一组非终结符号、一组产生式和一个开始符号。<br><img src=\"http://chuantu.xyz/t6/702/1564565524x1033347913.jpg\" alt=\"函数声明语句的产生式表示形式\"></p>\n<p>根据文法，语法分析器将 Token 逐个读入，不断替换文法产生式体的非终结符号，直至全部将非终结符号替换为终结符号，这个过程被称为推导。推导又分为两种方式，最左推导和最右推导。如果总是优先替换产生式体最左侧的非终结符号，被称为最左推导，如果总是优先替换产生式体最右侧的非终结符号，被称为最右推导。</p>\n<p>语法分析器按照工作方式来划分，分为自顶向下分析法和自底向上分析法。自顶向下分析法要求通过最左推导从顶部 ( 根结点 ) 开始构造 AST，常用的分析器有递归下降语法分析器、 LL 语法分析器。而自底向上分析法要求通过最右推导从底部 ( 叶子结点 ) 开始构造 AST，常用的分析器有 LR 语法分析器、SLR 语法分析器、LALR 语法分析器。这两种分析方式在 Babylon 中都有所实践。</p>\n<p>首先是自顶向下分析法，例如变量声明语句：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"string\">&quot;bar&quot;</span>;</span><br></pre></td></tr></table></figure>\n<p>经由词法分析器处理后，会生成 Token 序列：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Token</span>(<span class=\"string\">&#x27;var&#x27;</span>)</span><br><span class=\"line\"><span class=\"title class_\">Token</span>(<span class=\"string\">&#x27;foo&#x27;</span>)</span><br><span class=\"line\"><span class=\"title class_\">Token</span>(<span class=\"string\">&#x27;=&#x27;</span>)</span><br><span class=\"line\"><span class=\"title class_\">Token</span>(<span class=\"string\">&#x27;&quot;bar&quot;&#x27;</span>)</span><br><span class=\"line\"><span class=\"title class_\">Token</span>(<span class=\"string\">&#x27;;&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>由 LL(1) 语法分析器进行递归下降分析，每次向前查看一个输入 Token，来决定该用哪种产生式展开。对于变量声明语句的 FIRST 集合（推导结果的首个 Token 集合），只需检查输入 Token 为 Token(‘var’)、Token(‘let’)、Token(‘const’) 三者其中之一，那么就使用该产生式展开。首先构造 AST 最顶层结点 VariableDeclaration，把 Token(‘var’) 的值加入到该结点属性中， 接着逐个读入其余 Token，根据产生式的非终结符号从左到右的顺序，依次构造它的子结点，不断递归下降分析，直至所有 Token 读入完毕。最后生成的一棵 AST 如图所示：<br><img src=\"http://chuantu.xyz/t6/702/1564565441x1033347913.jpg\" alt=\"生成的AST树\"></p>\n<h3 id=\"生成代码\"><a href=\"#生成代码\" class=\"headerlink\" title=\"生成代码\"></a>生成代码</h3><p>工业级别的语言编译器，通常还会有语义分析阶段，检查程序上下文是否和语言所定义的语义一致，比如类型检查，作用域检查，另一个则是生成中间代码，比如三地址代码，用地址和指令来线性描述程序。但由于 Babel 的定位仅仅是对 ES 语法的转换，这一部分工作可以交给 JS 解释器引擎来处理。而 Babel 最为特色的部分是它的插件机制，针对不同的浏览器版本环境，调用不同的 Babel 插件。通过访问者模式（一种设计模式）的接口定义，对 AST 进行一遍深度优先遍历，对指定的匹配到的结点进行修改、删除、新增、移位，使原先的 AST 转换为另一棵经过修改的 AST。</p>\n"},{"title":"防止重复发送ajax的方法","date":"2014-09-27T09:24:54.000Z","_content":"\n防止重复发送ajax请求应该是web中很常见的应用场景\n\n### 常见思路：\n- 连续进行多次请求时，只执行最后一次请求\n- 连续进行多次请求，只执行第一次请求，后续请求全部终止\n\n### 具体方法\n- 同一时间只允许一次ajax请求操作，直到请求完成之后才能进行下一次请求\n\n- 不考虑之前的结果，所有的请求只以最后一次请求为最终结果\n\n- 多次的请求设置时间频率，一定时间间隔内只允许有一次请求，即任意请求之间必须大于一个指定时间\n","source":"_posts/防止重复发送ajax的方法.md","raw":"---\ntitle: 防止重复发送ajax的方法\ndate: 2014-09-27 17:24:54\ntags: Javascript\ncategories: 编程\n---\n\n防止重复发送ajax请求应该是web中很常见的应用场景\n\n### 常见思路：\n- 连续进行多次请求时，只执行最后一次请求\n- 连续进行多次请求，只执行第一次请求，后续请求全部终止\n\n### 具体方法\n- 同一时间只允许一次ajax请求操作，直到请求完成之后才能进行下一次请求\n\n- 不考虑之前的结果，所有的请求只以最后一次请求为最终结果\n\n- 多次的请求设置时间频率，一定时间间隔内只允许有一次请求，即任意请求之间必须大于一个指定时间\n","slug":"防止重复发送ajax的方法","published":1,"updated":"2022-09-08T14:51:06.974Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7t6krqq002ukp00019jgdw5","content":"<p>防止重复发送ajax请求应该是web中很常见的应用场景</p>\n<h3 id=\"常见思路：\"><a href=\"#常见思路：\" class=\"headerlink\" title=\"常见思路：\"></a>常见思路：</h3><ul>\n<li>连续进行多次请求时，只执行最后一次请求</li>\n<li>连续进行多次请求，只执行第一次请求，后续请求全部终止</li>\n</ul>\n<h3 id=\"具体方法\"><a href=\"#具体方法\" class=\"headerlink\" title=\"具体方法\"></a>具体方法</h3><ul>\n<li><p>同一时间只允许一次ajax请求操作，直到请求完成之后才能进行下一次请求</p>\n</li>\n<li><p>不考虑之前的结果，所有的请求只以最后一次请求为最终结果</p>\n</li>\n<li><p>多次的请求设置时间频率，一定时间间隔内只允许有一次请求，即任意请求之间必须大于一个指定时间</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>防止重复发送ajax请求应该是web中很常见的应用场景</p>\n<h3 id=\"常见思路：\"><a href=\"#常见思路：\" class=\"headerlink\" title=\"常见思路：\"></a>常见思路：</h3><ul>\n<li>连续进行多次请求时，只执行最后一次请求</li>\n<li>连续进行多次请求，只执行第一次请求，后续请求全部终止</li>\n</ul>\n<h3 id=\"具体方法\"><a href=\"#具体方法\" class=\"headerlink\" title=\"具体方法\"></a>具体方法</h3><ul>\n<li><p>同一时间只允许一次ajax请求操作，直到请求完成之后才能进行下一次请求</p>\n</li>\n<li><p>不考虑之前的结果，所有的请求只以最后一次请求为最终结果</p>\n</li>\n<li><p>多次的请求设置时间频率，一定时间间隔内只允许有一次请求，即任意请求之间必须大于一个指定时间</p>\n</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cl7t6krpy0008kp00gxv0hxkv","category_id":"cl7t6krpu0004kp00fuou61kq","_id":"cl7t6krq1000fkp009bnd0gyg"},{"post_id":"cl7t6krpn0001kp00cddf61ul","category_id":"cl7t6krpu0004kp00fuou61kq","_id":"cl7t6krq3000kkp005gj827se"},{"post_id":"cl7t6krq0000dkp00dyhb2279","category_id":"cl7t6krpz000akp0002gxa7ns","_id":"cl7t6krq4000nkp00cdia3djf"},{"post_id":"cl7t6krps0003kp0093xqg5kk","category_id":"cl7t6krpz000akp0002gxa7ns","_id":"cl7t6krq5000skp009vt8b3de"},{"post_id":"cl7t6krq0000ekp00e4fkar5w","category_id":"cl7t6krpz000akp0002gxa7ns","_id":"cl7t6krq6000vkp00alh22wja"},{"post_id":"cl7t6krq2000jkp008uidckig","category_id":"cl7t6krpz000akp0002gxa7ns","_id":"cl7t6krq70010kp006hfh1jsg"},{"post_id":"cl7t6krpw0007kp00cpgufiul","category_id":"cl7t6krpu0004kp00fuou61kq","_id":"cl7t6krqa0013kp002pim0upe"},{"post_id":"cl7t6krpy0009kp008x947shv","category_id":"cl7t6krpz000akp0002gxa7ns","_id":"cl7t6krqb0017kp00dpf973ii"},{"post_id":"cl7t6krq5000rkp0006z63504","category_id":"cl7t6krq6000xkp00d0ha5lwk","_id":"cl7t6krqe001ckp009l6rgyvm"},{"post_id":"cl7t6krqb0019kp0063hiaix5","category_id":"cl7t6krpu0004kp00fuou61kq","_id":"cl7t6krqf001ikp00b4ya6avv"},{"post_id":"cl7t6krq6000ukp000g8cf54w","category_id":"cl7t6krqb0016kp00a6zsc60m","_id":"cl7t6krqg001nkp00c7tj0drc"},{"post_id":"cl7t6krq7000zkp008txpdma9","category_id":"cl7t6krqe001dkp002x1v9ers","_id":"cl7t6krqh001skp00atbp8dk1"},{"post_id":"cl7t6krqg001mkp00hx3c9813","category_id":"cl7t6krpu0004kp00fuou61kq","_id":"cl7t6krqj001xkp007r8k1pl7"},{"post_id":"cl7t6krq80012kp00d154bbcz","category_id":"cl7t6krqe001dkp002x1v9ers","_id":"cl7t6krqj0022kp008dx5h6yf"},{"post_id":"cl7t6krqi001ukp00dy5i9rmu","category_id":"cl7t6krqe001dkp002x1v9ers","_id":"cl7t6krqk0025kp000zrm213u"},{"post_id":"cl7t6krqa0015kp005n3g47i1","category_id":"cl7t6krqe001dkp002x1v9ers","_id":"cl7t6krqn002akp00dfet3iot"},{"post_id":"cl7t6krqj0021kp00b9v7aqgb","category_id":"cl7t6krqe001dkp002x1v9ers","_id":"cl7t6krqn002dkp000w5hbpll"},{"post_id":"cl7t6krqe001bkp00cjhoc6j5","category_id":"cl7t6krqj001ykp00e91d9uta","_id":"cl7t6krqo002gkp00f2f758b8"},{"post_id":"cl7t6krqk0029kp001j4f8s5d","category_id":"cl7t6krpu0004kp00fuou61kq","_id":"cl7t6krqp002kkp00het07ps2"},{"post_id":"cl7t6krqf001fkp00f9zu67kj","category_id":"cl7t6krqj001ykp00e91d9uta","_id":"cl7t6krqp002nkp007l6s1dzt"},{"post_id":"cl7t6krqo002fkp00c65t216f","category_id":"cl7t6krpz000akp0002gxa7ns","_id":"cl7t6krqq002skp00h1u6dhgi"},{"post_id":"cl7t6krqo002jkp00ff5k6tqx","category_id":"cl7t6krpu0004kp00fuou61kq","_id":"cl7t6krqr002vkp00fbzgas3y"},{"post_id":"cl7t6krqf001hkp00a6iua026","category_id":"cl7t6krqo002ekp006ecidfq8","_id":"cl7t6krqr002zkp008xq3aeho"},{"post_id":"cl7t6krqp002mkp003rngbiyp","category_id":"cl7t6krpz000akp0002gxa7ns","_id":"cl7t6krqs0031kp00f10362gu"},{"post_id":"cl7t6krqh001pkp004vt3h6qx","category_id":"cl7t6krqp002okp00dinx5t7y","_id":"cl7t6krqt0035kp008w6e2no2"},{"post_id":"cl7t6krqq002ukp00019jgdw5","category_id":"cl7t6krpz000akp0002gxa7ns","_id":"cl7t6krqt0037kp00h4kz61nw"},{"post_id":"cl7t6krqi001wkp000z49ghzu","category_id":"cl7t6krqr002wkp0039ej13l6","_id":"cl7t6krqu003akp004w693mkj"},{"post_id":"cl7t6krqk0024kp00b97cgx1d","category_id":"cl7t6krqp002okp00dinx5t7y","_id":"cl7t6krqu003dkp00g7mhf5sm"},{"post_id":"cl7t6krqn002ckp006bmuh1vw","category_id":"cl7t6krqr002wkp0039ej13l6","_id":"cl7t6krqv003gkp00gjzsczxn"},{"post_id":"cl7t6krqq002rkp00fkzt0mpc","category_id":"cl7t6krqu003ckp003ftm88gu","_id":"cl7t6krqv003jkp003q4xcp69"}],"PostTag":[{"post_id":"cl7t6krpn0001kp00cddf61ul","tag_id":"cl7t6krpv0005kp002d7b7lck","_id":"cl7t6krpz000ckp00foar2175"},{"post_id":"cl7t6krq0000dkp00dyhb2279","tag_id":"cl7t6krpz000bkp006uw844eb","_id":"cl7t6krq2000ikp00hq8g0vc5"},{"post_id":"cl7t6krps0003kp0093xqg5kk","tag_id":"cl7t6krpz000bkp006uw844eb","_id":"cl7t6krq3000lkp007iel8cry"},{"post_id":"cl7t6krq0000ekp00e4fkar5w","tag_id":"cl7t6krpz000bkp006uw844eb","_id":"cl7t6krq5000qkp008s409qc9"},{"post_id":"cl7t6krq2000jkp008uidckig","tag_id":"cl7t6krpz000bkp006uw844eb","_id":"cl7t6krq6000tkp00d1lwgrur"},{"post_id":"cl7t6krpw0007kp00cpgufiul","tag_id":"cl7t6krpz000bkp006uw844eb","_id":"cl7t6krq7000ykp003z7h7txu"},{"post_id":"cl7t6krpy0008kp00gxv0hxkv","tag_id":"cl7t6krq4000pkp00avte04pd","_id":"cl7t6krq70011kp007z2687ml"},{"post_id":"cl7t6krpy0009kp008x947shv","tag_id":"cl7t6krpz000bkp006uw844eb","_id":"cl7t6krqb0018kp009wxk80yb"},{"post_id":"cl7t6krq5000rkp0006z63504","tag_id":"cl7t6krqa0014kp0036bb03sl","_id":"cl7t6krqe001ekp004732fjdq"},{"post_id":"cl7t6krqb0019kp0063hiaix5","tag_id":"cl7t6krpz000bkp006uw844eb","_id":"cl7t6krqf001gkp00aabna6sf"},{"post_id":"cl7t6krq6000ukp000g8cf54w","tag_id":"cl7t6krqc001akp00dsu066f9","_id":"cl7t6krqg001lkp00e70re1c4"},{"post_id":"cl7t6krqf001hkp00a6iua026","tag_id":"cl7t6krqa0014kp0036bb03sl","_id":"cl7t6krqh001okp00f4d0ejo7"},{"post_id":"cl7t6krqg001mkp00hx3c9813","tag_id":"cl7t6krpv0005kp002d7b7lck","_id":"cl7t6krqi001tkp00934v4zpm"},{"post_id":"cl7t6krq7000zkp008txpdma9","tag_id":"cl7t6krqg001jkp00d9263evh","_id":"cl7t6krqi001vkp0090ragw1z"},{"post_id":"cl7t6krqi001ukp00dy5i9rmu","tag_id":"cl7t6krqh001qkp00c8mh5qtp","_id":"cl7t6krqj0020kp004f8tc94e"},{"post_id":"cl7t6krq80012kp00d154bbcz","tag_id":"cl7t6krqh001qkp00c8mh5qtp","_id":"cl7t6krqk0023kp004ncv3yix"},{"post_id":"cl7t6krqj0021kp00b9v7aqgb","tag_id":"cl7t6krqh001qkp00c8mh5qtp","_id":"cl7t6krqk0028kp006kce99dc"},{"post_id":"cl7t6krqa0015kp005n3g47i1","tag_id":"cl7t6krqj001zkp007uttd5hx","_id":"cl7t6krqn002bkp00bkqmhpmw"},{"post_id":"cl7t6krqe001bkp00cjhoc6j5","tag_id":"cl7t6krqk0027kp001log43xv","_id":"cl7t6krqo002ikp009o7r5lvt"},{"post_id":"cl7t6krqo002fkp00c65t216f","tag_id":"cl7t6krpz000bkp006uw844eb","_id":"cl7t6krqp002lkp005zn856f4"},{"post_id":"cl7t6krqo002jkp00ff5k6tqx","tag_id":"cl7t6krqa0014kp0036bb03sl","_id":"cl7t6krqq002qkp0030pp15xk"},{"post_id":"cl7t6krqf001fkp00f9zu67kj","tag_id":"cl7t6krqk0027kp001log43xv","_id":"cl7t6krqq002tkp00a3hdblfn"},{"post_id":"cl7t6krqp002mkp003rngbiyp","tag_id":"cl7t6krpz000bkp006uw844eb","_id":"cl7t6krqr002ykp005uj1hnq2"},{"post_id":"cl7t6krqh001pkp004vt3h6qx","tag_id":"cl7t6krqp002pkp00cxhyhrpy","_id":"cl7t6krqs0030kp00dt9ngec2"},{"post_id":"cl7t6krqq002ukp00019jgdw5","tag_id":"cl7t6krpz000bkp006uw844eb","_id":"cl7t6krqs0034kp005d6hgrvh"},{"post_id":"cl7t6krqi001wkp000z49ghzu","tag_id":"cl7t6krqr002xkp002nta6qj9","_id":"cl7t6krqt0036kp008zz743st"},{"post_id":"cl7t6krqk0024kp00b97cgx1d","tag_id":"cl7t6krqp002pkp00cxhyhrpy","_id":"cl7t6krqu003bkp007r7je8pe"},{"post_id":"cl7t6krqk0029kp001j4f8s5d","tag_id":"cl7t6krqt0039kp003zf3dirk","_id":"cl7t6krqu003fkp004rmy52lj"},{"post_id":"cl7t6krqn002ckp006bmuh1vw","tag_id":"cl7t6krqr002xkp002nta6qj9","_id":"cl7t6krqv003ikp00d310d3oc"},{"post_id":"cl7t6krqq002rkp00fkzt0mpc","tag_id":"cl7t6krqv003hkp00a6t9hnnm","_id":"cl7t6krqv003kkp0008o44fno"}],"Tag":[{"name":"CSS","_id":"cl7t6krpv0005kp002d7b7lck"},{"name":"Javascript","_id":"cl7t6krpz000bkp006uw844eb"},{"name":"Eslint","_id":"cl7t6krq4000pkp00avte04pd"},{"name":"Jquery","_id":"cl7t6krqa0014kp0036bb03sl"},{"name":"Markdown","_id":"cl7t6krqc001akp00dsu066f9"},{"name":"React-Native","_id":"cl7t6krqg001jkp00d9263evh"},{"name":"React","_id":"cl7t6krqh001qkp00c8mh5qtp"},{"name":"Redux","_id":"cl7t6krqj001zkp007uttd5hx"},{"name":"Vue","_id":"cl7t6krqk0027kp001log43xv"},{"name":"Nodejs","_id":"cl7t6krqp002pkp00cxhyhrpy"},{"name":"Cypress","_id":"cl7t6krqr002xkp002nta6qj9"},{"name":"前端技能","_id":"cl7t6krqt0039kp003zf3dirk"},{"name":"Babel","_id":"cl7t6krqv003hkp00a6t9hnnm"}]}}